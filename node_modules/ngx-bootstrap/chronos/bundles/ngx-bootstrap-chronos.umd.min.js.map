{"version":3,"sources":["ng://ngx-bootstrap/chronos/utils.ts","ng://ngx-bootstrap/chronos/utils/type-checks.ts","ng://ngx-bootstrap/chronos/units/aliases.ts","ng://ngx-bootstrap/chronos/units/constants.ts","ng://ngx-bootstrap/chronos/utils/zero-fill.ts","ng://ngx-bootstrap/chronos/format/format.ts","ng://ngx-bootstrap/chronos/create/date-from-array.ts","ng://ngx-bootstrap/chronos/utils/date-getters.ts","ng://ngx-bootstrap/chronos/parse/regex.ts","ng://ngx-bootstrap/chronos/parse/token.ts","ng://ngx-bootstrap/chronos/create/parsing-flags.ts","ng://ngx-bootstrap/chronos/units/year.ts","ng://ngx-bootstrap/chronos/units/month.ts","ng://ngx-bootstrap/chronos/units/day-of-month.ts","ng://ngx-bootstrap/chronos/utils/date-setters.ts","ng://ngx-bootstrap/chronos/create/clone.ts","ng://ngx-bootstrap/chronos/utils/start-end-of.ts","ng://ngx-bootstrap/chronos/units/day-of-week.ts","ng://ngx-bootstrap/chronos/units/day-of-year.ts","ng://ngx-bootstrap/chronos/units/week-calendar-utils.ts","ng://ngx-bootstrap/chronos/locale/locale.class.ts","ng://ngx-bootstrap/chronos/locale/calendar.ts","ng://ngx-bootstrap/chronos/locale/locale.defaults.ts","ng://ngx-bootstrap/chronos/utils/compare-arrays.ts","ng://ngx-bootstrap/chronos/locale/locales.ts","ng://ngx-bootstrap/chronos/duration/valid.ts","ng://ngx-bootstrap/chronos/utils/abs-ceil.ts","ng://ngx-bootstrap/chronos/duration/bubble.ts","ng://ngx-bootstrap/chronos/duration/humanize.ts","ng://ngx-bootstrap/chronos/duration/constructor.ts","ng://ngx-bootstrap/chronos/create/valid.ts","ng://ngx-bootstrap/chronos/create/from-string.ts","ng://ngx-bootstrap/chronos/format.ts","ng://ngx-bootstrap/chronos/utils/defaults.ts","ng://ngx-bootstrap/chronos/create/from-array.ts","ng://ngx-bootstrap/chronos/create/check-overflow.ts","ng://ngx-bootstrap/chronos/create/from-string-and-format.ts","ng://ngx-bootstrap/chronos/create/from-object.ts","ng://ngx-bootstrap/chronos/create/from-anything.ts","ng://ngx-bootstrap/chronos/create/from-string-and-array.ts","ng://ngx-bootstrap/chronos/create/local.ts","ng://ngx-bootstrap/chronos/utils/abs-round.ts","ng://ngx-bootstrap/chronos/units/offset.ts","ng://ngx-bootstrap/chronos/utils/date-compare.ts","ng://ngx-bootstrap/chronos/duration/create.ts","ng://ngx-bootstrap/chronos/units/millisecond.ts","ng://ngx-bootstrap/chronos/moment/add-subtract.ts","ng://ngx-bootstrap/chronos/units/hour.ts","ng://ngx-bootstrap/chronos/units/week.ts","ng://ngx-bootstrap/chronos/units/week-year.ts","ng://ngx-bootstrap/chronos/units/minute.ts","ng://ngx-bootstrap/chronos/units/quarter.ts","ng://ngx-bootstrap/chronos/units/second.ts","ng://ngx-bootstrap/chronos/units/timestamp.ts","ng://ngx-bootstrap/chronos/i18n/ar.ts","ng://ngx-bootstrap/chronos/i18n/cs.ts","ng://ngx-bootstrap/chronos/i18n/da.ts","ng://ngx-bootstrap/chronos/i18n/de.ts","ng://ngx-bootstrap/chronos/i18n/en-gb.ts","ng://ngx-bootstrap/chronos/i18n/es.ts","ng://ngx-bootstrap/chronos/i18n/es-do.ts","ng://ngx-bootstrap/chronos/i18n/es-us.ts","ng://ngx-bootstrap/chronos/i18n/fi.ts","ng://ngx-bootstrap/chronos/i18n/fr.ts","ng://ngx-bootstrap/chronos/i18n/gl.ts","ng://ngx-bootstrap/chronos/i18n/he.ts","ng://ngx-bootstrap/chronos/i18n/hi.ts","ng://ngx-bootstrap/chronos/i18n/hu.ts","ng://ngx-bootstrap/chronos/i18n/id.ts","ng://ngx-bootstrap/chronos/i18n/it.ts","ng://ngx-bootstrap/chronos/i18n/ja.ts","ng://ngx-bootstrap/chronos/i18n/ko.ts","ng://ngx-bootstrap/chronos/i18n/mn.ts","ng://ngx-bootstrap/chronos/i18n/nl.ts","ng://ngx-bootstrap/chronos/i18n/nl-be.ts","ng://ngx-bootstrap/chronos/i18n/pl.ts","ng://ngx-bootstrap/chronos/i18n/pt-br.ts","ng://ngx-bootstrap/chronos/i18n/ru.ts","ng://ngx-bootstrap/chronos/i18n/ro.ts","ng://ngx-bootstrap/chronos/i18n/sk.ts","ng://ngx-bootstrap/chronos/i18n/sl.ts","ng://ngx-bootstrap/chronos/i18n/sv.ts","ng://ngx-bootstrap/chronos/i18n/th.ts","ng://ngx-bootstrap/chronos/i18n/tr.ts","ng://ngx-bootstrap/chronos/i18n/zh-cn.ts"],"names":["absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","length","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","isUTC","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","isSameMonth","date1","date2","isSameYear","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","unescapeFormat","regexEscape","replace","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","array","config","i","addWeekParseToken","_w","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getYear","parseTwoDigitYear","daysInYear","year","isLeapYear","daysInMonth$1","month","NaN","modMonth","mod","n","x","_dayOfMonthOrdinalParse","_ordinalParse","match","parseInt","monthsShort","format","months","monthsShortRegex","monthsRegex","_locale","monthsParse","_strict","defaultTimeUnit","day","seconds","getNum","def","setMonth","dayOfMonth","min","daysInMonth","setUTCMonth","setDate","setUTCDate","cloneDate","startOf","_date","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setLocaleDayOfWeek","weekday","getLocaleDayOfWeek","add","setISODayOfWeek","parseIsoWeekday","getLocale","weekdaysParse","setDayOfWeek","getDayOfWeek","endOf","subtract","getDayOfYear","someDate","round","firstWeekOffset","dow","doy","fwd","weekOfYear","resWeek","resYear","weekOffset","week","weeksInYear","weekOffsetNext","_dayOfYear","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultMonthsShortRegex","defaultMonthsRegex","Locale","this","set","confKey","prop","_config","calendar","key","now","output","_calendar","longDateFormat","_longDateFormat","formatUpper","toUpperCase","val","slice","defineProperty","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","_months","standalone","isFormat","test","_monthsShort","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","computeMonthsParse","_monthsStrictRegex","_monthsRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfWeek","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","ii","mom","llc","toLocaleLowerCase","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","baseConfig","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","invalidDate","dayOfMonthOrdinalParse","future","past","ss","mm","hh","dd","MM","yy","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","globalLocale","locales","localeFamilies","normalizeLocale","mergeConfigs","parentConfig","childConfig","parentProp","res","assign","childProp","loadLocale","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","chooseLocale","names","next","j","ordering","orderingHash","reduce","mem","order","absCeil","number","daysToMonths","monthsToDays","thresholds","Duration","duration","normalizedInput","years","quarters","quarter","weeks","days","milliseconds","_isValid","isDurationValid","keys","some","unitHasDecimal","_milliseconds","_days","bubble","dur","_data","monthsFromDays","isValid","humanize","withSuffix","localeData","posNegDuration","createDuration","as","substituteTimeAgo","localeKey","mathAbs","_units","Error","valueOf","flags","parsedParts","isNowValid","_d","invalidWeekday","bigHour","isFrozen","createInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","allowTime","dateFormat","timeFormat","tzFormat","l","exec","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","configFromRFC2822","preprocessRFC2822","trim","markInvalid","parsedArray","checkWeekday","weekdayStr","parsedInput","_a","_tzm","calculateOffset","obsOffset","militaryOffset","numOffset","hm","expandFormat","_format","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","currentDateArray","nowValue","_useUTC","dayOfYearFromWeekInfo","w","weekYear","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","dayOfYearFromWeeks","resDayOfYear","dayOfYear","_overflowDayOfYear","_nextDay","checkOverflow","ISO_8601","RFC_2822","skipped","totalParsedInputLength","inputLength","_meridiem","meridiemFixWrap","_hour","meridiemHour","isPm","configFromObject","normalizeObjectUnits","inputObject","normalizedProp","map","obj","createFromConfig","prepareConfig","_l","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromInput","configFromString","_arr","createLocalOrUTC","_input","isObjectEmpty","getOwnPropertyNames","k","_isUTC","parseDate","absRound","addOffsetFormatToken","separator","offset","getUTCOffset","_offset","getDateOffset","getTimezoneOffset","sign","offsetFromString","matcher","matches","parts","chunkOffset","_min","isAfter","isBefore","aspNetRegex","isoRegex","convertDuration","isDuration","parseIso","diffRes","momentsDifference","base","other","_other","cloneWithOffset","offsetDiff","setTime","positiveMomentsDifference","from","to","inp","parseFloat","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","hFormat","lowercase","matchMeridiem","_meridiemParse","getISODayOfWeek","kFormat","kInput","_isPm","pos","pos1","pos2","parseMs","getWeek","addWeekYearFormatToken","getter","_getWeekYearFormatCb","getWeekYear","_getISOWeekYearFormatCb","getISOWeekYear","getQuarter","unix","getISOWeek","symbolMap","1","2","3","4","5","6","7","8","9","0","numberMap","١","٢","٣","٤","٥","٦","٧","٨","٩","٠","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","plural","translate","csLocale","months$1","shortMonthsParse","longMonthsParse","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","Number","monthsShortDot","esLocale","monthsStrictRegex","monthsShortStrictRegex","esDoLocale","monthsRegex$1","monthsParse$1","esUsLocale","numbersPast","numbersFuture","translate$1","verbalNumber","fiLocale","ll","lll","llll","frLocale","glLocale","monthsRegex$2","monthsParse$2","heLocale","१","२","३","४","५","६","७","८","९","०","hiLocale","weekEndings","translate$2","huLocale","idLocale","itLocale","jaLocale","koLocale","isUpper","translate$3","mnLocale","monthsShortWithDots","monthsShortWithoutDots","nlLocale","monthsRegex$3","monthsParse$3","nlBeLocale","monthsRegex$4","monthsParse$4","monthsNominative","monthsSubjective","plural$1","translate$4","plLocale","ptBrLocale","relativeTimeWithPlural","plural$2","word","forms","ruLocale","monthsParse$5","relativeTimeWithPlural$1","roLocale","plural$3","translate$5","skLocale","processRelativeTime$1","slLocale","svLocale","thLocale","suffixes","70","80","20","50","100","10","30","60","90","trLocale","zhCnLocale","isFirstDayOfWeek","isSameDay","getFirstDayOfMonth","formatDate","formatMoment","makeFormatFunction","formatArr","listLocales","updateLocale","tmpLocale","shiftDate","setFullDate"],"mappings":"+QAMA,SAAAA,EAAyBC,GACvB,OAAOA,EAAM,EAAIC,KAAKC,KAAKF,IAAQ,EAAIC,KAAKE,MAAMH,GCLpD,SAAAI,EAAyBC,GACvB,MAAsB,iBAARA,EAGhB,SAAAC,EAAuBC,GACrB,OAAOA,aAAiBC,MAAkD,kBAA1CC,OAAOC,UAAUC,SAASC,KAAKL,GAOjE,SAAAM,EAA4BC,GAC1B,OAAOA,GAAQA,EAAKC,UAAYC,MAAMF,EAAKC,WAG7C,SAAAE,EAA2BC,GACzB,OACEA,aAAcC,UACyB,sBAAvCV,OAAOC,UAAUC,SAASC,KAAKM,GAInC,SAAAE,EAAyBb,GACvB,MAAwB,iBAAVA,GAAgE,oBAA1CE,OAAOC,UAAUC,SAASC,KAAKL,GAGrE,SAAAc,EAA2BC,GACzB,OACEA,aAAiBC,OACyB,mBAA1Cd,OAAOC,UAAUC,SAASC,KAAKU,GAMnC,SAAAE,EAA8BC,EAAiBC,GAC7C,OAAOjB,OAAOC,UAAUiB,eAAef,KAAKa,EAAGC,GAGjD,SAAAE,EAA4BN,GAG1B,OACW,MAATA,GAA2D,oBAA1Cb,OAAOC,UAAUC,SAASC,KAAKU,GAmBpD,SAAAO,EAA4BP,GAC1B,YAAiB,IAAVA,EAGT,SAAAQ,EAAyBC,GACvB,IAAMC,GAAiBD,EACnBxB,EAAQ,EAMZ,OAJsB,IAAlByB,GAAuBC,SAASD,KAClCzB,EAAQR,EAASiC,IAGZzB,EC1ET,IAAM2B,EAAqC,GAKrCC,EAA2C,CAC/CrB,KAAM,MACNsB,KAAM,QACNC,OAAQ,UACRC,OAAQ,UACRC,YAAa,gBAGf,SAAAC,EAA6BC,EAA0BC,GACrD,IAAMC,EAAYF,EAAKG,cACnBC,EAAQJ,EACRE,KAAaR,IACfU,EAAQV,EAAUQ,IAEpBT,EAAQS,GAAaT,EAAWS,EAAS,KAAOT,EAAQQ,GAAaG,EAGvE,SAAAC,EAA+BC,GAC7B,OAAO3C,EAAS2C,GAASb,EAAQa,IAAUb,EAAQa,EAAMH,eAAiBI,UCzBrE,IAAMC,EAAO,EACPC,EAAQ,EACRC,EAAO,EACPC,EAAO,EACPC,EAAS,EACTC,EAAS,EACTC,EAAc,EACdC,EAAO,EACPC,EAAU,ECTvB,SAAAC,EAAyB1D,EACA2D,EACAC,GACvB,IAAMC,EAAY,GAAG5D,KAAK6D,IAAI9D,GACxB+D,EAAcJ,EAAeE,EAAUG,OAM7C,OALoB,GAAPhE,EACS4D,EAAY,IAAM,GAAM,KAE/B3D,KAAKgE,IAAI,GAAIhE,KAAKiE,IAAI,EAAGH,IAAcpD,WAAWwD,OAAO,GAE/CN,ECLpB,IAAIO,EAEP,GACOC,EAA2D,GAGzDC,EAAmB,uLAMhC,SAAAC,EAA+BC,EACAC,EACAC,EACAC,GACzBH,IACFH,EAAqBG,GAASG,GAG5BF,IACFJ,EAAqBI,EAAO,IAAM,WAChC,OAAOf,EAASiB,EAASC,MAAM,KAAMC,WAAYJ,EAAO,GAAIA,EAAO,MAInEC,IACFL,EAAqBK,GAAW,SAAU5D,EAAYgE,GACpD,OAAOA,EAAKC,OAAOL,QAAQC,EAASC,MAAM,KAAMC,WAAYL,KCjClE,SAAAQ,EAA8BC,EACAC,EACAC,GAC5B,IAAMrE,EAAO,IAAIN,KAAKA,KAAK4E,IAAIR,MAAM,KAAMC,YAO3C,OAJII,EAAI,KAAY,GAALA,GAAUhD,SAASnB,EAAKuE,mBACrCvE,EAAKwE,eAAeL,GAGfnE,EAGT,SAAAyE,EAA2BN,EACAC,EACAC,EACAK,EACAC,EACAC,EACAC,QALA,IAAAT,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAK,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,QACA,IAAAC,IAAAA,EAAA,GACzB,IAAM7E,EAAO,IAAIN,KAAKyE,EAAGC,EAAGC,EAAGK,EAAGC,EAAGC,EAAGC,GAOxC,OAJIV,EAAI,KAAY,GAALA,GAAUhD,SAASnB,EAAK8E,gBACrC9E,EAAK+E,YAAYZ,GAGZnE,ECzBT,SAAAgF,EAAyBhF,EAAYiF,GACnC,YADmC,IAAAA,IAAAA,GAAA,GAC5BA,EAAQjF,EAAKkF,cAAgBlF,EAAKgF,WAG3C,SAAAG,EAA2BnF,EAAYiF,GACrC,YADqC,IAAAA,IAAAA,GAAA,GAC9BA,EAAQjF,EAAKoF,gBAAkBpF,EAAKmF,aAG7C,SAAAE,EAA2BrF,EAAYiF,GACrC,YADqC,IAAAA,IAAAA,GAAA,GAC9BA,EAAQjF,EAAKsF,gBAAkBtF,EAAKqF,aAG7C,SAAAE,EAAgCvF,EAAYiF,GAC1C,YAD0C,IAAAA,IAAAA,GAAA,GACnCA,EAAQjF,EAAKwF,qBAAuBxF,EAAKuF,kBAMlD,SAAAE,EAAuBzF,EAAYiF,GACjC,YADiC,IAAAA,IAAAA,GAAA,GAC1BA,EAAQjF,EAAK0F,YAAc1F,EAAKyF,SAGzC,SAAAE,EAAwB3F,EAAYiF,GAClC,YADkC,IAAAA,IAAAA,GAAA,GAC3BA,EAAQjF,EAAK4F,aAAe5F,EAAK2F,UAG1C,SAAAE,EAAyB7F,EAAYiF,GACnC,YADmC,IAAAA,IAAAA,GAAA,GAC5BA,EAAQjF,EAAK8F,cAAgB9F,EAAK6F,WAG3C,SAAAf,EAA4B9E,EAAYiF,GACtC,YADsC,IAAAA,IAAAA,GAAA,GAC/BA,EAAQjF,EAAKuE,iBAAmBvE,EAAK8E,cAkC9C,SAAAiB,EAA4BC,EAAaC,GACvC,SAAKD,IAAUC,KAIRC,EAAWF,EAAOC,IAAUJ,EAASG,KAAWH,EAASI,IAGlE,SAAAC,EAA2BF,EAAaC,GACtC,SAAKD,IAAUC,IAIRnB,EAAYkB,KAAWlB,EAAYmB,GC9ErC,IAAME,EAAS,KACTC,EAAS,OACTC,EAAS,QACTC,EAAS,QACTC,EAAS,aACTC,EAAY,QACZC,EAAY,YACZC,EAAY,gBACZC,EAAY,UACZC,EAAY,UACZC,EAAY,eAEZC,EAAgB,MAChBC,GAAc,WAGdC,GAAmB,0BAOnBC,GAAY,2IAGnBC,GAA0C,GAGhD,SAAAC,GAA8BzD,EAAe0D,EAA+BC,GACtElH,EAAWiH,GACbF,GAAQxD,GAAS0D,EAKnBF,GAAQxD,GAAS,SAAU4D,EAAmBrD,GAC5C,OAAQqD,GAAYD,EAAeA,EAAcD,GAIrD,SAAAG,GAAsC7D,EAAeO,GAEnD,OAAKvD,EAAWwG,GAASxD,GAIlBwD,GAAQxD,IALC,EAKeO,GAHtB,IAAIuD,OAOf,SAAAC,EAAwBlI,GAEtB,OAAOmI,GAAYnI,EAChBoI,QAAQ,KAAM,IACdA,QAAQ,sCAAuC,SAACC,EAASC,EAAIC,EAAIC,EAAIC,GAAO,OAAAH,GAAMC,GAAMC,GAAMC,KAX7EP,CAAe/D,IAerC,SAAAgE,GAA4BnI,GAC1B,OAAOA,EAAIoI,QAAQ,yBAA0B,QC1D/C,IAAMM,GAA4C,GAElD,SAAAC,GAA8BxE,EAA0BG,GACtD,IAAMsE,EAAS7I,EAASoE,GAAS,CAACA,GAASA,EACvC0E,EAAOvE,EAUX,GARIvD,EAASuD,KACXuE,EAAO,SAAU5H,EAAe6H,EAAkBC,GAGhD,OAFAD,EAAMxE,GAAY7C,EAAMR,GAEjB8H,IAIP/H,EAAgB4H,IAAWhI,EAAWiI,GAAO,CAC/C,IAAIG,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAIJ,EAAOjF,OAAQqF,IAC7BN,GAAOE,EAAOI,IAAMH,GAK1B,SAAAI,GAAkC9E,EAAiBG,GACjDqE,GAAcxE,EAAO,SAAUlD,EAAe6H,EAAkBC,EAA2BH,GAGzF,OAFAG,EAAOG,GAAKH,EAAOG,IAAM,GAElB5E,EAASrD,EAAO8H,EAAOG,GAAIH,EAAQH,KCT9C,SAAAO,GAAgCJ,GAK9B,OAJkB,MAAdA,EAAOK,MACTL,EAAOK,IApBF,CACLC,OAAO,EACPC,aAAc,GACdC,YAAa,GACbC,UAAW,EACXC,cAAe,EACfC,WAAW,EACXC,aAAc,KACdC,eAAe,EACfC,iBAAiB,EACjBC,KAAK,EACLC,gBAAiB,GACjBC,SAAU,KACVC,SAAS,EACTC,iBAAiB,IASZnB,EAAOK,ICfhB,SAAAe,GAAiB1J,EAAYgE,GAC3B,OAAOc,EAAY9E,EAAMgE,EAAKiB,OAAOpF,WAoDvC,SAAA8J,GAAkCnJ,GAChC,OAAOQ,EAAMR,IAAyB,GAAfQ,EAAMR,GAAc,KAAO,KAGpD,SAAAoJ,GAA2BC,GACzB,OAAOC,GAAWD,GAAQ,IAAM,IAGlC,SAAAC,GAA2BD,GACzB,OAAQA,EAAO,GAAM,GAAKA,EAAO,KAAQ,GAAMA,EAAO,KAAQ,EC3DhE,SAAAE,GAA4BF,EAAcG,GACxC,GAAI9J,MAAM2J,IAAS3J,MAAM8J,GACvB,OAAOC,IAET,IAAMC,EZjBR,SAAAC,EAAoBC,EAAWC,GAC7B,OAAQD,EAAIC,EAAIA,GAAKA,EYgBJF,CAAIH,EAAO,IAG5B,OAAoB,IAAbE,EACHJ,GAHUD,GAAQG,EAAQE,GAAY,IAGlB,GAAK,GACxB,GAAKA,EAAW,EAAI,ECX3BzG,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAO2B,EAAQ3F,EAAMgE,EAAKiB,OAAOpF,SAAS,MAK9C6B,EAAa,OAAQ,KAOrByF,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,KAAM,SAAUG,EAAUrD,GACtC,OAAOA,EAAOqG,yBAA2BrG,EAAOsG,gBAGlDrC,GAAc,CAAC,IAAK,MAAO7F,GAC3B6F,GAAc,KACZ,SAAU1H,EAAe6H,EAAkBC,GAGzC,OAFAD,EAAMhG,GAAQrB,EAAMR,EAAMgK,MAAMhE,GAAW,IAEpC8B,IFtBX7E,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACtB,IAAMG,EAAIW,EAAY9E,EAAMgE,EAAKiB,OAEjC,OAAOd,GAAK,KAAOA,EAAEtE,SAAS,IAAM,IAAIsE,IAG1CV,EAAe,KAAM,CAAC,KAAM,GAAG,GAAQ,KACrC,SAAUzD,EAAYgE,GACtB,OAAQc,EAAY9E,EAAMgE,EAAKiB,OAAS,KAAKpF,SAAS,MAGxD4D,EAAe,KAAM,CAAC,OAAQ,GAAG,GAAQ,KAAMiG,IAC/CjG,EAAe,KAAM,CAAC,QAAS,GAAG,GAAQ,KAAMiG,IAChDjG,EAAe,KAAM,CAAC,SAAU,GAAG,GAAO,KAAMiG,IAIhDhI,EAAa,OAAQ,KAQrByF,GAAc,IAAKJ,IACnBI,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,OAAQP,EAAWN,GACjCa,GAAc,QAASN,EAAWN,GAClCY,GAAc,SAAUN,EAAWN,GAEnC2B,GAAc,CAAC,QAAS,UAAW/F,GACnC+F,GAAc,OAAQ,SAAU1H,EAAO6H,EAAOC,GAG5C,OAFAD,EAAMlG,GAAyB,IAAjB3B,EAAM0C,OAAeyG,GAAkBnJ,GAASQ,EAAMR,GAE7D8H,IAETJ,GAAc,KAAM,SAAU1H,EAAO6H,EAAOC,GAG1C,OAFAD,EAAMlG,GAAQwH,GAAkBnJ,GAEzB8H,IAETJ,GAAc,IAAK,SAAU1H,EAAO6H,EAAOC,GAGzC,OAFAD,EAAMlG,GAAQsI,SAASjK,EAAO,IAEvB8H,ICjCT7E,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAQ6B,EAAS7F,EAAMgE,EAAKiB,OAAS,GAAGpF,SAAS,MAGrD4D,EAAe,MAAO,KAAM,KAC1B,SAAUzD,EAAYgE,GACpB,OAAOA,EAAKC,OAAOyG,YAAY1K,EAAMgE,EAAK2G,OAAQ3G,EAAKiB,SAG3DxB,EAAe,OAAQ,KAAM,KAC3B,SAAUzD,EAAYgE,GACpB,OAAOA,EAAKC,OAAO2G,OAAO5K,EAAMgE,EAAK2G,OAAQ3G,EAAKiB,SAMtDvD,EAAa,QAAS,KAQtByF,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,MAAO,SAAUG,EAAUrD,GACvC,OAAOA,EAAO4G,iBAAiBvD,KAEjCH,GAAc,OAAQ,SAAUG,EAAUrD,GACxC,OAAOA,EAAO6G,YAAYxD,KAG5BY,GAAc,CAAC,IAAK,MAAO,SAAU1H,EAAe6H,EAAkBC,GAGpE,OAFAD,EAAMjG,GAASpB,EAAMR,GAAS,EAEvB8H,IAGTJ,GAAc,CAAC,MAAO,QACpB,SAAU1H,EAAe6H,EAAkBC,EAA2B5E,GACpE,IAAMsG,EAAQ1B,EAAOyC,QAAQC,YAAYxK,EAAOkD,EAAO4E,EAAO2C,SAQ9D,OANa,MAATjB,EACF3B,EAAMjG,GAAS4H,EAEftB,GAAgBJ,GAAQY,eAAiB1I,EAGpC8H,IEzEX,IAAM4C,GAA4B,CAChCrB,KAAM,EACNG,MAAO,EACPmB,IAAK,EACL7J,KAAM,EACNC,OAAQ,EACR6J,QAAS,GAkCX,SAAAC,GAAgBC,EAAapM,GAC3B,OAAOoB,EAASpB,GAAOA,EAAMoM,EAiB/B,SAAAC,GAAyBvL,EAAYP,EAAewF,GAClD,IAAMuG,EAAarM,KAAKsM,IAAI9F,EAAQ3F,GAAO0L,GAAY5G,EAAY9E,GAAOP,IAG1E,OAFAwF,EAAQjF,EAAK2L,YAAYlM,EAAO+L,GAAcxL,EAAKuL,SAAS9L,EAAO+L,GAE5DxL,EAiCT,SAAA4L,GAAwB5L,EAAYP,EAAewF,GAGjD,OAFAA,EAAQjF,EAAK6L,WAAWpM,GAASO,EAAK4L,QAAQnM,GAEvCO,ECvGT,SAAA8L,GAA0B9L,GACxB,OAAO,IAAIN,KAAKM,EAAKC,WCQvB,SAAA8L,GAAwB/L,EAAY2B,EAAkBsD,GACpD,IAAM+G,EAAQF,GAAU9L,GAGxB,OAAQ2B,GACN,IAAK,OACH4J,GAASS,EAAO,EAAG/G,GAErB,IAAK,UACL,IAAK,QACH2G,GAAQI,EAAO,EAAG/G,GAEpB,IAAK,OACL,IAAK,UACL,IAAK,MACL,IAAK,QFoDT,SAAAgH,EAAyBjM,EAAYP,EAAewF,GAGlD,OAFAA,EAAQjF,EAAKkM,YAAYzM,GAASO,EAAKiM,SAASxM,GAEzCO,EEtDHiM,CAASD,EAAO,EAAG/G,GAErB,IAAK,SFuDT,SAAAkH,EAA2BnM,EAAYP,EAAewF,GAGpD,OAFAA,EAAQjF,EAAKoM,cAAc3M,GAASO,EAAKmM,WAAW1M,GAE7CO,EEzDHmM,CAAWH,EAAO,EAAG/G,GAEvB,IAAK,WF0DT,SAAAoH,EAA2BrM,EAAYP,EAAewF,GAGpD,OAFAA,EAAQjF,EAAKsM,cAAc7M,GAASO,EAAKqM,WAAW5M,GAE7CO,EE5DHqM,CAAWL,EAAO,EAAG/G,GAEvB,IAAK,WF6DT,SAAAsH,EAAgCvM,EAAYP,EAAewF,GAGzD,OAFAA,EAAQjF,EAAKwM,mBAAmB/M,GAASO,EAAKuM,gBAAgB9M,GAEvDO,EE/DHuM,CAAgBP,EAAO,EAAG/G,GAgB9B,MAZa,SAATtD,GC+GN,SAAA8K,EAAmCzM,EAAYQ,EAAewD,QAAA,IAAAA,IAAAA,EAAA,IAC5D,IAAM0I,EAAUC,GAAmB3M,EAAMgE,EAAKC,OAAQD,EAAKiB,OAE3D,OAAO2H,GAAI5M,EAAMQ,EAAQkM,EAAS,ODjHhCD,CAAmBT,EAAO,EAAG,CAAC/G,MAAKA,IAExB,YAATtD,GCwHN,SAAAkL,EAAgC7M,EAAYQ,EAAwBwD,QAAA,IAAAA,IAAAA,EAAA,IAKlE,IAAM0I,EAtDR,SAAAI,EAAgCtM,EAAwByD,QAAA,IAAAA,IAAAA,EAAiB8I,MACvE,GAAIzN,EAASkB,GACX,OAAOyD,EAAO+I,cAAcxM,GAAS,GAAK,EAG5C,OAAOF,EAASE,IAAUN,MAAMM,GAAS,KAAOA,EAiDhCsM,CAAgBtM,EAAOwD,EAAKC,QAE5C,OAAOgJ,GAAajN,EAAMkN,GAAalN,GAAQ,EAAI0M,EAAUA,EAAU,GD9HrEG,CAAgBb,EAAO,GAIZ,YAATrK,GACF4J,GAASS,EAAgD,EAAzC7M,KAAKE,MAAMwG,EAASmG,EAAO/G,GAAS,GAAQA,GAGvD+G,EAGT,SAAAmB,GAAsBnN,EAAY2B,EAAkBsD,GAClD,IAAIlD,EAAQJ,EAUZ,MARc,SAAVI,IACFA,EAAQ,OAKEqL,GADER,GADAb,GAAQ/L,EAAM+B,EAAOkD,GACV,EAAa,YAAVlD,EAAsB,OAASA,EAAOkD,GACtC,EAAG,eAAgBA,GE5BjD,SAAAoI,GAA6BrN,EAAYiF,GACvC,IAEMqI,GAFSvB,GAAQ/L,EAAM,MAAOiF,IACrB8G,GAAQ/L,EAAM,OAAQiF,GAIrC,OAAO9F,KAAKoO,MAAMD,EAFH,OAEwB,EC9BzC,SAAAE,GAAyB3D,EAAc4D,EAAaC,GAElD,IAAMC,EAAMF,EAAMC,EAAM,EAIxB,SAFexJ,EAAc2F,EAAM,EAAG8D,GAAKjI,YAAc+H,EAAM,GAAK,GAEpDE,EAAM,EAkCxB,SAAAC,GAA2B5N,EAAYyN,EAAaC,EAAazI,GAC/D,IAEI4I,EACAC,EAHEC,EAAaP,GAAgB1I,EAAY9E,EAAMiF,GAAQwI,EAAKC,GAC5DM,EAAO7O,KAAKE,OAAOgO,GAAarN,EAAMiF,GAAS8I,EAAa,GAAK,GAAK,EAe5E,OAXIC,EAAO,EAETH,EAAUG,EAAOC,GADjBH,EAAUhJ,EAAY9E,EAAMiF,GAAS,EACCwI,EAAKC,GAClCM,EAAOC,GAAYnJ,EAAY9E,EAAMiF,GAAQwI,EAAKC,IAC3DG,EAAUG,EAAOC,GAAYnJ,EAAY9E,EAAMiF,GAAQwI,EAAKC,GAC5DI,EAAUhJ,EAAY9E,EAAMiF,GAAS,IAErC6I,EAAUhJ,EAAY9E,EAAMiF,GAC5B4I,EAAUG,GAGL,CACLA,KAAMH,EACNhE,KAAMiE,GAIV,SAAAG,GAA4BpE,EAAc4D,EAAaC,GACrD,IAAMK,EAAaP,GAAgB3D,EAAM4D,EAAKC,GACxCQ,EAAiBV,GAAgB3D,EAAO,EAAG4D,EAAKC,GAEtD,OAAQ9D,GAAWC,GAAQkE,EAAaG,GAAkB,EDlE5DzK,EAAe,MAAO,CAAC,OAAQ,GAAG,GAAQ,OACxC,SAAUzD,GACR,OAAOqN,GAAarN,GAAMH,SAAS,MAMvC6B,EAAa,YAAa,OAM1ByF,GAAc,MAAOR,GACrBQ,GAAc,OAAQd,GACtB6B,GAAc,CAAC,MAAO,QACpB,SAAU1H,EAAe6H,EAAkBC,GAGzC,OAFAA,EAAO6F,WAAanN,EAAMR,GAEnB8H,IEjBX,IAAM8F,GAAmB,gCACZC,GAAsB,wFAAwFC,MACzH,KAEWC,GAA2B,kDAAkDD,MACxF,KAEWE,GAAwB,2DAA2DF,MAC9F,KAEWG,GAA6B,8BAA8BH,MACtE,KAEWI,GAA2B,uBAAuBJ,MAAM,KACxDK,GAAqD,CAChEC,IAAK,YACLC,GAAI,SACJC,EAAG,aACHC,GAAI,eACJC,IAAK,sBACLC,KAAM,6BAMFC,GAA0BjI,GAC1BkI,GAAqBlI,GAuD3BmI,GAAA,WA4CE,SAAAA,EAAY9G,GACJA,GACJ+G,KAAKC,IAAIhH,UAIb8G,EAAAxP,UAAA0P,IAAA,SAAIhH,GACF,IAAIiH,EACJ,IAAKA,KAAWjH,EACd,GAAKA,EAAOzH,eAAe0O,GAA3B,CAGA,IAAMC,EAAOlH,EAAM,GAGnB+G,KAFalP,EAAWqP,GAAQD,EAAU,IAAIA,GAErC,EAGXF,KAAKI,QAAUnH,GAGjB8G,EAAAxP,UAAA8P,SAAA,SAASC,EAAa3P,EAAY4P,GAChC,IAAMC,EAASR,KAAKS,UAAUH,IAAQN,KAAKS,UAAS,SAEpD,OAAO3P,EAAW0P,GAAUA,EAAO/P,KAAK,KAAME,EAAM4P,GAAOC,GAG7DT,EAAAxP,UAAAmQ,eAAA,SAAeJ,GACb,IAAMhF,EAAS0E,KAAKW,gBAAgBL,GAC9BM,EAAcZ,KAAKW,gBAAgBL,EAAIO,eAE7C,OAAIvF,IAAWsF,EACNtF,GAGT0E,KAAKW,gBAAgBL,GAAOM,EAAYtI,QAAQ,mBAAoB,SAAUwI,GAC5E,OAAOA,EAAIC,MAAM,KAGZf,KAAKW,gBAAgBL,KAG9BhQ,OAAA0Q,eAAIjB,EAAAxP,UAAA,cAAW,KAAf,WACE,OAAOyP,KAAKiB,kBAGd,SAAgBH,GACdd,KAAKiB,aAAeH,mCAGtBf,EAAAxP,UAAAgE,QAAA,SAAQ1E,EAAawE,GACnB,OAAO2L,KAAKkB,SAAS5I,QAAQ,KAAMzI,EAAIW,SAAS,MAGlDuP,EAAAxP,UAAA4Q,SAAA,SAASjR,GACP,OAAOA,GAGT6P,EAAAxP,UAAA6Q,WAAA,SAAWlR,GACT,OAAOA,GAGT6P,EAAAxP,UAAA8Q,aAAA,SAAaxR,EAAayR,EAAwBpR,EAAwBqR,GACxE,IAAMf,EAASR,KAAKwB,cAActR,GAElC,OAAQY,EAAW0P,GACjBA,EAAO3Q,EAAKyR,EAAepR,EAAKqR,GAChCf,EAAOlI,QAAQ,MAAOzI,EAAIW,SAAS,MAGvCuP,EAAAxP,UAAAkR,WAAA,SAAWC,EAAclB,GACvB,IAAMlF,EAAS0E,KAAKwB,cAAqB,EAAPE,EAAW,SAAW,QAExD,OAAO5Q,EAAWwK,GAAUA,EAAOkF,GAAUlF,EAAOhD,QAAQ,MAAOkI,IAMrET,EAAAxP,UAAAgL,OAAA,SAAO5K,EAAa2K,EAAiB1F,GACnC,QADmC,IAAAA,IAAAA,GAAA,IAC9BjF,EACH,OAAOO,EAAgB8O,KAAK2B,SACxB3B,KAAK2B,QACL3B,KAAK2B,QAAQC,WAGnB,GAAI1Q,EAAgB8O,KAAK2B,SACvB,OAAO3B,KAAK2B,QAAQnL,EAAS7F,EAAMiF,IAGrC,IAAM0K,GAAON,KAAK2B,QAAQE,UAAY9C,IAAkB+C,KAAKxG,GACzD,SACA,aAEJ,OAAO0E,KAAK2B,QAAQrB,GAAK9J,EAAS7F,EAAMiF,KAK1CmK,EAAAxP,UAAA8K,YAAA,SAAY1K,EAAa2K,EAAiB1F,GACxC,QADwC,IAAAA,IAAAA,GAAA,IACnCjF,EACH,OAAOO,EAAgB8O,KAAK+B,cACxB/B,KAAK+B,aACL/B,KAAK+B,aAAaH,WAGxB,GAAI1Q,EAAgB8O,KAAK+B,cACvB,OAAO/B,KAAK+B,aAAavL,EAAS7F,EAAMiF,IAE1C,IAAM0K,EAAMvB,GAAiB+C,KAAKxG,GAAU,SAAW,aAEvD,OAAO0E,KAAK+B,aAAazB,GAAK9J,EAAS7F,EAAMiF,KAG/CmK,EAAAxP,UAAAoL,YAAA,SAAYqG,EAAmB1G,EAAiB2G,GAC9C,IAAItR,EACAoH,EAeAmB,EAbJ,GAAI8G,KAAKkC,kBACP,OAAOlC,KAAKmC,uBAAuBH,EAAW1G,EAAQ2G,GAaxD,IAVKjC,KAAKoC,eACRpC,KAAKoC,aAAe,GACpBpC,KAAKqC,iBAAmB,GACxBrC,KAAKsC,kBAAoB,IAOtBpJ,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAGvB,GADAvI,EAAO,IAAIN,KAAKA,KAAK4E,IAAI,IAAMiE,IAC3B+I,IAAWjC,KAAKqC,iBAAiBnJ,GAAI,CACvC,IAAMyI,EAAU3B,KAAKzE,OAAO5K,EAAM,IAAI,GAAM2H,QAAQ,IAAK,IACnDiK,EAAevC,KAAK3E,YAAY1K,EAAM,IAAI,GAAM2H,QAAQ,IAAK,IACnE0H,KAAKqC,iBAAiBnJ,GAAK,IAAIf,OAAO,IAAIwJ,EAAO,IAAK,KACtD3B,KAAKsC,kBAAkBpJ,GAAK,IAAIf,OAAO,IAAIoK,EAAY,IAAK,KAO9D,GALKN,GAAWjC,KAAKoC,aAAalJ,KAChCnB,EAAQ,IAAIiI,KAAKzE,OAAO5K,EAAM,IAAI,GAAK,KAAKqP,KAAK3E,YAAY1K,EAAM,IAAI,GACvEqP,KAAKoC,aAAalJ,GAAK,IAAIf,OAAOJ,EAAMO,QAAQ,IAAK,IAAK,MAGxD2J,GAAqB,SAAX3G,GAAsB0E,KAAKqC,iBAAiBnJ,GAAc4I,KAAKE,GAC3E,OAAO9I,EAGT,GAAI+I,GAAqB,QAAX3G,GAAqB0E,KAAKsC,kBAAkBpJ,GAAc4I,KAAKE,GAC3E,OAAO9I,EAGT,IAAK+I,GAAUjC,KAAKoC,aAAalJ,GAAG4I,KAAKE,GACvC,OAAO9I,IAKb6G,EAAAxP,UAAAkL,YAAA,SAAYxD,GACV,OAAI+H,KAAKkC,mBACF7Q,EAAW2O,KAAM,iBACpBA,KAAKwC,qBAEHvK,EACK+H,KAAKyC,mBAGPzC,KAAK0C,eAGTrR,EAAW2O,KAAM,kBACpBA,KAAK0C,aAAe5C,IAGfE,KAAKyC,oBAAsBxK,EAChC+H,KAAKyC,mBAAqBzC,KAAK0C,eAGnC3C,EAAAxP,UAAAiL,iBAAA,SAAiBvD,GACf,OAAI+H,KAAKkC,mBACF7Q,EAAW2O,KAAM,iBACpBA,KAAKwC,qBAEHvK,EACK+H,KAAK2C,wBAGP3C,KAAK4C,oBAETvR,EAAW2O,KAAM,uBACpBA,KAAK4C,kBAAoB/C,IAGpBG,KAAK2C,yBAA2B1K,EACrC+H,KAAK2C,wBAA0B3C,KAAK4C,oBAIxC7C,EAAAxP,UAAAoO,KAAA,SAAKhO,EAAYiF,GACf,OAAO2I,GAAW5N,EAAMqP,KAAK6C,MAAMzE,IAAK4B,KAAK6C,MAAMxE,IAAKzI,GAAO+I,MAGjEoB,EAAAxP,UAAAuS,eAAA,WACE,OAAO9C,KAAK6C,MAAMzE,KAGpB2B,EAAAxP,UAAAwS,eAAA,WACE,OAAO/C,KAAK6C,MAAMxE,KAMpB0B,EAAAxP,UAAAyS,SAAA,SAASrS,EAAa2K,EAAiB1F,GACrC,IAAKjF,EACH,OAAOO,EAAgB8O,KAAKiD,WACxBjD,KAAKiD,UACLjD,KAAKiD,UAAUrB,WAGrB,GAAI1Q,EAAgB8O,KAAKiD,WACvB,OAAOjD,KAAKiD,UAAU7M,EAAOzF,EAAMiF,IAGrC,IAAMsN,EAAOlD,KAAKiD,UAAUpB,SAASC,KAAKxG,GACtC,SACA,aAEJ,OAAO0E,KAAKiD,UAAUC,GAAM9M,EAAOzF,EAAMiF,KAK3CmK,EAAAxP,UAAA4S,YAAA,SAAYxS,EAAa2K,EAAiB1F,GACxC,OAAOjF,EAAOqP,KAAKoD,aAAahN,EAAOzF,EAAMiF,IAAUoK,KAAKoD,cAK9DrD,EAAAxP,UAAA8S,cAAA,SAAc1S,EAAa2K,EAAiB1F,GAC1C,OAAOjF,EAAOqP,KAAKsD,eAAelN,EAAOzF,EAAMiF,IAAUoK,KAAKsD,gBAKhEvD,EAAAxP,UAAAoN,cAAA,SAAc4F,EAAsBjI,EAAiB2G,GACnD,IAAI/I,EACAnB,EAEJ,GAAIiI,KAAKwD,oBACP,OAAOxD,KAAKyD,sBAAsBF,EAAajI,EAAQ2G,GAUzD,IAPKjC,KAAK0D,iBACR1D,KAAK0D,eAAiB,GACtB1D,KAAK2D,kBAAoB,GACzB3D,KAAK4D,oBAAsB,GAC3B5D,KAAK6D,mBAAqB,IAGvB3K,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGtB,IAAMvI,EAAOiN,GAAa,IAAIvN,KAAKA,KAAK4E,IAAI,IAAM,IAAKiE,EAAG,MAAM,GAWhE,GAVI+I,IAAWjC,KAAK6D,mBAAmB3K,KACrC8G,KAAK6D,mBAAmB3K,GAAK,IAAIf,OAAO,IAAI6H,KAAKgD,SAASrS,EAAM,IAAI,GAAM2H,QAAQ,IAAK,MAAM,IAAK,KAClG0H,KAAK4D,oBAAoB1K,GAAK,IAAIf,OAAO,IAAI6H,KAAKqD,cAAc1S,EAAM,IAAI,GAAM2H,QAAQ,IAAK,MAAM,IAAK,KACxG0H,KAAK2D,kBAAkBzK,GAAK,IAAIf,OAAO,IAAI6H,KAAKmD,YAAYxS,EAAM,IAAI,GAAM2H,QAAQ,IAAK,MAAM,IAAK,MAEjG0H,KAAK0D,eAAexK,KACvBnB,EAAQ,IAAIiI,KAAKgD,SAASrS,EAAM,IAAI,GAAK,KAAKqP,KAAKqD,cAAc1S,EAAM,IAAI,GAAK,KAAKqP,KAAKmD,YAAYxS,EAAM,IAAI,GAChHqP,KAAK0D,eAAexK,GAAK,IAAIf,OAAOJ,EAAMO,QAAQ,IAAK,IAAK,QAGzDpH,EAAgB8O,KAAK6D,qBACpB3S,EAAgB8O,KAAK4D,sBACrB1S,EAAgB8O,KAAK2D,oBACrBzS,EAAgB8O,KAAK0D,iBACzB,OAIF,GAAIzB,GAAqB,SAAX3G,GAAqB0E,KAAK6D,mBAAmB3K,GAAG4I,KAAKyB,GACjE,OAAOrK,EACF,GAAI+I,GAAqB,QAAX3G,GAAoB0E,KAAK4D,oBAAoB1K,GAAG4I,KAAKyB,GACxE,OAAOrK,EACF,GAAI+I,GAAqB,OAAX3G,GAAmB0E,KAAK2D,kBAAkBzK,GAAG4I,KAAKyB,GACrE,OAAOrK,EACF,IAAK+I,GAAUjC,KAAK0D,eAAexK,GAAG4I,KAAKyB,GAChD,OAAOrK,IAMb6G,EAAAxP,UAAAuT,cAAA,SAAc7L,GACZ,OAAI+H,KAAKwD,qBACFnS,EAAW2O,KAAM,mBACpBA,KAAK+D,uBAGH9L,EACK+H,KAAKgE,qBAELhE,KAAKiE,iBAGT5S,EAAW2O,KAAM,oBACpBA,KAAKiE,eAAiBrM,IAGjBoI,KAAKgE,sBAAwB/L,EAClC+H,KAAKgE,qBAAuBhE,KAAKiE,iBAQvClE,EAAAxP,UAAA2T,mBAAA,SAAmBjM,GACjB,OAAI+H,KAAKwD,qBACFnS,EAAW2O,KAAM,mBACpBA,KAAK+D,uBAEH9L,EACK+H,KAAKmE,0BAELnE,KAAKoE,sBAGT/S,EAAW2O,KAAM,yBACpBA,KAAKoE,oBAAsBxM,IAGtBoI,KAAKmE,2BAA6BlM,EACvC+H,KAAKmE,0BAA4BnE,KAAKoE,sBAI5CrE,EAAAxP,UAAA8T,iBAAA,SAAiBpM,GACf,OAAI+H,KAAKwD,qBACFnS,EAAW2O,KAAM,mBACpBA,KAAK+D,uBAEH9L,EACK+H,KAAKsE,wBAELtE,KAAKuE,oBAGTlT,EAAW2O,KAAM,uBACpBA,KAAKuE,kBAAoB3M,IAGpBoI,KAAKsE,yBAA2BrM,EACrC+H,KAAKsE,wBAA0BtE,KAAKuE,oBAI1CxE,EAAAxP,UAAAiU,KAAA,SAAKrT,GAGH,MAAyC,MAAlCA,EAAMsB,cAAcgS,OAAO,IAGpC1E,EAAAxP,UAAA2J,SAAA,SAASwK,EAAeC,EAAiBC,GACvC,OAAY,GAARF,EACKE,EAAU,KAAO,KAGnBA,EAAU,KAAO,MAG1B7E,EAAAxP,UAAAsU,eAAA,SAAevE,GACbN,KAAKW,gBAAkBX,KAAKW,gBAAkBX,KAAKW,gBAAkBrB,GACrE,IAAMhE,EAAS0E,KAAKW,gBAAgBL,GAC9BM,EAAcZ,KAAKW,gBAAgBL,EAAIO,eAE7C,OAAIvF,IAAWsF,EACNtF,GAGT0E,KAAKW,gBACHL,GACIM,EAAYtI,QAAQ,mBAAoB,SAACwI,GAC7C,OAAOA,EAAIC,MAAM,KAGZf,KAAKW,gBAAgBL,KAGtBP,EAAAxP,UAAA4R,gCAAuBH,EAAmB1G,EAAgB2G,GAChE,IACI/I,EACA4L,EACAC,EAHEC,EAAMhD,EAAUiD,oBAItB,IAAKjF,KAAKoC,aAKR,IAHApC,KAAKoC,aAAe,GACpBpC,KAAKqC,iBAAmB,GACxBrC,KAAKsC,kBAAoB,GACpBpJ,EAAI,EAAGA,EAAI,KAAMA,EACpB6L,EAAM,IAAI1U,KAAK,IAAM6I,GACrB8G,KAAKsC,kBAAkBpJ,GAAK8G,KAAK3E,YAAY0J,EAAK,IAAIE,oBACtDjF,KAAKqC,iBAAiBnJ,GAAK8G,KAAKzE,OAAOwJ,EAAK,IAAIE,oBAIpD,OAAIhD,EACa,QAAX3G,GAGa,KAFfwJ,EAAM9E,KAAkC,kBAAEkF,QAAQF,IAE/BF,EAAK,MAIX,KAFfA,EAAM9E,KAAiC,iBAAEkF,QAAQF,IAE9BF,EAAK,KAGX,QAAXxJ,GAEU,KADZwJ,EAAM9E,KAAkC,kBAAEkF,QAAQF,IAEzCF,GAKM,KAFfA,EAAM9E,KAAiC,iBAAEkF,QAAQF,IAE9BF,EAAK,MAId,KADZA,EAAM9E,KAAiC,iBAAEkF,QAAQF,IAExCF,GAIM,KAFfA,EAAM9E,KAAkC,kBAAEkF,QAAQF,IAE/BF,EAAK,MAGlB/E,EAAAxP,UAAAkT,+BAAsBF,EAAqBjI,EAAgB2G,GACjE,IAAI6C,EACEE,EAAMzB,EAAY0B,oBACxB,IAAKjF,KAAK0D,eAAgB,CACxB1D,KAAK0D,eAAiB,GACtB1D,KAAK4D,oBAAsB,GAC3B5D,KAAK2D,kBAAoB,GAEzB,IAAIzK,OAAC,EACL,IAAKA,EAAI,EAAGA,EAAI,IAAKA,EAAG,CACtB,IAAMvI,EAAOiN,GAAa,IAAIvN,KAAKA,KAAK4E,IAAI,IAAM,IAAKiE,EAAG,MAAM,GAChE8G,KAAK2D,kBAAkBzK,GAAK8G,KAAKmD,YAAYxS,GAAMsU,oBACnDjF,KAAK4D,oBAAoB1K,GAAK8G,KAAKqD,cAAc1S,GAAMsU,oBACvDjF,KAAK0D,eAAexK,GAAK8G,KAAKgD,SAASrS,EAAM,IAAIsU,qBAIrD,GAAK/T,EAAgB8O,KAAK0D,iBACpBxS,EAAgB8O,KAAK4D,sBACrB1S,EAAgB8O,KAAK2D,mBAI3B,OAAI1B,EACa,SAAX3G,GAGa,KAFfwJ,EAAK9E,KAAK0D,eAAewB,QAAQF,IAEdF,EAAK,KACJ,QAAXxJ,GAGM,KAFfwJ,EAAK9E,KAAK4D,oBAAoBsB,QAAQF,IAEnBF,EAAK,MAIT,KAFfA,EAAK9E,KAAK2D,kBAAkBuB,QAAQF,IAEjBF,EAAK,KAGX,SAAXxJ,GAEU,KADZwJ,EAAK9E,KAAK0D,eAAewB,QAAQF,IAExBF,GAGG,KADZA,EAAK9E,KAAK4D,oBAAoBsB,QAAQF,IAE7BF,GAIM,KAFfA,EAAK9E,KAAK2D,kBAAkBuB,QAAQF,IAEjBF,EAAK,KACJ,QAAXxJ,GAEG,KADZwJ,EAAK9E,KAAK4D,oBAAoBsB,QAAQF,IAE7BF,GAGG,KADZA,EAAK9E,KAAK0D,eAAewB,QAAQF,IAExBF,GAIM,KAFfA,EAAK9E,KAAK2D,kBAAkBuB,QAAQF,IAEjBF,EAAK,MAGZ,KADZA,EAAK9E,KAAK2D,kBAAkBuB,QAAQF,IAE3BF,GAGG,KADZA,EAAK9E,KAAK0D,eAAewB,QAAQF,IAExBF,GAIM,KAFfA,EAAK9E,KAAK4D,oBAAoBsB,QAAQF,IAEnBF,EAAK,MAKtB/E,EAAAxP,UAAAiS,8BACN,IAGI7R,EAEAuI,EALEiM,EAAwB,GACxBC,EAAuB,GACvBC,EAAwB,GAI9B,IAAKnM,EAAI,EAAGA,EAAI,GAAIA,IAElBvI,EAAO,IAAIN,KAAK,IAAM6I,GACtBiM,EAAYG,KAAKtF,KAAK3E,YAAY1K,EAAM,KACxCyU,EAAWE,KAAKtF,KAAKzE,OAAO5K,EAAM,KAClC0U,EAAYC,KAAKtF,KAAKzE,OAAO5K,EAAM,KACnC0U,EAAYC,KAAKtF,KAAK3E,YAAY1K,EAAM,KAO1C,IAHAwU,EAAYI,KAAKC,IACjBJ,EAAWG,KAAKC,IAChBH,EAAYE,KAAKC,IACZtM,EAAI,EAAGA,EAAI,GAAIA,IAClBiM,EAAYjM,GAAKb,GAAY8M,EAAYjM,IACzCkM,EAAWlM,GAAKb,GAAY+M,EAAWlM,IAEzC,IAAKA,EAAI,EAAGA,EAAI,GAAIA,IAClBmM,EAAYnM,GAAKb,GAAYgN,EAAYnM,IAG3C8G,KAAK0C,aAAe,IAAIvK,OAAO,KAAKkN,EAAYI,KAAK,KAAI,IAAK,KAC9DzF,KAAK4C,kBAAoB5C,KAAK0C,aAC9B1C,KAAKyC,mBAAqB,IAAItK,OAAO,KAAKiN,EAAWK,KAAK,KAAI,IAAK,KACnEzF,KAAK2C,wBAA0B,IAAIxK,OAAO,KAAKgN,EAAYM,KAAK,KAAI,IAAK,MAGnE1F,EAAAxP,UAAAwT,gCACN,IAKI7K,EALEwM,EAAY,GACZP,EAAc,GACdC,EAAa,GACbC,EAAc,GAGpB,IAAKnM,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAGtB,IAAMvI,EAAOiN,GAAa,IAAIvN,KAAKA,KAAK4E,IAAI,IAAM,IAAKiE,EAAG,MAAM,GAC1DyM,EAAO3F,KAAKmD,YAAYxS,GACxBiV,EAAS5F,KAAKqD,cAAc1S,GAC5BkV,EAAQ7F,KAAKgD,SAASrS,GAC5B+U,EAAUJ,KAAKK,GACfR,EAAYG,KAAKM,GACjBR,EAAWE,KAAKO,GAChBR,EAAYC,KAAKK,GACjBN,EAAYC,KAAKM,GACjBP,EAAYC,KAAKO,GAQnB,IAJAH,EAAUH,KAAKC,IACfL,EAAYI,KAAKC,IACjBJ,EAAWG,KAAKC,IAChBH,EAAYE,KAAKC,IACZtM,EAAI,EAAGA,EAAI,EAAGA,IACjBiM,EAAYjM,GAAKb,GAAY8M,EAAYjM,IACzCkM,EAAWlM,GAAKb,GAAY+M,EAAWlM,IACvCmM,EAAYnM,GAAKb,GAAYgN,EAAYnM,IAG3C8G,KAAKiE,eAAiB,IAAI9L,OAAO,KAAKkN,EAAYI,KAAK,KAAI,IAAK,KAChEzF,KAAKoE,oBAAsBpE,KAAKiE,eAChCjE,KAAKuE,kBAAoBvE,KAAKiE,eAE9BjE,KAAKgE,qBAAuB,IAAI7L,OAAO,KAAKiN,EAAWK,KAAK,KAAI,IAAK,KACrEzF,KAAKmE,0BAA4B,IAAIhM,OAAO,KAAKgN,EAAYM,KAAK,KAAI,IAAK,KAC3EzF,KAAKsE,wBAA0B,IAAInM,OAAO,KAAKuN,EAAUD,KAAK,KAAI,IAAK,QA7nB3E,GAioBA,SAAAD,GAAmBlU,EAAWC,GAC5B,OAAOA,EAAEsC,OAASvC,EAAEuC,OCpuBf,ICqCMiS,GAAyB,CACpCzF,SDtC6B,CAC7B0F,QAAS,gBACTC,QAAS,mBACTC,SAAU,eACVC,QAAS,oBACTC,SAAU,sBACVC,SAAU,KCiCV1F,eAAgBpB,GAChB+G,YA7BgC,eA8BhC9R,QFF4B,KEG5B+R,uBFF2C,UEG3CjF,aAvB0D,CAC1DkF,OAAS,QACTC,KAAS,SACTjR,EAAK,gBACLkR,GAAK,aACL1R,EAAK,WACL2R,GAAK,aACLrR,EAAK,UACLsR,GAAK,WACL3R,EAAK,QACL4R,GAAK,UACLtR,EAAK,UACLuR,GAAK,YACL/R,EAAK,SACLgS,GAAK,YAWLvL,OAAQyD,GACR3D,YAAa6D,GAEbP,KAnC+B,CAC/BP,IAAK,EACLC,IAAK,GAmCL2E,SAAU7D,GACVgE,YAAa9D,GACbgE,cAAejE,GAEf2H,cApCwC,iBCf1C,SAAAC,GAAiCC,EAAaC,EAAaC,GACzD,IAGIjO,EAHEkO,EAAMtX,KAAKsM,IAAI6K,EAAOpT,OAAQqT,EAAOrT,QACrCwT,EAAavX,KAAK6D,IAAIsT,EAAOpT,OAASqT,EAAOrT,QAC/CyT,EAAQ,EAEZ,IAAKpO,EAAI,EAAGA,EAAIkO,EAAKlO,KACdiO,GAAeF,EAAO/N,KAAOgO,EAAOhO,KAClCiO,GAAexV,EAAMsV,EAAO/N,MAAQvH,EAAMuV,EAAOhO,MACtDoO,IAIJ,OAAOA,EAAQD,ECTjB,IAEIE,GAFEC,GAAqC,GACrCC,GAA0E,GAGhF,SAAAC,GAAyBpH,GACvB,OAAOA,EAAMA,EAAI7N,cAAc6F,QAAQ,IAAK,KAAOgI,EAkCrD,SAAAqH,GAA6BC,EACAC,GAC3B,IAgBIC,EAhBEC,EAAkBzX,OAAO0X,OAAO,GAAIJ,GAE1C,IAAK,IAAMK,KAAaJ,EACjBxW,EAAWwW,EAAaI,KAGzBxW,EAASmW,EAAaK,KAAexW,EAASoW,EAAYI,KAC5DF,EAAIE,GAAa,GACjB3X,OAAO0X,OAAOD,EAAIE,GAAYL,EAAaK,IAC3C3X,OAAO0X,OAAOD,EAAIE,GAAYJ,EAAYI,KACP,MAA1BJ,EAAYI,GACrBF,EAAIE,GAAaJ,EAAYI,UAEtBF,EAAIE,IAIf,IAAKH,KAAcF,EAEfvW,EAAWuW,EAAcE,KACxBzW,EAAWwW,EAAaC,IACzBrW,EAASmW,EAAY,MAGrBG,EAAG,GAAmCzX,OAAO0X,OAAO,GAAID,EAAG,KAI/D,OAAOA,EAIT,SAAAG,GAAoBC,GAmBlB,OANKX,GAAQW,IAEXC,QAAQC,MAAM,6CAA6CF,EAAI,qBAI1DX,GAAQW,GAMjB,SAAAG,GAAmChI,EAAyBiI,GAC1D,IAAIC,EAcJ,OAZIlI,IACE5O,EAAY6W,GACdC,EAAO9K,GAAU4C,GACRrQ,EAASqQ,KAClBkI,EAAOC,GAAanI,EAAKiI,IAGvBC,IACFjB,GAAeiB,IAIZjB,IAAgBA,GAAamB,MAGtC,SAAAD,GAA6BN,EAAclP,GACzC,GAAe,OAAXA,EAKF,cAHOuO,GAAQW,GACfZ,GAAe7J,GAAU,MAElB,KAGT,GAAKzE,EAAL,CAIA,IAAI2O,EAAe9B,GAEnB,GADA7M,EAAO0P,KAAOR,EACa,MAAvBlP,EAAO2P,aAAsB,CAC/B,GAAoC,MAAhCpB,GAAQvO,EAAO2P,cAQjB,OALKnB,GAAexO,EAAO2P,gBACzBnB,GAAexO,EAAO2P,cAAgB,IAExCnB,GAAexO,EAAO2P,cAActD,KAAK,CAAE6C,KAAIA,EAAElP,OAAMA,IAEhD,KAPP2O,EAAeJ,GAAQvO,EAAO2P,cAAcxI,QAyBhD,OAdAoH,GAAQW,GAAQ,IAAIpI,GAAO4H,GAAaC,EAAc3O,IAElDwO,GAAeU,IACjBV,GAAeU,GAAMU,QAAQ,SAAU7N,GACrCyN,GAAazN,EAAEmN,KAAMnN,EAAE/B,UAO3BqP,GAAmBH,GAGZX,GAAQW,IAmCjB,SAAAzK,GAA0B4C,GACxB,OAAKA,EAtLP,SAAAwI,EAAsBC,GAKpB,IAJA,IAAIC,EACApU,EACAsE,EAAI,EAEDA,EAAI6P,EAAMlV,QAAQ,CACvB,IAAMoL,EAAQyI,GAAgBqB,EAAM7P,IAAI+F,MAAM,KAC1CgK,EAAIhK,EAAMpL,OAGd,IADAmV,GADAA,EAAOtB,GAAgBqB,EAAM7P,EAAI,KACnB8P,EAAK/J,MAAM,KAAO,KACrB,EAAJgK,GAAO,CAEZ,GADArU,EAASsT,GAAWjJ,EAAM8B,MAAM,EAAGkI,GAAGxD,KAAK,MAEzC,OAAO7Q,EAET,GAAIoU,GAAQA,EAAKnV,QAAUoV,GAAKjC,GAAc/H,EAAO+J,GAAM,IAASC,EAAI,EAEtE,MAEFA,IAEF/P,IAGF,OAAO,KAoKA4P,CAFM5X,EAAQoP,GAAOA,EAAM,CAACA,IAH1BiH,GAaXe,GAAmB,KAAM,CACvBhC,uBAAwB,uBACxB/R,QAAA,SAAQ1E,GACN,IAAM0B,EAAI1B,EAAM,GAMhB,OAAOA,GAJuB,IAA5B8B,EAAO9B,EAAM,IAAO,IAChB,KACM,IAAN0B,EAAU,KAAa,IAANA,EAAU,KAAa,IAANA,EAAU,KAAO,SCxN7D,IAAM2X,GAAiC,CAAC,OAAQ,UAAW,QAAS,OAAQ,MAAO,QAAS,UAAW,UAAW,gBAC5GC,GAAeD,GAASE,OAAO,SAACC,EAAiCC,GAGrE,OAFAD,EAAIC,IAAS,EAEND,GACN,ICVH,SAAAE,GAAyBC,GACvB,OAAOA,EAAS,EAAI1Z,KAAKE,MAAMwZ,GAAU1Z,KAAKC,KAAKyZ,GCiDrD,SAAAC,GAA6B3N,GAG3B,OAAa,KAANA,EAAa,OAGtB,SAAA4N,GAA6B/O,GAE3B,OAAe,OAARA,EAAiB,KCrD1B,IAAIuD,GAAQpO,KAAKoO,MACXyL,GACA,GADAA,GAED,GAFCA,GAGD,GAHCA,GAID,GAJCA,GAKD,GALCA,GAMD,GCFL,IAAAC,GAAA,WAQE,SAAAA,EAAYC,EAA+B5Q,QAAA,IAAAA,IAAAA,EAAA,eAJd,gBACXyE,KAIhBsC,KAAKtE,QAAUzC,GAAUA,EAAOyC,SAAWgC,KAE3C,IAAMoM,EAAkBD,EAClBE,EAAQD,EAAgBtP,MAAQ,EAChCwP,EAAWF,EAAgBG,SAAW,EACtC1O,EAASuO,EAAgBnP,OAAS,EAClCuP,EAAQJ,EAAgBnL,MAAQ,EAChCwL,EAAOL,EAAgBhO,KAAO,EAC9B4I,EAAQoF,EAAgBpF,OAAS,EACjCC,EAAUmF,EAAgBnF,SAAW,EACrC5I,EAAU+N,EAAgB/N,SAAW,EACrCqO,EAAeN,EAAgBM,cAAgB,EA0BrD,OAxBApK,KAAKqK,SJpBT,SAAAC,EAAgCT,GAE9B,GADqBvZ,OAAOia,KAAKV,GAE5BW,KAAK,SAAClK,GACL,OAAQA,KAAO6I,IACQ,OAAlBU,EAASvJ,IACTzP,MAAMgZ,EAASvJ,MAExB,OAAO,EAST,IADA,IAAImK,GAAiB,EACZvR,EAAI,EAAGA,EAAIgQ,GAASrV,SAAUqF,EACrC,GAAI2Q,EAASX,GAAShQ,IAAK,CAEzB,GAAIuR,EACF,OAAO,EAELZ,EAASX,GAAShQ,MAAQvH,EAAMkY,EAASX,GAAShQ,OACpDuR,GAAiB,GAKvB,OAAO,EITWH,CAAgBR,GAGhC9J,KAAK0K,eAAiBN,EACV,IAAVrO,EACU,GAAV4I,EAAe,IACP,IAARD,EAAe,GAAK,GAItB1E,KAAK2K,OAASR,EACJ,EAARD,EAIFlK,KAAK2B,SAAWpG,EACH,EAAXyO,EACQ,GAARD,EF7CN,SAAAa,EAAuBC,GACrB,IAAIT,EAAeS,EAAIH,cACnBP,EAAOU,EAAIF,MACXpP,EAASsP,EAAIlJ,QACX6G,EAAOqC,EAAIC,MAIM,GAAhBV,GAA6B,GAARD,GAAuB,GAAV5O,GACpC6O,GAAgB,GAAKD,GAAQ,GAAK5O,GAAU,IAC/C6O,GAAuD,MAAvCb,GAAQG,GAAanO,GAAU4O,GAE/C5O,EADA4O,EAAO,GAMT3B,EAAK4B,aAAeA,EAAe,IAEnC,IAAMrO,EAAUnM,EAASwa,EAAe,KACxC5B,EAAKzM,QAAUA,EAAU,GAEzB,IAAM4I,EAAU/U,EAASmM,EAAU,IACnCyM,EAAK7D,QAAUA,EAAU,GAEzB,IAAMD,EAAQ9U,EAAS+U,EAAU,IACjC6D,EAAK9D,MAAQA,EAAQ,GAKrB,IAAMqG,EAAiBnb,EAAS6Z,GAHhCU,GAAQva,EAAS8U,EAAQ,MAIzBnJ,GAAUwP,EACVZ,GAAQZ,GAAQG,GAAaqB,IAG7B,IAAMhB,EAAQna,EAAS2L,EAAS,IAOhC,OANAA,GAAU,GAEViN,EAAK1M,IAAMqO,EACX3B,EAAK7N,MAAQY,EACbiN,EAAKhO,KAAOuP,EAELc,EESED,CAAO5K,aAGhB4J,EAAArZ,UAAAya,QAAA,WACE,OAAOhL,KAAKqK,UAGdT,EAAArZ,UAAA0a,SAAA,SAASC,GAGP,IAAKlL,KAAKgL,UACR,OAAOhL,KAAKmL,aAAa9E,YAG3B,IAAMzR,EAASoL,KAAKmL,aAChB3K,EDjDR,SAAAa,EAA6B+J,EAA0B9J,EAAwB1M,GAC7E,IAAMiV,EAAWwB,GAAeD,GAAgBzX,MAC1CoI,EAAUmC,GAAM2L,EAASyB,GAAG,MAC5B3G,EAAUzG,GAAM2L,EAASyB,GAAG,MAC5B5G,EAAQxG,GAAM2L,EAASyB,GAAG,MAC1BnB,EAAOjM,GAAM2L,EAASyB,GAAG,MACzB/P,EAAS2C,GAAM2L,EAASyB,GAAG,MAC3BvB,EAAQ7L,GAAM2L,EAASyB,GAAG,MAE1Bha,EACJyK,GAAW4N,IAAiB,CAAC,IAAK5N,IAClCA,EAAU4N,IAAgB,CAAC,KAAM5N,IACjC4I,GAAW,GAAK,CAAC,MACjBA,EAAUgF,IAAgB,CAAC,KAAMhF,IACjCD,GAAS,GAAK,CAAC,MACfA,EAAQiF,IAAgB,CAAC,KAAMjF,IAC/ByF,GAAQ,GAAK,CAAC,MACdA,EAAOR,IAAgB,CAAC,KAAMQ,IAC9B5O,GAAU,GAAK,CAAC,MAChBA,EAASoO,IAAgB,CAAC,KAAMpO,IAChCwO,GAAS,GAAK,CAAC,MAAQ,CAAC,KAAMA,GAQhC,OAlCF,SAAAwB,EAA2Brb,EAAwBL,EACxByR,EAAwBC,EACxB3M,GACzB,OAAOA,EAAOyM,aAAaxR,GAAO,IAAKyR,EAAepR,EAAKqR,IA+BlC9M,MAAM,KAL7B,CAACnD,EAAE,GAAIA,EAAE,GAAIgQ,EAAiC,GAAjB8J,EAAoBxW,IC0BpCyM,CAAarB,MAAOkL,EAAYtW,GAM7C,OAJIsW,IACF1K,EAAS5L,EAAO6M,YAAYzB,KAAMQ,IAG7B5L,EAAOwM,WAAWZ,IAG3BoJ,EAAArZ,UAAA4a,WAAA,WACE,OAAOnL,KAAKtE,SAKdkO,EAAArZ,UAAAqE,OAAA,SAAO4W,GACL,OAAKA,GAILxL,KAAKtE,QAAUgC,GAAU8N,IAAcxL,KAAKtE,QAErCsE,MALEA,KAAKtE,QAAQgN,OASxBkB,EAAArZ,UAAAoD,IAAA,WACE,IAAM8X,EAAU3b,KAAK6D,IAEf6U,EAAOxI,KAAK8K,MAalB,OAXA9K,KAAK0K,cAAgBe,EAAQzL,KAAK0K,eAClC1K,KAAK2K,MAAQc,EAAQzL,KAAK2K,OAC1B3K,KAAK2B,QAAU8J,EAAQzL,KAAK2B,SAE5B6G,EAAK4B,aAAeqB,EAAQjD,EAAK4B,cACjC5B,EAAKzM,QAAU0P,EAAQjD,EAAKzM,SAC5ByM,EAAK7D,QAAU8G,EAAQjD,EAAK7D,SAC5B6D,EAAK9D,MAAQ+G,EAAQjD,EAAK9D,OAC1B8D,EAAK7N,MAAQ8Q,EAAQjD,EAAK7N,OAC1B6N,EAAKhO,KAAOiR,EAAQjD,EAAKhO,MAElBwF,MAGT4J,EAAArZ,UAAA+a,GAAA,SAAGI,GACD,IAAK1L,KAAKgL,UACR,OAAOpQ,IAET,IAAIuP,EACA5O,EACE6O,EAAepK,KAAK0K,cAEpB9X,EAAQD,EAAe+Y,GAE7B,GAAc,UAAV9Y,GAA+B,SAAVA,EAIvB,OAHAuX,EAAOnK,KAAK2K,MAAQP,EAAe,MACnC7O,EAASyE,KAAK2B,QAAU8H,GAAaU,GAEpB,UAAVvX,EAAoB2I,EAASA,EAAS,GAK/C,OADA4O,EAAOnK,KAAK2K,MAAQ7a,KAAKoO,MAAMwL,GAAa1J,KAAK2B,UACzC/O,GACN,IAAK,OACH,OAAOuX,EAAO,EAAIC,EAAe,OACnC,IAAK,MACH,OAAOD,EAAOC,EAAe,MAC/B,IAAK,QACH,OAAc,GAAPD,EAAYC,EAAe,KACpC,IAAK,UACH,OAAc,KAAPD,EAAcC,EAAe,IACtC,IAAK,UACH,OAAc,MAAPD,EAAeC,EAAe,IAEvC,IAAK,eACH,OAAOta,KAAKE,MAAa,MAAPma,GAAgBC,EACpC,QACE,MAAM,IAAIuB,MAAM,gBAAgB/Y,KAItCgX,EAAArZ,UAAAqb,QAAA,WACE,OAAK5L,KAAKgL,UAKRhL,KAAK0K,cACQ,MAAb1K,KAAK2K,MACJ3K,KAAK2B,QAAU,GAAM,OACK,QAA3BhQ,EAAMqO,KAAK2B,QAAU,IAPd/G,OAlJb,GCPA,SAAAoQ,GAAwB/R,GACtB,GAAuB,MAAnBA,EAAOoR,SAAkB,CAC3B,IAAMwB,EAAQxS,GAAgBJ,GACxB6S,EAAc1a,MAAMb,UAAUia,KAAK/Z,KAAKob,EAAM5R,gBAAiB,SAAUf,GAC7E,OAAY,MAALA,IAEL6S,GAAclb,MAAMoI,EAAO+S,IAAM/S,EAAO+S,GAAGpb,YAC7Cib,EAAMnS,SAAW,IAChBmS,EAAMtS,QACNsS,EAAMhS,eACNgS,EAAMI,iBACNJ,EAAMzR,kBACNyR,EAAMjS,YACNiS,EAAM/R,gBACN+R,EAAM9R,mBACL8R,EAAM3R,UAAa2R,EAAM3R,UAAY4R,GASzC,GAPI7S,EAAO2C,UACTmQ,EAAaA,GACa,IAAxBF,EAAMlS,eACwB,IAA9BkS,EAAMrS,aAAa3F,QACnBgY,EAAMK,UAAYrZ,WAGC,MAAnBvC,OAAO6b,UAAqB7b,OAAO6b,SAASlT,GAG9C,OAAO8S,EAFP9S,EAAOoR,SAAW0B,EAMtB,OAAO9S,EAAOoR,SAGhB,SAAA+B,GAA8BnT,EAA2B4S,GAIvD,OAHA5S,EAAO+S,GAAK,IAAI3b,KAAKuK,KACrBtK,OAAO0X,OAAO3O,GAAgBJ,GAAS4S,GAAS,CAAE9R,iBAAiB,IAE5Dd,EC5BT,IAAMoT,GAAmB,mJAEnBC,GAAgB,8IAEhBC,GAAU,wBAEVC,GAAwC,CAC5C,CAAC,eAAgB,uBAAuB,GACxC,CAAC,aAAc,mBAAmB,GAClC,CAAC,eAAgB,kBAAkB,GACnC,CAAC,aAAc,eAAe,GAC9B,CAAC,WAAY,eAAe,GAC5B,CAAC,UAAW,cAAc,GAC1B,CAAC,aAAc,cAAc,GAC7B,CAAC,WAAY,SAAS,GAEtB,CAAC,aAAc,eAAe,GAC9B,CAAC,YAAa,eAAe,GAC7B,CAAC,UAAW,SAAS,IAIjBC,GAA+B,CACnC,CAAC,gBAAiB,uBAClB,CAAC,gBAAiB,sBAClB,CAAC,WAAY,kBACb,CAAC,QAAS,aACV,CAAC,cAAe,qBAChB,CAAC,cAAe,oBAChB,CAAC,SAAU,gBACX,CAAC,OAAQ,YACT,CAAC,KAAM,SAGHC,GAAkB,sBAElBC,GAAwC,CAC5CC,GAAI,EACJC,IAAK,EACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,IACLC,KAAK,KAKDlT,GAAU,0LAGhB,SAAAmT,GAA8BrU,GAC5B,IAAKhJ,EAASgJ,EAAOsU,IACnB,OAAOtU,EAGT,IAIIuU,EACAC,EACAC,EACAC,EASAzU,EACA0U,EAjBEzc,EAAQ8H,EAAOsU,GACfpS,EAAQkR,GAAiBwB,KAAK1c,IAAUmb,GAAcuB,KAAK1c,GAQjE,IAAKgK,EAGH,OAFAlC,EAAOoR,UAAW,EAEXpR,EAMT,IAAKC,EAAI,EAAG0U,EAAIpB,GAAS3Y,OAAQqF,EAAI0U,EAAG1U,IACtC,GAAIsT,GAAStT,GAAG,GAAG2U,KAAK1S,EAAM,IAAK,CACjCsS,EAAajB,GAAStT,GAAG,GACzBsU,GAA+B,IAAnBhB,GAAStT,GAAG,GACxB,MAIJ,GAAkB,MAAduU,EAGF,OAFAxU,EAAOoR,UAAW,EAEXpR,EAGT,GAAIkC,EAAM,GAAI,CACZ,IAAKjC,EAAI,EAAG0U,EAAInB,GAAS5Y,OAAQqF,EAAI0U,EAAG1U,IACtC,GAAIuT,GAASvT,GAAG,GAAG2U,KAAK1S,EAAM,IAAK,CAEjCuS,GAAcvS,EAAM,IAAM,KAAOsR,GAASvT,GAAG,GAC7C,MAIJ,GAAkB,MAAdwU,EAGF,OAFAzU,EAAOoR,UAAW,EAEXpR,EAIX,IAAKuU,GAA2B,MAAdE,EAGhB,OAFAzU,EAAOoR,UAAW,EAEXpR,EAGT,GAAIkC,EAAM,GAAI,CACZ,IAAIoR,GAAQsB,KAAK1S,EAAM,IAKrB,OAFAlC,EAAOoR,UAAW,EAEXpR,EAJP0U,EAAW,IAUf,OAFA1U,EAAO6U,GAAKL,GAAcC,GAAc,KAAOC,GAAY,IAEpDI,GAA0B9U,GAInC,SAAA+U,GAAmCC,EAAiBC,EAAkBC,EAAgBC,EAAiBC,EAAmBC,GACxH,IAAMC,EAAS,CAejB,SAAAC,EAAwBP,GACtB,IAAMzT,EAAOY,SAAS6S,EAAS,IAE/B,OAAOzT,GAAQ,GAAKA,EAAO,IAAOA,EAjBhCgU,CAAeP,GACf/O,GAAyBgG,QAAQgJ,GACjC9S,SAAS+S,EAAQ,IACjB/S,SAASgT,EAAS,IAClBhT,SAASiT,EAAW,KAOtB,OAJIC,GACFC,EAAOjJ,KAAKlK,SAASkT,EAAW,KAG3BC,EAgDT,SAAAE,GAAkCxV,GAChC,IAAKhJ,EAASgJ,EAAOsU,IACnB,OAAOtU,EAGT,IAAMkC,EAAQhB,GAAQ0T,KA5CxB,SAAAa,EAA2Bxe,GAEzB,OAAOA,EACJoI,QAAQ,oBAAqB,KAC7BA,QAAQ,WAAY,KAAKqW,OAwCDD,CAAkBzV,EAAOsU,KAEpD,IAAKpS,EACH,ODvKJ,SAAAyT,EAA4B3V,GAG1B,OAFAA,EAAOoR,UAAW,EAEXpR,ECoKE2V,CAAY3V,GAGrB,IAAM4V,EAAcb,GAA0B7S,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACtG,OA5CF,SAAA2T,EAAsBC,EAAoBC,EAAwB/V,GAChE,OAAI8V,GAEsB3P,GAA2B8F,QAAQ6J,KACrC,IAAI1e,KAAK2e,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAAI5Y,WAE7EiD,GAAgBJ,GAAQmB,iBAAkB,EAC1CnB,EAAOoR,UAAW,GAqCjByE,CAAa3T,EAAM,GAAI0T,EAAa5V,KAIzCA,EAAOgW,GAAKJ,EACZ5V,EAAOiW,KAjCT,SAAAC,EAAyBC,EAAmBC,EAAwBC,GAClE,GAAIF,EACF,OAAOzC,GAAWyC,GACb,GAAIC,EAET,OAAO,EAEP,IAAME,EAAKnU,SAASkU,EAAW,IACzBva,EAAIwa,EAAK,IAGf,OAFWA,EAAKxa,GAAK,IAEV,GAAKA,EAsBJoa,CAAgBhU,EAAM,GAAIA,EAAM,GAAIA,EAAM,KAExDlC,EAAO+S,GAAKnX,EAAcJ,MAAM,KAAMwE,EAAOgW,IAC7ChW,EAAO+S,GAAGjP,cAAc9D,EAAO+S,GAAGjW,gBAAkBkD,EAAOiW,MAE3D7V,GAAgBJ,GAAQkB,SAAU,GAE3BlB,ECxLT,SAAAuW,GAA6BC,EAAiB7a,GAC5C,IAAI0G,EAASmU,EACTvW,EAAI,EACFwW,EAAwB,6CAExBC,EAA8B,SAACxe,GACnC,OAAOyD,EAAOiQ,eAAe1T,IAAUA,GAIzC,IADAue,EAAsBE,UAAY,EACtB,GAAL1W,GAAUwW,EAAsB5N,KAAKxG,IAC1CA,EAASA,EAAOhD,QAAQoX,EAAuBC,GAC/CD,EAAsBE,UAAY,EAClC1W,GAAK,EAGP,OAAOoC,EC1DT,SAAAuU,GAA4Bve,EAAOC,EAAOue,GACxC,OAAS,MAALxe,EACKA,EAEA,MAALC,EACKA,EAGFue,ECeT,SAAAC,GAAgC9W,GAC9B,IACIC,EACAvI,EACAqf,EACAC,EACAC,EALE/e,EAAQ,GAOd,GAAI8H,EAAO+S,GACT,OAAO/S,EA4BT,IAzBA+W,EA1BF,SAAAG,EAA0BlX,GACxB,IAAMmX,EAAW,IAAI/f,KAErB,OAAI4I,EAAOoX,QACF,CAACD,EAASlb,iBAAkBkb,EAAS3Z,cAAe2Z,EAAS7Z,cAG/D,CAAC6Z,EAAS3a,cAAe2a,EAAS5Z,WAAY4Z,EAAS9Z,WAmBhD6Z,CAAiBlX,GAG3BA,EAAOG,IAAyB,MAAnBH,EAAOgW,GAAGjc,IAAqC,MAApBiG,EAAOgW,GAAGlc,IA6DxD,SAAAud,EAA+BrX,GAC7B,IAAIsX,EAAGC,EAAU7R,EAAMtB,EAASe,EAAKC,EAAKoS,EAAMC,EAGhD,GAAY,OADZH,EAAItX,EAAOG,IACLuX,IAAqB,MAAPJ,EAAEK,GAAoB,MAAPL,EAAEM,EACnCzS,EAAM,EACNC,EAAM,EAMNmS,EAAWX,GAASU,EAAEI,GAAI1X,EAAOgW,GAAGnc,GAAOyL,GAAW,IAAIlO,KAAQ,EAAG,GAAGmK,MACxEmE,EAAOkR,GAASU,EAAEK,EAAG,KACrBvT,EAAUwS,GAASU,EAAEM,EAAG,IACV,GAAe,EAAVxT,KACjBqT,GAAkB,OAEf,CACLtS,EAAMnF,EAAOyC,QAAQmH,MAAMzE,IAC3BC,EAAMpF,EAAOyC,QAAQmH,MAAMxE,IAE3B,IAAMyS,EAAUvS,GAAW,IAAIlO,KAAQ+N,EAAKC,GAE5CmS,EAAWX,GAASU,EAAEQ,GAAI9X,EAAOgW,GAAGnc,GAAOge,EAAQtW,MAGnDmE,EAAOkR,GAASU,EAAEA,EAAGO,EAAQnS,MAElB,MAAP4R,EAAEvb,IAEJqI,EAAUkT,EAAEvb,GACE,GAAe,EAAVqI,KACjBqT,GAAkB,GAEJ,MAAPH,EAAES,GAEX3T,EAAUkT,EAAES,EAAI5S,GACZmS,EAAES,EAAI,GAAW,EAANT,EAAES,KACfN,GAAkB,IAIpBrT,EAAUe,EAGVO,EAAO,GAAKA,EAAOC,GAAY4R,EAAUpS,EAAKC,GAChDhF,GAAgBJ,GAAQgY,gBAAiB,EACb,MAAnBP,EACTrX,GAAgBJ,GAAQiY,kBAAmB,GAE3CT,EfjIJ,SAAAU,EACE3W,EACAmE,EACAtB,EACAe,EACAC,GAEA,IAGII,EACA2S,EAFEC,EAAY,EAAI,GAAK1S,EAAO,IAFZ,EAAItB,EAAUe,GAAO,EACxBD,GAAgB3D,EAAM4D,EAAKC,GAgB9C,OATE+S,EAFEC,GAAa,EAEA9W,GADfkE,EAAUjE,EAAO,GACoB6W,EAC5BA,EAAY9W,GAAWC,IAChCiE,EAAUjE,EAAO,EACF6W,EAAY9W,GAAWC,KAEtCiE,EAAUjE,EACK6W,GAGV,CACL7W,KAAMiE,EACN4S,UAAWD,GeuGJD,CAAmBX,EAAU7R,EAAMtB,EAASe,EAAKC,GACxDpF,EAAOgW,GAAGnc,GAAQ2d,EAAKjW,KACvBvB,EAAO6F,WAAa2R,EAAKY,WAG3B,OAAOpY,EApHLqX,CAAsBrX,GAIC,MAArBA,EAAO6F,aACToR,EAAYL,GAAS5W,EAAOgW,GAAGnc,GAAOkd,EAAYld,KAE9CmG,EAAO6F,WAAavE,GAAW2V,IAAoC,IAAtBjX,EAAO6F,cACtDzF,GAAgBJ,GAAQqY,oBAAqB,GAG/C3gB,EAAO,IAAIN,KAAKA,KAAK4E,IAAIib,EAAW,EAAGjX,EAAO6F,aAC9C7F,EAAOgW,GAAGlc,GAASpC,EAAK8F,cACxBwC,EAAOgW,GAAGjc,GAAQrC,EAAK4F,cAQpB2C,EAAI,EAAGA,EAAI,GAAqB,MAAhBD,EAAOgW,GAAG/V,KAAcA,EAC3CD,EAAOgW,GAAG/V,GAAK/H,EAAM+H,GAAK8W,EAAY9W,GAIxC,KAAOA,EAAI,EAAGA,IACZD,EAAOgW,GAAG/V,GAAK/H,EAAM+H,GAAsB,MAAhBD,EAAOgW,GAAG/V,GAAqB,IAANA,EAAU,EAAI,EAAKD,EAAOgW,GAAG/V,GA8BnF,OA1BwB,KAApBD,EAAOgW,GAAGhc,IACU,IAAtBgG,EAAOgW,GAAG/b,IACY,IAAtB+F,EAAOgW,GAAG9b,IACiB,IAA3B8F,EAAOgW,GAAG7b,KACV6F,EAAOsY,UAAW,EAClBtY,EAAOgW,GAAGhc,GAAQ,GAGpBgG,EAAO+S,IAAM/S,EAAOoX,QAAUxb,EAAgBO,GAAYX,MAAM,KAAMtD,GACtE8e,EAAkBhX,EAAOoX,QAAUpX,EAAO+S,GAAG3V,YAAc4C,EAAO+S,GAAG5V,SAIlD,MAAf6C,EAAOiW,MACTjW,EAAO+S,GAAGjP,cAAc9D,EAAO+S,GAAGjW,gBAAkBkD,EAAOiW,MAGzDjW,EAAOsY,WACTtY,EAAOgW,GAAGhc,GAAQ,IAIhBgG,EAAOG,IAA6B,oBAAhBH,EAAOG,GAAE,GAAsBH,EAAOG,GAAE,IAAO6W,IACrE5W,GAAgBJ,GAAQmB,iBAAkB,GAGrCnB,EC5FT,SAAAuY,GAA8BvY,GAC5B,IAAIS,EACEpI,EAAI2H,EAAOgW,GA0BjB,OAxBI3d,IAA2C,IAAtC+H,GAAgBJ,GAAQS,WAE/BA,EACEpI,EAAEyB,GAAS,GAAgB,GAAXzB,EAAEyB,GAAcA,EAC9BzB,EAAE0B,GAAQ,GAAK1B,EAAE0B,GAAQqJ,GAAY/K,EAAEwB,GAAOxB,EAAEyB,IAAUC,EACxD1B,EAAE2B,GAAQ,GAAe,GAAV3B,EAAE2B,IAA2B,KAAZ3B,EAAE2B,KAA+B,IAAd3B,EAAE4B,IAA+B,IAAd5B,EAAE6B,IAAoC,IAAnB7B,EAAE8B,IAAuBH,EAChH3B,EAAE4B,GAAU,GAAiB,GAAZ5B,EAAE4B,GAAeA,EAChC5B,EAAE6B,GAAU,GAAiB,GAAZ7B,EAAE6B,GAAeA,EAChC7B,EAAE8B,GAAe,GAAsB,IAAjB9B,EAAE8B,GAAqBA,GAC1C,EAEXiG,GAAgBJ,GAAQqY,qBAAuB5X,EAAW5G,GAAmBE,EAAX0G,KACpEA,EAAW1G,GAETqG,GAAgBJ,GAAQgY,iBAAgC,IAAdvX,IAC5CA,EAAWrG,GAETgG,GAAgBJ,GAAQiY,mBAAkC,IAAdxX,IAC9CA,EAAWpG,GAGb+F,GAAgBJ,GAAQS,SAAWA,GAG9BT,EClBF,IAAMwY,GAAW,WAIXC,GAAW,WAGxB,SAAA3D,GAA0C9U,GAExC,GAAIA,EAAO6U,KAAO2D,GAChB,OAAOnE,GAAcrU,GAEvB,GAAIA,EAAO6U,KAAO4D,GAChB,OAAOjD,GAAkBxV,GAK3B,GAHAA,EAAOgW,GAAK,GACZ5V,GAAgBJ,GAAQM,OAAQ,EAE5BrI,EAAQ+H,EAAO6U,MAAS7U,EAAOsU,IAAoB,IAAdtU,EAAOsU,GAC9C,OAAOtU,EAKT,IAKIC,EACA7E,EACA2a,EACA2C,E3BXkCtd,EAAelD,EAAe8H,E2BGhE9H,EAAQ8H,EAAOsU,GAAG/c,WAClBohB,EAAyB,EACvBC,EAAc1gB,EAAM0C,OACpB+E,EAAS4W,GAAavW,EAAO6U,GAAI7U,EAAOyC,SAASP,MAAMhH,IAAqB,GAMlF,IAAK+E,EAAI,EAAGA,EAAIN,EAAO/E,OAAQqF,IAC7B7E,EAAQuE,EAAOM,IACf8V,GAAe7d,EAAMgK,MAAMjD,GAAsB7D,EAAO4E,EAAOyC,WAAa,IAAI,MAGzD,GADrBiW,EAAUxgB,EAAM6C,OAAO,EAAG7C,EAAM+T,QAAQ8J,KAC5Bnb,QACVwF,GAAgBJ,GAAQQ,YAAY6L,KAAKqM,GAE3CxgB,EAAQA,EAAM4P,MAAM5P,EAAM+T,QAAQ8J,GAAeA,EAAYnb,QAC7D+d,GAA0B5C,EAAYnb,QAGpCK,EAAqBG,IACnB2a,EACF3V,GAAgBJ,GAAQM,OAAQ,EAEhCF,GAAgBJ,GAAQO,aAAa8L,KAAKjR,G3B5BVA,E2B+BVA,E3B/BwC4E,E2B+BpBA,E3B9BnC,OADwC9H,E2B+BlB6d,I3B9Bd3d,EAAWuH,GAAQvE,IACtCuE,GAAOvE,GAAOlD,EAAO8H,EAAOgW,GAAIhW,EAAQ5E,I2B8B7B4E,EAAO2C,UAAYoT,GAC5B3V,GAAgBJ,GAAQO,aAAa8L,KAAKjR,GAwB9C,OAnBAgF,GAAgBJ,GAAQU,cAAgBkY,EAAcD,EACnC,EAAfzgB,EAAM0C,QACRwF,GAAgBJ,GAAQQ,YAAY6L,KAAKnU,GAIvC8H,EAAOgW,GAAGhc,IAAS,KACe,IAApCoG,GAAgBJ,GAAQiT,SACN,EAAlBjT,EAAOgW,GAAGhc,KACVoG,GAAgBJ,GAAQiT,aAAU,GAGpC7S,GAAgBJ,GAAQgB,gBAAkBhB,EAAOgW,GAAGlO,MAAM,GAC1D1H,GAAgBJ,GAAQiB,SAAWjB,EAAO6Y,UAE1C7Y,EAAOgW,GAAGhc,GAQZ,SAAA8e,EAAyBnd,EAAgBod,EAAe9X,GACtD,IAAIjI,EAAO+f,EAEX,GAAgB,MAAZ9X,EAEF,OAAOjI,EAGT,GAA2B,MAAvB2C,EAAOqd,aACT,OAAOrd,EAAOqd,aAAahgB,EAAMiI,GAGnC,GAAmB,MAAftF,EAAO4P,KAET,OAAOvS,EAGT,IAAMigB,EAAOtd,EAAO4P,KAAKtK,GACrBgY,GAAQjgB,EAAO,KACjBA,GAAQ,IAGLigB,GAAiB,KAATjgB,IACXA,EAAO,GAGT,OAAOA,EAlCW8f,CAAgB9Y,EAAOyC,QAASzC,EAAOgW,GAAGhc,GAAOgG,EAAO6Y,WAE1E/B,GAAgB9W,GAETuY,GAAcvY,GCxFvB,SAAAkZ,GAAiClZ,GAC/B,GAAIA,EAAO+S,GACT,OAAO/S,EAGT,IAAM9H,EAAQ8H,EAAOsU,GACrB,GAAI9b,EAASN,GAAQ,CACnB,IAAM+H,EnCiBV,SAAAkZ,EAAqCC,GACnC,IACIC,EACAnS,EAFE2J,EAA6C,GAInD,IAAK3J,KAAQkS,EACPhhB,EAAWghB,EAAalS,KAC1BmS,EAAiB3f,EAAewN,MAE9B2J,EAAgBwI,GAAkBD,EAAYlS,IAKpD,OAAA,EmC/BYiS,CAAoB,GAC9BnZ,EAAOgW,GAAK,CAAC/V,EAAEsB,KAAMtB,EAAEyB,MAAOzB,EAAE4C,IAAK5C,EAAEwL,MAAOxL,EAAEyL,QAASzL,EAAE6C,QAAS7C,EAAEkR,cAEnEmI,IAAI,SAAAC,GAAO,OAAAviB,EAASuiB,GAAOpX,SAASoX,EAAK,IAAMA,IAGpD,OAAOzC,GAAgB9W,GCJzB,SAAAwZ,GAA0BxZ,GACxB,IAAM8O,EAAMyJ,GAgBd,SAAAkB,EAA8BzZ,GAC5B,IAAI9H,EAAQ8H,EAAOsU,GACbjS,EAASrC,EAAO6U,GAItB,GAFA7U,EAAOyC,QAAUzC,EAAOyC,SAAWgC,GAAUzE,EAAO0Z,IAEtC,OAAVxhB,GAAmBmK,IAAWzI,WAAuB,KAAV1B,EAC7C,OAAOib,GAAcnT,EAAQ,CAAEW,WAAW,IAGxC3J,EAASkB,KACX8H,EAAOsU,GAAKpc,EAAQ8H,EAAOyC,QAAQyF,SAAShQ,IAG9C,GAAIhB,EAAOgB,GAGT,OAFA8H,EAAO+S,GAAKvP,GAAUtL,GAEf8H,EAKL/H,EAAQoK,GC/Cd,SAAAsX,EAAyC3Z,GACvC,IAAI4Z,EACAC,EACAC,EACAC,EAQA9Z,EANJ,IAAKD,EAAO6U,IAA2B,IAArB7U,EAAO6U,GAAGja,OAG1B,OAFAwF,GAAgBJ,GAAQa,eAAgB,EAEjCsS,GAAcnT,GAIvB,IAAKC,EAAI,EAAGA,EAAID,EAAO6U,GAAGja,OAAQqF,IAChC8Z,EAAe,EACfH,EAAaviB,OAAO0X,OAAO,GAAI/O,GACT,MAAlBA,EAAOoX,UACTwC,EAAWxC,QAAUpX,EAAOoX,SAE9BwC,EAAW/E,GAAK7U,EAAO6U,GAAG5U,GAC1B6U,GAA0B8E,GAErB7H,GAAQ6H,KAKbG,GAAgB3Z,GAAgBwZ,GAAYlZ,cAG5CqZ,GAAkE,GAAlD3Z,GAAgBwZ,GAAYrZ,aAAa3F,OAEzDwF,GAAgBwZ,GAAYI,MAAQD,GAEjB,MAAfD,GAAuBC,EAAeD,KACxCA,EAAcC,EACdF,EAAaD,IAIjB,OAAOviB,OAAO0X,OAAO/O,EAAQ6Z,GAAcD,GDQzCD,CAAyB3Z,GAChBqC,EACTyS,GAA0B9U,GAY9B,SAAAia,EAAyBja,GACvB,IAAM9H,EAAQ8H,EAAOsU,GACrB,GAAI7b,EAAYP,GACd8H,EAAO+S,GAAK,IAAI3b,UACX,GAAIF,EAAOgB,GAChB8H,EAAO+S,GAAKvP,GAAUtL,QACjB,GAAIlB,EAASkB,IP6JtB,SAAAgiB,EAAiCla,GAC/B,IAAKhJ,EAASgJ,EAAOsU,IACnB,OAAOtU,EAGT,IAAMV,EAAUmU,GAAgBmB,KAAK5U,EAAOsU,IAE5C,OAAgB,OAAZhV,GACFU,EAAO+S,GAAK,IAAI3b,MAAMkI,EAAQ,IAEvBU,IAOTqU,GAAcrU,IACU,IAApBA,EAAOoR,SAGFpR,UAFAA,EAAOoR,SAKhBoE,GAAkBxV,IACM,IAApBA,EAAOoR,SAGFpR,UAFAA,EAAOoR,SAOT+B,GAAcnT,MO7LnBka,CAAiBla,QACZ,GAAI/H,EAAyBC,IAAUA,EAAM0C,OAAQ,CAC1D,IAAMuf,EAA4BjiB,EAAM4P,MAAM,GAC9C9H,EAAOgW,GAAKmE,EAAKb,IAAI,SAAAC,GAAO,OAAAviB,EAASuiB,GAAOpX,SAASoX,EAAK,IAAMA,IAChEzC,GAAgB9W,QACX,GAAIxH,EAASN,GAClBghB,GAAiBlZ,OACZ,CAAA,IAAIhI,EAASE,GAKlB,OAAOib,GAAcnT,GAHrBA,EAAO+S,GAAK,IAAI3b,KAAKc,GAMvB,OAAO8H,EAhCLia,CAAgBja,GAGb+R,GAAQ/R,KACXA,EAAO+S,GAAK,MAGd,OAAO/S,EAlDmByZ,CAAczZ,IAaxC,OAXA8O,EAAIiE,GAAK,IAAI3b,KAAe,MAAV0X,EAAIiE,GAAajE,EAAIiE,GAAGpb,UAAYgK,KACjDoQ,GAAQ1a,OAAO0X,OAAO,GAAID,EAAK,CAACsC,SAAU,UAC7CtC,EAAIiE,GAAK,IAAI3b,KAAKuK,MASbmN,EAiET,SAAAsL,GAAiCliB,EAAkBmK,EAA4BkQ,EAAoBvJ,EAAkBrM,GACnH,IAAMqD,EAA4B,GAC9Bqa,EAASniB,EAqBb,OAZKM,EAAS6hB,IrCtDhB,SAAAC,EAA8Bf,GAC5B,GAAIliB,OAAOkjB,oBACT,OAAmD,IAA3CljB,OAAOkjB,oBAAoBhB,GAAK3e,OAE1C,IAAI4f,EACJ,IAAKA,KAAKjB,EACR,GAAIA,EAAIhhB,eAAeiiB,GACrB,OAAO,EAIX,OAAO,EqC2CkBF,CAAcD,IAAapiB,EAAQoiB,IAA6B,IAAlBA,EAAOzf,UAC5Eyf,EAASzgB,WAKXoG,EAAOoX,QAAUpX,EAAOya,OAAS9d,EACjCqD,EAAO0Z,GAAKnH,EACZvS,EAAOsU,GAAK+F,EACZra,EAAO6U,GAAKxS,EACZrC,EAAO2C,QAAUqG,EAEVwQ,GAAiBxZ,GE/G1B,SAAA0a,GAA0BxiB,EAAkBmK,EAClBkQ,EAAoBvJ,EAAkBrM,GAC9D,OAAIzF,EAAOgB,GACFA,EAGMkiB,GAAiBliB,EAAOmK,EAAQkQ,EAAWvJ,EAAQrM,GAEpDoW,GCbhB,SAAA4H,GAAyB/jB,GACvB,OAAOA,EAAM,GAA4B,EAAxBC,KAAKoO,OAAa,EAAPrO,GAAiBC,KAAKoO,MAAMrO,GCa1D,SAAAgkB,GAA8Bxf,EAAeyf,GAC3C1f,EAAeC,EAAO,KAAM,KAAM,SAAU1D,EAAYsI,GACtD,IAAI8a,EA4FR,SAAAC,EAA6BrjB,EAAYsI,QAAA,IAAAA,IAAAA,EAAA,IACvC,IAAMgb,EAAUhb,EAAOgb,SAAW,EAElC,OAAOhb,EAAOya,OAASO,EA7BzB,SAAAC,EAA8BvjB,GAG5B,OAAoD,IAA5Cb,KAAKoO,MAAMvN,EAAKwjB,oBAAsB,IA0BbD,CAAcvjB,GA/FhCqjB,CAAarjB,EAAM,CAAC+iB,OAAQza,EAAOrD,MAAOqe,QAAShb,EAAO8a,SACnEK,EAAO,IAMX,OALIL,EAAS,IACXA,GAAUA,EACVK,EAAO,KAGFA,EAAO7gB,KAAYwgB,EAAS,IAAK,GAAKD,EAAYvgB,IAAU,EAAY,GAAI,KAIvFsgB,GAAqB,IAAK,KAC1BA,GAAqB,KAAM,IAI3B/b,GAAc,IAAKH,IACnBG,GAAc,KAAMH,IACpBkB,GAAc,CAAC,IAAK,MAAO,SAAU1H,EAAe6H,EAAkBC,GAIpE,OAHAA,EAAOoX,SAAU,EACjBpX,EAAOiW,KAYT,SAAAmF,EAA0BC,EAAiBpkB,GACzC,IAAMqkB,GAAWrkB,GAAO,IAAIiL,MAAMmZ,GAElC,GAAgB,OAAZC,EACF,OAAO,KAGT,IACMC,EADQD,EAAQA,EAAQ1gB,OAAS,GACnBsH,MAAMsZ,KAAgB,CAAC,IAAK,IAAK,KAC/C9P,EAAmC,GAAzBvJ,SAASoZ,EAAM,GAAI,IAAW7iB,EAAM6iB,EAAM,IACpDE,EAAoB,MAAbF,EAAM,GAAa7P,GAAWA,EAE3C,OAAmB,IAAZA,EAAgB,EAAI+P,EAxBbL,CAAiB1c,GAAkBxG,GAE1C8H,IAQT,IAAMwb,GAAc,kBC3CpB,SAAAE,GACEhe,EACAC,EACAhE,GAEA,YAFA,IAAAA,IAAAA,EAAA,mBAEK+D,IAAUC,KAID,iBAAVhE,EACK+D,EAAMiV,UAAYhV,EAAMgV,UAG1BhV,EAAMgV,UAAYlP,GAAQ/F,EAAO/D,GAAOgZ,WAGjD,SAAAgJ,GACEje,EACAC,EACAhE,GAEA,YAFA,IAAAA,IAAAA,EAAA,mBAEK+D,IAAUC,KAID,iBAAVhE,EACK+D,EAAMiV,UAAYhV,EAAMgV,UAG1B9N,GAAMnH,EAAO/D,GAAOgZ,UAAYhV,EAAMgV,WClB/C,ICsDIvX,GDtDEwgB,GAAc,2DAMdC,GAAW,sKAIjB,SAAAzJ,GAA+Bla,EAAuBmP,EAAcrH,QAAA,IAAAA,IAAAA,EAAA,IAClE,IAAM4Q,EAMR,SAAAkL,EAAyB5jB,EAAYmP,GAEnC,GAAa,MAATnP,EACF,MAAO,GAGT,GfmIF,SAAA6jB,EAA2BxC,GACzB,OAAOA,aAAe5I,GepIlBoL,CAAW7jB,GACb,MAAO,CACLiZ,aAAcjZ,EAAMuZ,cACpB5O,IAAK3K,EAAMwZ,MACXhQ,MAAOxJ,EAAMwQ,SAGjB,GAAI1Q,EAASE,GAEX,OAAOmP,IAAG2O,EAAA,IAAM3O,GAAMnP,EAAK8d,GAAK,CAAE7E,aAAcjZ,GAGlD,GAAIlB,EAASkB,GAAQ,CACnB,IAAIgK,EAAQ0Z,GAAYhH,KAAK1c,GAE7B,GAAIgK,EAAO,CACT,IAAMiZ,EAAqB,MAAbjZ,EAAM,IAAe,EAAI,EAEvC,MAAO,CACLX,KAAM,EACNsB,IAAKnK,EAAMwJ,EAAMnI,IAASohB,EAC1B1P,MAAO/S,EAAMwJ,EAAMlI,IAASmhB,EAC5BzP,QAAShT,EAAMwJ,EAAMjI,IAAWkhB,EAChCrY,QAASpK,EAAMwJ,EAAMhI,IAAWihB,EAEhChK,aAAczY,EAAMiiB,GAAqC,IAA5BjiB,EAAMwJ,EAAM/H,MAAyBghB,GAKtE,GADAjZ,EAAQ2Z,GAASjH,KAAK1c,GACX,CACT,IAAMijB,EAAqB,MAAbjZ,EAAM,IAAe,GAAKA,EAAM,GAAc,GAE5D,MAAO,CACLX,KAAMya,GAAS9Z,EAAM,GAAIiZ,GACzBzZ,MAAOsa,GAAS9Z,EAAM,GAAIiZ,GAC1BzV,KAAMsW,GAAS9Z,EAAM,GAAIiZ,GACzBtY,IAAKmZ,GAAS9Z,EAAM,GAAIiZ,GACxB1P,MAAOuQ,GAAS9Z,EAAM,GAAIiZ,GAC1BzP,QAASsQ,GAAS9Z,EAAM,GAAIiZ,GAC5BrY,QAASkZ,GAAS9Z,EAAM,GAAIiZ,KAMlC,GAAI3iB,EAA+BN,KAAW,SAAUA,GAAS,OAAQA,GAAQ,CAC/E,IAAM+jB,EAuCV,SAAAC,EAA2BC,EAAYC,GACrC,IAAM3kB,EAAY0kB,KAAS1kB,EAAY2kB,GACrC,MAAO,CAAEjL,aAAc,EAAG7O,OAAQ,GAGpC,IAAIwM,EACEuN,EFjER,SAAAC,EAAgCpkB,EAAaR,EACbsI,GAC9B,QAD8B,IAAAA,IAAAA,EAAA,KACzBA,EAAOya,OACV,OAAOviB,EAGT,IAAM4W,EAAMtL,GAAU9L,GAEhB6kB,EAAqC,KAAvBvc,EAAOgb,SAAW,GAChCvS,EAAOvQ,EAAMya,UAAY7D,EAAI6D,UAAY4J,EAM/C,OAJAzN,EAAI0N,QAAQ1N,EAAI6D,UAAYlK,GAIrBqG,EEkDQwN,CAAgBF,EAAOD,EAAM,CAACnB,QAASmB,EAAKjB,sBACvDS,GAASQ,EAAME,GACjBvN,EAAM2N,GAA0BN,EAAME,KAEtCvN,EAAM2N,GAA0BJ,EAAQF,IACpChL,cAAgBrC,EAAIqC,aACxBrC,EAAIxM,QAAUwM,EAAIxM,QAGpB,OAAOwM,EAtDWoN,CAAkBxB,GAAUxiB,EAAMwkB,MAAOhC,GAAUxiB,EAAMykB,KAEzE,MAAO,CACLxL,aAAc8K,EAAQ9K,aACtBzP,MAAOua,EAAQ3Z,QAInB,OAAOpK,QAnEU4jB,CAAgB5jB,EAAOmP,GAGxC,OAAO,IAAIsJ,GAASC,EAAU5Q,GAsEhC,SAAAgc,GAAkBY,EAAazB,GAI7B,IAAMrM,EAAM8N,GAAOC,WAAWD,EAAIvd,QAAQ,IAAK,MAG/C,OAAQzH,MAAMkX,GAAO,EAAIA,GAAOqM,EAGlC,SAAAsB,GAAmCN,EAAYC,GAC7C,IAAMtN,EAAM,CAAEqC,aAAc,EAAG7O,OAAQ,GAWvC,OATAwM,EAAIxM,OAAS/E,EAAS6e,GAAS7e,EAAS4e,GACK,IAA1C3f,EAAY4f,GAAS5f,EAAY2f,IAEhCT,GADcpX,GAAId,GAAU2Y,GAAOrN,EAAIxM,OAAQ,SAC5B8Z,MACnBtN,EAAIxM,OAGRwM,EAAIqC,cAAgBiL,GAAU9X,GAAId,GAAU2Y,GAAOrN,EAAIxM,OAAQ,SAExDwM,EEhHT,SAAAxK,GAAoB5M,EAAYmQ,EAAaiV,EAAoBngB,GAG/D,OAAOogB,GAAYrlB,EAFP0a,GAAevK,EAAKiV,GAEF,EAAGngB,GAGnC,SAAAmI,GAAyBpN,EAAYmQ,EAAaiV,EAAoBngB,GAGpE,OAAOogB,GAAYrlB,EAFP0a,GAAevK,EAAKiV,IAED,EAAGngB,GAGpC,SAAAogB,GAA4BrlB,EAAYkZ,EAAoBoM,EAAkBrgB,GAC5E,IAAMwU,EAAeP,EAASa,cACxBP,EAAOyJ,GAAS/J,EAASc,OACzBpP,EAASqY,GAAS/J,EAASlI,SAejC,OAVIpG,GACFW,GAASvL,EAAM6F,EAAS7F,EAAMiF,GAAS2F,EAAS0a,EAAUrgB,GAExDuU,GACF5N,GAAQ5L,EAAM2F,EAAQ3F,EAAMiF,GAASuU,EAAO8L,EAAUrgB,GAEpDwU,GhC0EN,SAAAqL,EAAwB9kB,EAAYP,GAGlC,OAFAO,EAAK8kB,QAAQrlB,GAENO,EgC5EL8kB,CAAQ9kB,EvClBZ,SAAAC,EAAwBD,GACtB,OAAOA,EAAKC,UuCiBIA,CAAQD,GAAQyZ,EAAe6L,GAGxCxZ,GAAU9L,G7B8FnB,SAAAiN,GAA6BjN,EAAYQ,EAAeyD,EAAsBgB,QAAtB,IAAAhB,IAAAA,EAAS8I,MAC/D,IAAM5B,EAAM1F,EAAOzF,EAAMiF,GAGzB,OAAO2H,GAAI5M,EAxCb,SAAAulB,EAA6B/kB,EAAwByD,GACnD,IAAK3E,EAASkB,GACZ,OAAOA,EAGT,IAAMglB,EAAO/a,SAASjK,EAAO,IAC7B,IAAKN,MAAMslB,GACT,OAAOA,EAGT,IAAMC,EAAWxhB,EAAO+I,cAAcxM,GACtC,OAAIF,EAASmlB,GACJA,EAGF,KAuBQF,CAAa/kB,EAAOyD,GAETkH,EAAK,OAGjC,SAAA+B,GAA6BlN,EAAYiF,GACvC,OAAOQ,EAAOzF,EAAMiF,GAOtB,SAAA0H,GAAmC3M,EAAYiE,EAAsBgB,GACnE,YAD6C,IAAAhB,IAAAA,EAAS8I,OAC9CtH,EAAOzF,EAAMiF,GAAS,EAAIhB,EAAOkO,kBAAoB,E8BpI/D,SAAAuT,GAAiB1lB,EAAYiF,GAC3B,OAAOD,EAAShF,EAAMiF,GAAS,IAAM,GAsDvC,SAAAsE,GAAkB7F,EAAeiiB,GAC/BliB,EAAeC,EAAO,KAAM,KAC1B,SAAU1D,EAAYgE,GACpB,OAAOA,EAAKC,OAAOsF,SAASvE,EAAShF,EAAMgE,EAAKiB,OAAQE,EAAWnF,EAAMgE,EAAKiB,OAAQ0gB,KAiB5F,SAAAC,GAAuBte,EAAmBrD,GACxC,OAAOA,EAAO4hB,eFvBhB,I5BrDApiB,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACpB,OAAOyB,EAAOzF,EAAMgE,EAAKiB,OAAOpF,SAAS,MAG7C4D,EAAe,KAAM,KAAM,KACzB,SAAUzD,EAAYgE,GACpB,OAAOA,EAAKC,OAAOuO,YAAYxS,EAAMgE,EAAK2G,OAAQ3G,EAAKiB,SAG3DxB,EAAe,MAAO,KAAM,KAC1B,SAAUzD,EAAYgE,GACpB,OAAOA,EAAKC,OAAOyO,cAAc1S,EAAMgE,EAAK2G,OAAQ3G,EAAKiB,SAG7DxB,EAAe,OAAQ,KAAM,KAC3B,SAAUzD,EAAYgE,GACpB,OAAOA,EAAKC,OAAOoO,SAASrS,EAAMgE,EAAK2G,OAAQ3G,EAAKiB,SAGxDxB,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACpB,OAAO2I,GAAmB3M,EAAMgE,EAAKC,OAAQD,EAAKiB,OAAOpF,SAAS,MAGtE4D,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACpB,OAoHJ,SAAA8hB,EAAgC9lB,EAAYiF,GAC1C,OAAOQ,EAAOzF,EAAMiF,IAAU,EArHrB6gB,CAAgB9lB,EAAMgE,EAAKiB,OAAOpF,SAAS,MAKtD6B,EAAa,MAAO,KACpBA,EAAa,UAAW,KACxBA,EAAa,aAAc,KAS3ByF,GAAc,IAAKX,GACnBW,GAAc,IAAKX,GACnBW,GAAc,IAAKX,GAEnBW,GAAc,KAAM,SAAUG,EAAmBrD,GAC/C,OAAOA,EAAOyP,iBAAiBpM,KAGjCH,GAAc,MAAO,SAAUG,EAAmBrD,GAChD,OAAOA,EAAOsP,mBAAmBjM,KAEnCH,GAAc,OAAQ,SAAUG,EAAmBrD,GACjD,OAAOA,EAAOkP,cAAc7L,KAG9BkB,GAAkB,CAAC,KAAM,MAAO,QAC9B,SAAUhI,EAAewN,EAAmB1F,EAA2B5E,GACrE,IAAMgJ,EAAUpE,EAAOyC,QAAQiC,cAAcxM,EAAOkD,EAAO4E,EAAO2C,SAQlE,OANe,MAAXyB,EACFsB,EAAI,EAAKtB,EAEThE,GAAgBJ,GAAQgT,iBAAmB9a,EAGtC8H,IAGXE,GAAkB,CAAC,IAAK,IAAK,KAC3B,SAAUhI,EAAewN,EAAmB1F,EAA2B5E,GAGrE,OAFAsK,EAAKtK,GAAS1C,EAAMR,GAEb8H,I8BnEX7E,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAOgB,EAAShF,EAAMgE,EAAKiB,OAAOpF,SAAS,MAE/C4D,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAO0hB,GAAQ1lB,EAAMgE,EAAKiB,OAAOpF,SAAS,MAE9C4D,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAdJ,SAAA+hB,EAAiB/lB,EAAYiF,GAC3B,OAAOD,EAAShF,EAAMiF,IAAU,GAavB8gB,CAAQ/lB,EAAMgE,EAAKiB,OAAOpF,SAAS,MAG9C4D,EAAe,MAAO,KAAM,KAC1B,SAAUzD,EAAYgE,GAIpB,MAAO,GAHI0hB,GAAQ1lB,EAAMgE,EAAKiB,OAClBrC,EAASuC,EAAWnF,EAAMgE,EAAKiB,OAAQ,KAKvDxB,EAAe,QAAS,KAAM,KAC5B,SAAUzD,EAAYgE,GAKpB,MAAO,GAJI0hB,GAAQ1lB,EAAMgE,EAAKiB,OAClBrC,EAASuC,EAAWnF,EAAMgE,EAAKiB,OAAQ,GACvCrC,EAASyC,EAAWrF,EAAMgE,EAAKiB,OAAQ,KAKvDxB,EAAe,MAAO,KAAM,KAC1B,SAAUzD,EAAYgE,GAIpB,MAAO,GAHIgB,EAAShF,EAAMgE,EAAKiB,OACnBrC,EAASuC,EAAWnF,EAAMgE,EAAKiB,OAAQ,KAKvDxB,EAAe,QAAS,KAAM,KAC5B,SAAUzD,EAAYgE,GAKpB,MAAO,GAJIgB,EAAShF,EAAMgE,EAAKiB,OACnBrC,EAASuC,EAAWnF,EAAMgE,EAAKiB,OAAQ,GACvCrC,EAASyC,EAAWrF,EAAMgE,EAAKiB,OAAQ,KAYvDsE,GAAS,KAAK,GACdA,GAAS,KAAK,GAId7H,EAAa,OAAQ,KAYrByF,GAAc,IAAKye,IACnBze,GAAc,IAAKye,IACnBze,GAAc,IAAKX,GACnBW,GAAc,IAAKX,GACnBW,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,KAAMX,EAAWJ,GAE/Be,GAAc,MAAOV,GACrBU,GAAc,QAAST,GACvBS,GAAc,MAAOV,GACrBU,GAAc,QAAST,GAEvBwB,GAAc,CAAC,IAAK,MAAO5F,GAC3B4F,GAAc,CAAC,IAAK,MAClB,SAAU1H,EAAe6H,EAAkBC,GACzC,IAAM0d,EAAShlB,EAAMR,GAGrB,OAFA6H,EAAM/F,GAAmB,KAAX0jB,EAAgB,EAAIA,EAE3B1d,IAEXJ,GAAc,CAAC,IAAK,KAAM,SAAU1H,EAAe6H,EAAkBC,GAInE,OAHAA,EAAO2d,MAAQ3d,EAAOyC,QAAQ8I,KAAKrT,GACnC8H,EAAO6Y,UAAY3gB,EAEZ8H,IAETJ,GAAc,CAAC,IAAK,MAAO,SAAU1H,EAAe6H,EAAkBC,GAIpE,OAHAD,EAAM/F,GAAQtB,EAAMR,GACpBkI,GAAgBJ,GAAQiT,SAAU,EAE3BjT,IAETJ,GAAc,MAAO,SAAU1H,EAAe6H,EAAkBC,GAC9D,IAAM4d,EAAM1lB,EAAM0C,OAAS,EAK3B,OAJAmF,EAAM/F,GAAQtB,EAAMR,EAAM6C,OAAO,EAAG6iB,IACpC7d,EAAM9F,GAAUvB,EAAMR,EAAM6C,OAAO6iB,IACnCxd,GAAgBJ,GAAQiT,SAAU,EAE3BjT,IAETJ,GAAc,QAAS,SAAU1H,EAAe6H,EAAkBC,GAChE,IAAM6d,EAAO3lB,EAAM0C,OAAS,EACtBkjB,EAAO5lB,EAAM0C,OAAS,EAM5B,OALAmF,EAAM/F,GAAQtB,EAAMR,EAAM6C,OAAO,EAAG8iB,IACpC9d,EAAM9F,GAAUvB,EAAMR,EAAM6C,OAAO8iB,EAAM,IACzC9d,EAAM7F,GAAUxB,EAAMR,EAAM6C,OAAO+iB,IACnC1d,GAAgBJ,GAAQiT,SAAU,EAE3BjT,IAETJ,GAAc,MAAO,SAAU1H,EAAe6H,EAAkBC,GAC9D,IAAM4d,EAAM1lB,EAAM0C,OAAS,EAI3B,OAHAmF,EAAM/F,GAAQtB,EAAMR,EAAM6C,OAAO,EAAG6iB,IACpC7d,EAAM9F,GAAUvB,EAAMR,EAAM6C,OAAO6iB,IAE5B5d,IAETJ,GAAc,QAAS,SAAU1H,EAAe6H,EAAkBC,GAChE,IAAM6d,EAAO3lB,EAAM0C,OAAS,EACtBkjB,EAAO5lB,EAAM0C,OAAS,EAK5B,OAJAmF,EAAM/F,GAAQtB,EAAMR,EAAM6C,OAAO,EAAG8iB,IACpC9d,EAAM9F,GAAUvB,EAAMR,EAAM6C,OAAO8iB,EAAM,IACzC9d,EAAM7F,GAAUxB,EAAMR,EAAM6C,OAAO+iB,IAE5B9d,IFnJT7E,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACpB,UAAWuB,EAAgBvF,EAAMgE,EAAKiB,OAAS,MAAMpF,SAAS,MAGlE4D,EAAe,KAAM,CAAC,KAAM,GAAG,GAAQ,KACrC,SAAUzD,EAAYgE,GACpB,UAAWuB,EAAgBvF,EAAMgE,EAAKiB,OAAS,KAAKpF,SAAS,MAGjE4D,EAAe,KAAM,CAAC,MAAO,GAAG,GAAQ,KACtC,SAAUzD,EAAYgE,GACpB,OAAQuB,EAAgBvF,EAAMgE,EAAKiB,OAAQpF,SAAS,MAExD4D,EAAe,KAAM,CAAC,OAAQ,GAAG,GAAQ,KACvC,SAAUzD,EAAYgE,GACpB,OAA4C,GAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAapF,SAAS,MAE7D4D,EAAe,KAAM,CAAC,QAAS,GAAG,GAAQ,KACxC,SAAUzD,EAAYgE,GACpB,OAA4C,IAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAcpF,SAAS,MAE9D4D,EAAe,KAAM,CAAC,SAAU,GAAG,GAAQ,KACzC,SAAUzD,EAAYgE,GACpB,OAA4C,IAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAepF,SAAS,MAE/D4D,EAAe,KAAM,CAAC,UAAW,GAAG,GAAQ,KAC1C,SAAUzD,EAAYgE,GACpB,OAA4C,IAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAgBpF,SAAS,MAEhE4D,EAAe,KAAM,CAAC,WAAY,GAAG,GAAQ,KAC3C,SAAUzD,EAAYgE,GACpB,OAA4C,IAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAiBpF,SAAS,MAEjE4D,EAAe,KAAM,CAAC,YAAa,GAAG,GAAQ,KAC5C,SAAUzD,EAAYgE,GACpB,OAA4C,IAApCuB,EAAgBvF,EAAMgE,EAAKiB,QAAkBpF,SAAS,MAMlE6B,EAAa,cAAe,MAQ5ByF,GAAc,IAAKR,EAAWR,GAC9BgB,GAAc,KAAMR,EAAWP,GAC/Be,GAAc,MAAOR,EAAWN,GAG3B3C,GAAQ,OAAQA,GAAMR,QAAU,EAAGQ,IAAS,IAC/CyD,GAAczD,GAAOoD,GAGvB,SAAAuf,GAAiB7lB,EAAe6H,EAAkBC,GAGhD,OAFAD,EAAM5F,GAAezB,EAAiC,IAA3BmkB,WAAW,KAAK3kB,IAEpC8H,EAGT,IAAK5E,GAAQ,IAAKA,GAAMR,QAAU,EAAGQ,IAAS,IAC5CwE,GAAcxE,GAAO2iB,IGpBvB,SAAAC,GAAwBtmB,EAAYiE,EAAsBgB,GACxD,YADkC,IAAAhB,IAAAA,EAAS8I,MACpC9I,EAAO+J,KAAKhO,EAAMiF,GC9B3B,SAAAshB,GAAgC7iB,EAAe8iB,GAC7C/iB,EAAe,KAAM,CAACC,EAAOA,EAAMR,QAAQ,GAAQ,KAAMsjB,GAG3D,SAAAC,GAA8BzmB,EAAYgE,GACxC,OAAO0iB,GAAY1mB,EAAMgE,EAAKC,QAAQpE,WAGxC,SAAA8mB,GAAiC3mB,GAC/B,OAAO4mB,GAAe5mB,GAAMH,WAyD9B,SAAA6mB,GAA4B1mB,EAAYiE,EAAsBgB,GAC5D,YADsC,IAAAhB,IAAAA,EAAS8I,MACxCa,GAAW5N,EAAMiE,EAAOkO,iBAAkBlO,EAAOmO,iBAAkBnN,GAAO4E,KAOnF,SAAA+c,GAA+B5mB,EAAYiF,GACzC,OAAO2I,GAAW5N,EAAM,EAAG,EAAGiF,GAAO4E,KC/FvCpG,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAOmB,EAAWnF,EAAMgE,EAAKiB,OAAOpF,SAAS,MAKjD6B,EAAa,SAAU,KAQvByF,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/B8B,GAAc,CAAC,IAAK,MAAO3F,GCd3BkB,EAAe,IAAK,KAAM,KACxB,SAAUzD,EAAYgE,GACpB,OAsBJ,SAAA6iB,EAA2B7mB,EAAYiF,QAAA,IAAAA,IAAAA,GAAA,GACrC,OAAO9F,KAAKC,MAAMyG,EAAS7F,EAAMiF,GAAS,GAAK,GAvBtC4hB,CAAW7mB,EAAMgE,EAAKiB,OAAOpF,SAAS,MAKjD6B,EAAa,UAAW,KAQxByF,GAAc,IAAKhB,GACnB+B,GAAc,IAAK,SAAU1H,EAAe6H,EAAkBC,GAG5D,OAFAD,EAAMjG,GAA8B,GAApBpB,EAAMR,GAAS,GAExB8H,ICtBT7E,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAOqB,EAAWrF,EAAMgE,EAAKiB,OAAOpF,SAAS,MAKjD6B,EAAa,SAAU,KAQvByF,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/B8B,GAAc,CAAC,IAAK,MAAO1F,GClB3BiB,EAAe,IAAK,KAAM,KAAM,SAAUzD,GACxC,O9C8BF,SAAA8mB,EAAqB9mB,GACnB,OAAOb,KAAKE,MAAMW,EAAKib,UAAY,K8C/B5B6L,CAAK9mB,GAAMH,SAAS,MAE7B4D,EAAe,IAAK,KAAM,KAAM,SAAUzD,GACxC,OAAOA,EAAKib,UAAUpb,SAAS,MAKjCsH,GAAc,IAAKJ,IACnBI,GAAc,I7CCgB,wB6CC9Be,GAAc,IAAK,SAAU1H,EAAe6H,EAAkBC,GAG5D,OAFAA,EAAO+S,GAAK,IAAI3b,KAAyB,IAApBylB,WAAW3kB,IAEzB8H,IAETJ,GAAc,IAAK,SAAU1H,EAAe6H,EAAkBC,GAG5D,OAFAA,EAAO+S,GAAK,IAAI3b,KAAKsB,EAAMR,IAEpB8H,ILfT7E,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,EAAYgE,GACpB,OAAOsiB,GAAQtmB,EAAMgE,EAAKC,QAAQpE,SAAS,MAG/C4D,EAAe,IAAK,CAAC,KAAM,GAAG,GAAQ,KACpC,SAAUzD,GACR,OAqDJ,SAAA+mB,EAA2B/mB,EAAYiF,GACrC,OAAO2I,GAAW5N,EAAM,EAAG,EAAGiF,GAAO+I,KAtD5B+Y,CAAW/mB,GAAMH,SAAS,MAKrC6B,EAAa,OAAQ,KACrBA,EAAa,UAAW,KASxByF,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,IAAKX,GACnBW,GAAc,KAAMX,EAAWJ,GAE/BoC,GAAkB,CAAC,IAAK,KAAM,IAAK,MACjC,SAAUhI,EAAewN,EAAmB1F,EAA2B5E,GAGrE,OAFAsK,EAAKtK,EAAML,OAAO,EAAG,IAAMrC,EAAMR,GAE1B8H,IC3BX7E,EAAe,KAAM,CAAC,KAAM,GAAG,GAAQ,KACrC,SAAUzD,EAAYgE,GAEpB,OAAQ0iB,GAAY1mB,EAAMgE,EAAKC,QAAU,KAAKpE,aAGlD4D,EAAe,KAAM,CAAC,KAAM,GAAG,GAAQ,KACrC,SAAUzD,GAER,OAAQ4mB,GAAe5mB,GAAQ,KAAKH,aAexC0mB,GAAuB,OAAQE,IAC/BF,GAAuB,QAASE,IAChCF,GAAuB,OAAQI,IAC/BJ,GAAuB,QAASI,IAIhCjlB,EAAa,WAAY,MACzBA,EAAa,cAAe,MAU5ByF,GAAc,IAAKJ,IACnBI,GAAc,IAAKJ,IACnBI,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,KAAMX,EAAWJ,GAC/Be,GAAc,OAAQP,EAAWN,GACjCa,GAAc,OAAQP,EAAWN,GACjCa,GAAc,QAASN,EAAWN,GAClCY,GAAc,QAASN,EAAWN,GAElCiC,GAAkB,CAAC,OAAQ,QAAS,OAAQ,SAC1C,SAAUhI,EAAOwN,EAAmB1F,EAAQ5E,GAG1C,OAFAsK,EAAKtK,EAAML,OAAO,EAAG,IAAMrC,EAAMR,GAE1B8H,IAGXE,GAAkB,CAAC,KAAM,MAAO,SAAUhI,EAAOwN,EAAmB1F,EAAQ5E,GAG1E,OAFAsK,EAAKtK,GAASiG,GAAkBnJ,GAEzB8H,IKtET,IAAM0e,GAAqC,CACzCC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAECC,GAAqC,CACzCC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAEDC,GAAa,SAAUppB,GAC3B,OAAe,IAARA,EAAY,EAAY,IAARA,EAAY,EAAY,IAARA,EAAY,EAAiB,GAAbA,EAAM,KAAYA,EAAM,KAAO,GAAK,EAAiB,IAAbA,EAAM,IAAY,EAAI,GAEjHqpB,GAAuF,CAC3F3jB,EAAG,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,UAAW,WAAY,YAClFR,EAAG,CAAC,eAAgB,cAAe,CAAC,UAAW,WAAY,WAAY,WAAY,YACnFM,EAAG,CAAC,cAAe,aAAc,CAAC,SAAU,UAAW,WAAY,UAAW,WAC9EL,EAAG,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,WAAY,UACzEM,EAAG,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,UAAW,UAAW,UACxER,EAAG,CAAC,aAAc,WAAY,CAAC,QAAS,SAAU,WAAY,WAAY,WAEtEqkB,GAAY,SAAUC,GAC1B,OAAO,SAAUvpB,EAAayR,GAC5B,IAAM+X,EAAIJ,GAAWppB,GACjBK,EAAMgpB,GAAQE,GAAGH,GAAWppB,IAKhC,OAJU,IAANwpB,IACFnpB,EAAMA,EAAIoR,EAAgB,EAAI,IAGzB,EAAgBhJ,QAAQ,MAAOzI,EAAIW,cAGxC+K,GAAmB,CACvB,QACA,SACA,OACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,UAGW+d,GAAuB,CAClC3Q,KAAM,KACNpN,OAAMA,GACNF,YAAaE,GACbyH,SAAU,sDAAsD/D,MAAM,KACtEoE,cAAe,wCAAwCpE,MAAM,KAC7DkE,YAAa,gBAAgBlE,MAAM,KACnCsa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAERmH,cAAe,MACfvC,cAAKrT,GACH,MAAO,MAAQA,GAEjB+I,kBAASjI,EAAMC,EAAQ0S,GACrB,OAAI3S,EAAO,GACF,IAEA,KAGXoO,SAAU,CACR0F,QAAS,wBACTC,QAAS,uBACTC,SAAU,uBACVC,QAAS,sBACTC,SAAU,uBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,SACRC,KAAM,SACNjR,EAAG4jB,GAAU,KACb1S,GAAI0S,GAAU,KACdpkB,EAAGokB,GAAU,KACbzS,GAAIyS,GAAU,KACd9jB,EAAG8jB,GAAU,KACbxS,GAAIwS,GAAU,KACdnkB,EAAGmkB,GAAU,KACbvS,GAAIuS,GAAU,KACd7jB,EAAG6jB,GAAU,KACbtS,GAAIsS,GAAU,KACdrkB,EAAGqkB,GAAU,KACbrS,GAAIqS,GAAU,MAEhBhY,SAAA,SAASjR,GACP,OAAOA,EAAIoI,QAAQ,gBAAiB,SAAU6C,GAC5C,OAAOmd,GAAUnd,KAChB7C,QAAQ,KAAM,MAEnB8I,oBAAWlR,GACT,OAAOA,EAAIoI,QAAQ,MAAO,SAAU6C,GAClC,OAAOwc,GAAUxc,KAChB7C,QAAQ,KAAM,MAEnBqG,KAAM,CACJP,IAAK,EACLC,IAAK,KC1HH9C,GAAmB,oFAAoF0D,MAAM,KAC7G5D,GAAwB,kDAAkD4D,MAAM,KAEtF,SAAAua,GAAgB3pB,GACd,OAAc,EAANA,GAAaA,EAAM,GAAwB,MAAdA,EAAM,IAG7C,SAAA4pB,GAAmB5pB,EAAayR,EAAwBhB,EAAaiB,GACnE,IAAMgN,EAAS1e,EAAM,IAErB,OAAQyQ,GACN,IAAK,IACH,OAAQgB,GAAiBC,EAAY,aAAe,gBACtD,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,UAAY,UAEpC0e,EAAS,YAGpB,IAAK,IACH,OAAOjN,EAAgB,SAAYC,EAAW,SAAW,UAC3D,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,SAAW,SAEnC0e,EAAS,WAGpB,IAAK,IACH,OAAOjN,EAAgB,SAAYC,EAAW,SAAW,UAC3D,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,SAAW,SAEnC0e,EAAS,WAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,MAAQ,OAC/C,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,MAAQ,OAEhC0e,EAAS,MAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,QAAU,UACjD,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,SAAW,UAEnC0e,EAAS,SAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,MAAQ,QAC/C,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,OAAS,OAEjC0e,EAAS,QAMxB,IAAamL,GAAuB,CAClC/Q,KAAM,KACNpN,OAAMoe,GACNte,YAAWA,GACXM,YAAc,SAAUJ,EAAQF,GAC9B,IAAInC,EAAGkJ,EAAe,GACtB,IAAKlJ,EAAI,EAAGA,EAAI,GAAIA,IAElBkJ,EAAalJ,GAAK,IAAIf,OAAO,IAAMoD,EAAOrC,GAAK,MAAQmC,EAAYnC,GAAK,IAAK,KAE/E,OAAOkJ,EANE,CAOT7G,GAAQF,IACVue,iBAAmB,SAAUve,GAC3B,IAAInC,EAAGoJ,EAAoB,GAC3B,IAAKpJ,EAAI,EAAGA,EAAI,GAAIA,IAClBoJ,EAAkBpJ,GAAK,IAAIf,OAAO,IAAMkD,EAAYnC,GAAK,IAAK,KAEhE,OAAOoJ,EALO,CAMdjH,IACFwe,gBAAkB,SAAUte,GAC1B,IAAIrC,EAAGmJ,EAAmB,GAC1B,IAAKnJ,EAAI,EAAGA,EAAI,GAAIA,IAClBmJ,EAAiBnJ,GAAK,IAAIf,OAAO,IAAMoD,EAAOrC,GAAK,IAAK,KAE1D,OAAOmJ,EALM,CAMb9G,IACFyH,SAAU,mDAAmD/D,MAAM,KACnEoE,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,yBACNgO,EAAG,cAELvN,SAAU,CACR0F,QAAS,cACTC,QAAS,eACTC,SAAA,SAAStV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,kBACT,KAAK,EACL,KAAK,EACH,MAAO,kBACT,KAAK,EACH,MAAO,mBACT,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAO,iBACT,KAAK,EACH,MAAO,oBAGbuV,QAAS,eACTC,SAAA,SAASxV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,wBACT,KAAK,EACL,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,wBACT,KAAK,EACL,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,0BAGbyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,UACNjR,EAAGkkB,GACHhT,GAAIgT,GACJ1kB,EAAG0kB,GACH/S,GAAI+S,GACJpkB,EAAGokB,GACH9S,GAAI8S,GACJzkB,EAAGykB,GACH7S,GAAI6S,GACJnkB,EAAGmkB,GACH5S,GAAI4S,GACJ3kB,EAAG2kB,GACH3S,GAAI2S,IAENnT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,ICzKIyb,GAAuB,CAClCnR,KAAM,KACNpN,OAAS,sFAAsF0D,MAAM,KACrG5D,YAAc,kDAAkD4D,MAAM,KACtE+D,SAAW,qDAAqD/D,MAAM,KACtEoE,cAAgB,8BAA8BpE,MAAM,KACpDkE,YAAc,uBAAuBlE,MAAM,KAC3CyB,eAAiB,CACblB,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,eACLC,IAAM,qBACNC,KAAO,sCAEXS,SAAW,CACP0F,QAAU,iBACVC,QAAU,oBACVC,SAAW,mBACXC,QAAU,iBACVC,SAAW,qBACXC,SAAW,KAEf/E,aAAe,CACXkF,OAAS,QACTC,KAAO,WACPjR,EAAI,cACJR,EAAI,WACJ2R,GAAK,cACLrR,EAAI,UACJsR,GAAK,WACL3R,EAAI,SACJ4R,GAAK,UACLtR,EAAI,WACJuR,GAAK,aACL/R,EAAI,QACJgS,GAAK,SAETR,uBAAwB,YACxB/R,QAAU,MACVoK,KAAO,CACHP,IAAM,EACNC,IAAM,ICpCZ,SAAA0b,GAA6BlqB,EAAayR,EAAwBhB,EAAaiB,GAC7E,IAAMjG,EAA8C,CAClDvG,EAAK,CAAC,cAAe,gBACrBM,EAAK,CAAC,cAAe,gBACrBL,EAAK,CAAC,UAAW,aACjB4R,GAAM,CAAC/W,EAAM,QAASA,EAAM,UAC5ByF,EAAK,CAAC,YAAa,eACnBuR,GAAM,CAAChX,EAAM,UAAWA,EAAM,YAC9BiF,EAAK,CAAC,WAAY,cAClBgS,GAAM,CAACjX,EAAM,SAAUA,EAAM,YAE/B,OAAOyR,EAAgBhG,EAAOgF,GAAK,GAAKhF,EAAOgF,GAAK,GAGtD,IAAa0Z,GAAuB,CAClCrR,KAAM,KACNpN,OAAQ,qFAAqF0D,MAAM,KACnG5D,YAAa,6DAA6D4D,MAAM,KAChFgb,kBAAkB,EAClBjX,SAAU,8DAA8D/D,MAAM,KAC9EoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,eACJC,IAAK,qBACLC,KAAM,4BAERS,SAAU,CACR0F,QAAS,sBACTK,SAAU,IACVJ,QAAS,uBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,gCAEZ9E,aAAc,CACZkF,OAAQ,QACRC,KAAM,SACNjR,EAAG,oBACHkR,GAAI,cACJ1R,EAAGglB,GACHrT,GAAI,aACJrR,EAAG0kB,GACHpT,GAAI,aACJ3R,EAAG+kB,GACHnT,GAAImT,GACJzkB,EAAGykB,GACHlT,GAAIkT,GACJjlB,EAAGilB,GACHjT,GAAIiT,IAENzT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC9DI6b,GAAyB,CACpCvR,KAAM,QACNpN,OAAS,wFAAwF0D,MAAM,KACvG5D,YAAc,kDAAkD4D,MAAM,KACtE+D,SAAW,2DAA2D/D,MAAM,KAC5EoE,cAAgB,8BAA8BpE,MAAM,KACpDkE,YAAc,uBAAuBlE,MAAM,KAC3CyB,eAAiB,CACflB,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,2BAETS,SAAW,CACT0F,QAAU,gBACVC,QAAU,mBACVC,SAAW,eACXC,QAAU,oBACVC,SAAW,sBACXC,SAAW,KAEb/E,aAAe,CACbkF,OAAS,QACTC,KAAO,SACPjR,EAAI,gBACJkR,GAAK,aACL1R,EAAI,WACJ2R,GAAK,aACLrR,EAAI,UACJsR,GAAK,WACL3R,EAAI,QACJ4R,GAAK,UACLtR,EAAI,UACJuR,GAAK,YACL/R,EAAI,SACJgS,GAAK,YAEPR,uBAAwB,uBACxB/R,QAAA,SAAQ4hB,GACN,IAAMtmB,EAAMsqB,OAAOhE,GACb5kB,EAAI1B,EAAM,GAKhB,OAAOA,GAJ4B,MAApBA,EAAM,IAAM,IAAa,KAC7B,IAAN0B,EAAW,KACH,IAANA,EAAW,KACH,IAANA,EAAW,KAAO,OAG7BoN,KAAO,CACLP,IAAM,EACNC,IAAM,IClDN+b,GAAiB,8DAA8Dnb,MAAM,KACvF5D,GAAc,kDAAkD4D,MAAM,KAEpEtD,GAAc,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAClHF,GAAc,mLAEL4e,GAAuB,CAClC1R,KAAM,KACNpN,OAAQ,2FAA2F0D,MAAM,KACzG5D,YAAA,SAAY1K,EAAY2K,EAAgB1F,GACtC,OAAKjF,EAID,QAAQmR,KAAKxG,GACRD,GAAY7E,EAAS7F,EAAMiF,IAG7BwkB,GAAe5jB,EAAS7F,EAAMiF,IAP5BwkB,IASX3e,YAAWA,GACXD,iBAAkBC,GAClB6e,kBAAmB,+FACnBC,uBAAwB,0FACxB5e,YAAWA,GACXke,gBAAiBle,GACjBie,iBAAkBje,GAClBqH,SAAU,uDAAuD/D,MAAM,KACvEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,wBACJC,IAAK,6BACLC,KAAM,oCAERS,SAAU,CACR0F,iBAAQpV,GACN,MAAO,aAAmC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE7DqV,iBAAQrV,GACN,MAAO,gBAAsC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAEhEsV,kBAAStV,GACP,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DuV,iBAAQvV,GACN,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DwV,kBAASxV,GACP,MAAO,0BAAgD,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE1EyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,UACNjR,EAAG,gBACHkR,GAAI,cACJ1R,EAAG,YACH2R,GAAI,aACJrR,EAAG,WACHsR,GAAI,WACJ3R,EAAG,SACH4R,GAAI,UACJtR,EAAG,SACHuR,GAAI,WACJ/R,EAAG,SACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC9EL+b,GAAiB,8DAA8Dnb,MAAM,KACvF5D,GAAc,kDAAkD4D,MAAM,KAEpEtD,GAAc,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAClHF,GAAc,mLAEL+e,GAAyB,CACpC7R,KAAM,QACNpN,OAAQ,2FAA2F0D,MAAM,KACzG5D,YAAA,SAAY1K,EAAY2K,EAAgB1F,GACtC,OAAKjF,EAEM,QAAQmR,KAAKxG,GACfD,GAAY7E,EAAS7F,EAAMiF,IAE3BwkB,GAAe5jB,EAAS7F,EAAMiF,IAJ9BwkB,IAOX3e,YAAWgf,GACXjf,iBAAkBC,GAClB6e,kBAAmB,+FACnBC,uBAAwB,0FACxB5e,YAAW+e,GACXb,gBAAiBle,GACjBie,iBAAkBje,GAClBqH,SAAU,uDAAuD/D,MAAM,KACvEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,SACJD,IAAK,YACLE,EAAG,aACHC,GAAI,wBACJC,IAAK,+BACLC,KAAM,sCAERS,SAAU,CACR0F,QAAA,SAAQpV,GACN,MAAO,aAAmC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE7DqV,QAAA,SAAQrV,GACN,MAAO,gBAAsC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAEhEsV,SAAA,SAAStV,GACP,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DuV,QAAA,SAAQvV,GACN,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DwV,SAAA,SAASxV,GACP,MAAO,0BAAgD,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE1EyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,UACNjR,EAAG,gBACHkR,GAAI,cACJ1R,EAAG,YACH2R,GAAI,aACJrR,EAAG,WACHsR,GAAI,WACJ3R,EAAG,SACH4R,GAAI,UACJtR,EAAG,SACHuR,GAAI,WACJ/R,EAAG,SACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC1EL+b,GAAiB,8DAA8Dnb,MAAM,KACrF5D,GAAc,kDAAkD4D,MAAM,KAE7D0b,GAAyB,CACpChS,KAAM,QACNpN,OAAQ,2FAA2F0D,MAAM,KACzG5D,YAAA,SAAY1K,EAAY2K,EAAgB1F,GACtC,OAAKjF,EAEM,QAAQmR,KAAKxG,GACfD,GAAY7E,EAAS7F,EAAMiF,IAE3BwkB,GAAe5jB,EAAS7F,EAAMiF,IAJ9BwkB,IAOXH,kBAAkB,EAClBjX,SAAU,uDAAuD/D,MAAM,KACvEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,SACJD,IAAK,YACLE,EAAG,aACHC,GAAI,wBACJC,IAAK,+BACLC,KAAM,sCAERS,SAAU,CACR0F,QAAA,SAAQpV,GACN,MAAO,aAAmC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE7DqV,QAAA,SAAQrV,GACN,MAAO,gBAAsC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAEhEsV,SAAA,SAAStV,GACP,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DuV,QAAA,SAAQvV,GACN,MAAO,cAAoC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE9DwV,SAAA,SAASxV,GACP,MAAO,0BAAgD,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE1EyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,UACNjR,EAAG,gBACHkR,GAAI,cACJ1R,EAAG,YACH2R,GAAI,aACJrR,EAAG,WACHsR,GAAI,WACJ3R,EAAG,SACH4R,GAAI,UACJtR,EAAG,SACHuR,GAAI,WACJ/R,EAAG,SACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,ICpELuc,GAAc,wEAAwE3b,MAAM,KAC9F4b,GAAgB,CACd,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAC1DD,GAAY,GAAIA,GAAY,GAAIA,GAAY,IAGhD,SAAAE,GAAmBjrB,EAAayR,EAAwBhB,EAAaiB,GACnE,IAAIgN,EAAS,GACb,OAAQjO,GACN,IAAK,IACH,OAAOiB,EAAW,oBAAsB,kBAC1C,IAAK,KACH,OAAOA,EAAW,WAAa,WACjC,IAAK,IACH,OAAOA,EAAW,WAAa,WACjC,IAAK,KACHgN,EAAShN,EAAW,WAAa,YACjC,MACF,IAAK,IACH,OAAOA,EAAW,SAAW,QAC/B,IAAK,KACHgN,EAAShN,EAAW,SAAW,SAC/B,MACF,IAAK,IACH,OAAOA,EAAW,SAAW,QAC/B,IAAK,KACHgN,EAAShN,EAAW,SAAW,SAC/B,MACF,IAAK,IACH,OAAOA,EAAW,YAAc,WAClC,IAAK,KACHgN,EAAShN,EAAW,YAAc,YAClC,MACF,IAAK,IACH,OAAOA,EAAW,SAAW,QAC/B,IAAK,KACHgN,EAAShN,EAAW,SAAW,SAInC,OADAgN,EAIF,SAAAwM,EAAsBlrB,EAAa0R,GACjC,OAAO1R,EAAM,GAAM0R,EAAWsZ,GAAchrB,GAAO+qB,GAAY/qB,GAAQA,EAL9DkrB,CAAalrB,EAAK0R,GAAY,IAAMgN,EAQ/C,IAAayM,GAAuB,CAClCrS,KAAM,KACNpN,OAAQ,2GAA2G0D,MAAM,KACzH5D,YAAa,uEAAuE4D,MAAM,KAC1F+D,SAAU,qEAAqE/D,MAAM,KACrFoE,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,mBACJC,IAAK,gCACLC,KAAM,sCACNgO,EAAG,WACHqN,GAAI,cACJC,IAAK,2BACLC,KAAM,iCAER9a,SAAU,CACR0F,QAAS,oBACTC,QAAS,sBACTC,SAAU,gBACVC,QAAS,mBACTC,SAAU,4BACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,YACRC,KAAM,YACNjR,EAAGkkB,GACHhT,GAAIgT,GACJ1kB,EAAG0kB,GACH/S,GAAI+S,GACJpkB,EAAGokB,GACH9S,GAAI8S,GACJzkB,EAAGykB,GACH7S,GAAI6S,GACJnkB,EAAGmkB,GACH5S,GAAI4S,GACJ3kB,EAAG2kB,GACH3S,GAAI2S,IAENnT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC7FI+c,GAAuB,CAClCzS,KAAM,KACNpN,OAAQ,uFAAuF0D,MAAM,KACrG5D,YAAa,iEAAiE4D,MAAM,KACpFgb,kBAAkB,EAClBjX,SAAU,sDAAsD/D,MAAM,KACtEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAERS,SAAU,CACR0F,QAAS,qBACTC,QAAS,gBACTC,SAAU,cACVC,QAAS,cACTC,SAAU,sBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,UACRC,KAAM,YACNjR,EAAG,oBACHkR,GAAI,cACJ1R,EAAG,aACH2R,GAAI,aACJrR,EAAG,YACHsR,GAAI,YACJ3R,EAAG,UACH4R,GAAI,WACJtR,EAAG,UACHuR,GAAI,UACJ/R,EAAG,QACHgS,GAAI,UAENR,uBAAwB,eACxB/R,QAAA,SAAQ4hB,EAAcJ,GACpB,IAAMlmB,EAAMsqB,OAAOhE,GACnB,OAAQJ,GAIN,IAAK,IACH,OAAOlmB,GAAe,IAARA,EAAY,KAAO,IAGnC,QACA,IAAK,IACL,IAAK,IACL,IAAK,MACL,IAAK,IACH,OAAOA,GAAe,IAARA,EAAY,KAAO,KAGnC,IAAK,IACL,IAAK,IACH,OAAOA,GAAe,IAARA,EAAY,KAAO,OAGvC8O,KAAM,CACJP,IAAK,EACLC,IAAK,IClEL+b,GAAiB,8DAA8Dnb,MAAM,KACvF5D,GAAc,kDAAkD4D,MAAM,KAEpEtD,GAAc,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAClHF,GAAc,iLAEL4f,GAAuB,CAClC1S,KAAM,KACNpN,OAAQ,yFAAyF0D,MAAM,KACvG5D,YAAA,SAAY1K,EAAY2K,EAAgB1F,GACtC,OAAKjF,EAID,QAAQmR,KAAKxG,GACRD,GAAY7E,EAAS7F,EAAMiF,IAG7BwkB,GAAe5jB,EAAS7F,EAAMiF,IAP5BwkB,IASX3e,YAAW6f,GACX9f,iBAAkBC,GAClB6e,kBAAmB,6FACnBC,uBAAwB,0FACxB5e,YAAW4f,GACX1B,gBAAiBle,GACjBie,iBAAkBje,GAClBqH,SAAU,mDAAmD/D,MAAM,KACnEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,wBACJC,IAAK,6BACLC,KAAM,oCAERS,SAAU,CACR0F,iBAAQpV,GACN,MAAO,WAAiC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE3DqV,iBAAQrV,GACN,MAAO,YAAkC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE5DsV,kBAAStV,GACP,MAAO,WAAiC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE3DuV,iBAAQvV,GACN,MAAO,WAAiC,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAE3DwV,kBAASxV,GACP,MAAO,sBAA4C,IAAnBgF,EAAShF,GAAe,IAAM,IAAM,QAEtEyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,SACNjR,EAAG,eACHkR,GAAI,cACJ1R,EAAG,YACH2R,GAAI,aACJrR,EAAG,YACHsR,GAAI,WACJ3R,EAAG,SACH4R,GAAI,UACJtR,EAAG,SACHuR,GAAI,WACJ/R,EAAG,SACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC5EImd,GAAuB,CAClC7S,KAAM,KACNpN,OAAQ,0EAA0E0D,MAAM,KACxF5D,YAAa,4DAA4D4D,MAAM,KAC/E+D,SAAU,uCAAuC/D,MAAM,KACvDoE,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,gBAAgBlE,MAAM,KACnCyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,iBACJC,IAAK,uBACLC,KAAM,6BACNgO,EAAG,WACHqN,GAAI,aACJC,IAAK,mBACLC,KAAM,yBAER9a,SAAU,CACR0F,QAAS,cACTC,QAAS,aACTC,SAAU,iBACVC,QAAS,eACTC,SAAU,+BACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,UACRC,KAAM,UACNjR,EAAG,aACHkR,GAAI,WACJ1R,EAAG,MACH2R,GAAI,UACJrR,EAAG,MACHsR,GAAA,SAAG9W,GACD,OAAY,IAARA,EACK,SAEFA,EAAM,SAEfmF,EAAG,MACH4R,GAAA,SAAG/W,GACD,OAAY,IAARA,EACK,SAEFA,EAAM,SAEfyF,EAAG,OACHuR,GAAA,SAAGhX,GACD,OAAY,IAARA,EACK,UAEFA,EAAM,WAEfiF,EAAG,MACHgS,GAAA,SAAGjX,GACD,OAAY,IAARA,EACK,SACEA,EAAM,IAAO,GAAa,KAARA,EACpBA,EAAM,OAERA,EAAM,UAGjBkX,cAAe,gEACfvC,cAAKrT,GACH,MAAO,8BAA8B2Q,KAAK3Q,IAE5C+I,kBAASjI,EAAMC,EAAQ0S,GACrB,OAAI3S,EAAO,EACF,aACEA,EAAO,GACT,QACEA,EAAO,GACT2S,EAAU,SAAW,eACnB3S,EAAO,GACT2S,EAAU,QAAU,eAEpB,SChFT+S,GAAqC,CACrCC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,IACHC,EAAG,KAELC,GAAqC,CACnCmD,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,IACLC,IAAK,KAGIC,GAAuB,CAClCxT,KAAM,KACNpN,OAAQ,8EAA8E0D,MAAM,KAC5F5D,YAAa,6DAA6D4D,MAAM,KAChFgb,kBAAkB,EAClBjX,SAAU,uDAAuD/D,MAAM,KACvEoE,cAAe,kCAAkCpE,MAAM,KACvDkE,YAAa,qBAAqBlE,MAAM,KACxCyB,eAAgB,CACdlB,GAAI,aACJD,IAAK,gBACLE,EAAG,aACHC,GAAI,cACJC,IAAK,0BACLC,KAAM,iCAERS,SAAU,CACR0F,QAAS,UACTC,QAAS,UACTC,SAAU,WACVC,QAAS,UACTC,SAAU,mBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,SACRC,KAAM,UACNjR,EAAG,cACHkR,GAAI,WACJ1R,EAAG,UACH2R,GAAI,UACJrR,EAAG,UACHsR,GAAI,UACJ3R,EAAG,SACH4R,GAAI,SACJtR,EAAG,WACHuR,GAAI,WACJ/R,EAAG,UACHgS,GAAI,WAEN3F,SAAA,SAASjR,GACP,OAAOA,EAAIoI,QAAQ,gBAAiB,SAAU6C,GAC5C,OAAOmd,GAAUnd,MAGrBiG,WAAA,SAAWlR,GACT,OAAOA,EAAIoI,QAAQ,MAAO,SAAU6C,GAClC,OAAOwc,GAAUxc,MAKrB4L,cAAe,qBACfkL,sBAAahgB,EAAMiI,GAIjB,OAHa,KAATjI,IACFA,EAAO,GAEQ,QAAbiI,EACKjI,EAAO,EAAIA,EAAOA,EAAO,GACV,SAAbiI,EACFjI,EACe,UAAbiI,EACM,IAARjI,EAAaA,EAAOA,EAAO,GACZ,QAAbiI,EACFjI,EAAO,QADT,GAITiI,kBAASjI,EAAMC,EAAQ0S,GACrB,OAAI3S,EAAO,EACF,MACEA,EAAO,GACT,OACEA,EAAO,GACT,QACEA,EAAO,GACT,MAEA,OAGX0M,KAAM,CACJP,IAAK,EACLC,IAAK,IC3GL+d,GAAc,gEAAgEnd,MAAM,KACxF,SAAAod,GAAmBxsB,EAAayR,EAAwBhB,EAAaiB,GACnE,OAAQjB,GACN,IAAK,IACH,OAAQiB,GAAYD,EAAiB,mBAAqB,oBAC5D,IAAK,KACH,OAAOzR,GAAQ0R,GAAYD,EAAiB,aAAe,eAC7D,IAAK,IACH,MAAO,OAASC,GAAYD,EAAgB,QAAU,UACxD,IAAK,KACH,OAAOzR,GAAO0R,GAAYD,EAAgB,QAAU,UACtD,IAAK,IACH,MAAO,OAASC,GAAYD,EAAgB,OAAS,UACvD,IAAK,KACH,OAAOzR,GAAO0R,GAAYD,EAAgB,OAAS,UACrD,IAAK,IACH,MAAO,OAASC,GAAYD,EAAgB,OAAS,UACvD,IAAK,KACH,OAAOzR,GAAO0R,GAAYD,EAAgB,OAAS,UACrD,IAAK,IACH,MAAO,OAASC,GAAYD,EAAgB,SAAW,YACzD,IAAK,KACH,OAAOzR,GAAO0R,GAAYD,EAAgB,SAAW,YACvD,IAAK,IACH,MAAO,OAASC,GAAYD,EAAgB,MAAQ,QACtD,IAAK,KACH,OAAOzR,GAAO0R,GAAYD,EAAgB,MAAQ,QAEtD,MAAO,GAET,SAAA3C,GAAchO,EAAY4Q,GACxB,OAAQA,EAAW,GAAK,WAAa,IAAM6a,GAAYve,GAAalN,IAAS,aAG/E,IAAa2rB,GAAuB,CAClC3T,KAAM,KACNpN,OAAS,oGAAoG0D,MAAM,KACnH5D,YAAc,qDAAqD4D,MAAM,KACzE+D,SAAW,sDAAsD/D,MAAM,KACvEoE,cAAgB,gCAAgCpE,MAAM,KACtDkE,YAAc,qBAAqBlE,MAAM,KACzCyB,eAAiB,CACflB,GAAK,OACLD,IAAM,UACNE,EAAI,cACJC,GAAK,gBACLC,IAAM,qBACNC,KAAO,4BAETmH,cAAe,SACfvC,cAAMrT,GACJ,MAAyC,MAAlCA,EAAMsT,OAAO,GAAGhS,eAEzByH,kBAAUwK,EAAOC,EAASC,GACxB,OAAIF,EAAQ,IACS,IAAZE,EAAmB,KAAO,MAEd,IAAZA,EAAmB,KAAO,MAGrCvE,SAAW,CACT0F,QAAU,gBACVC,QAAU,oBACVC,kBAAUtV,GACR,OAAOgO,GAAKhO,GAAM,IAEpBuV,QAAU,oBACVC,kBAAUxV,GACR,OAAOgO,GAAKhO,GAAM,IAEpByV,SAAW,KAEb/E,aAAe,CACbkF,OAAS,WACTC,KAAO,KACPjR,EAAIkkB,GACJhT,GAAKgT,GACL1kB,EAAI0kB,GACJ/S,GAAK+S,GACLpkB,EAAIokB,GACJ9S,GAAK8S,GACLzkB,EAAIykB,GACJ7S,GAAK6S,GACLnkB,EAAImkB,GACJ5S,GAAK4S,GACL3kB,EAAI2kB,GACJ3S,GAAK2S,IAEPnT,uBAAwB,YACxB/R,QAAU,MACVoK,KAAO,CACLP,IAAM,EACNC,IAAM,IC3FGke,GAAuB,CAClC5T,KAAM,KACNpN,OAAS,yFAAyF0D,MAAM,KACxG5D,YAAc,kDAAkD4D,MAAM,KACtE+D,SAAW,6CAA6C/D,MAAM,KAC9DoE,cAAgB,8BAA8BpE,MAAM,KACpDkE,YAAc,uBAAuBlE,MAAM,KAC3CyB,eAAiB,CACflB,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,4BACNC,KAAO,mCAETmH,cAAe,wBACfkL,sBAAahgB,EAAMiI,GAIjB,OAHa,KAATjI,IACFA,EAAO,GAEQ,SAAbiI,EACKjI,EACe,UAAbiI,EACM,IAARjI,EAAaA,EAAOA,EAAO,GACZ,SAAbiI,GAAoC,UAAbA,EACzBjI,EAAO,QADT,GAITiI,kBAASwK,EAAOC,EAASC,GACvB,OAAIF,EAAQ,GACH,OACEA,EAAQ,GACV,QACEA,EAAQ,GACV,OAEA,SAGXrE,SAAW,CACT0F,QAAU,sBACVC,QAAU,mBACVC,SAAW,kBACXC,QAAU,qBACVC,SAAW,uBACXC,SAAW,KAEb/E,aAAe,CACbkF,OAAS,WACTC,KAAO,eACPjR,EAAI,iBACJkR,GAAK,WACL1R,EAAI,UACJ2R,GAAK,WACLrR,EAAI,QACJsR,GAAK,SACL3R,EAAI,SACJ4R,GAAK,UACLtR,EAAI,UACJuR,GAAK,WACL/R,EAAI,UACJgS,GAAK,YAEPnI,KAAO,CACLP,IAAM,EACNC,IAAM,ICjEGme,GAAuB,CAClC7T,KAAM,KACNpN,OAAQ,gGAAgG0D,MAAM,KAC9G5D,YAAa,kDAAkD4D,MAAM,KACrE+D,SAAU,2DAA2D/D,MAAM,KAC3EoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAERS,SAAU,CACR0F,QAAS,iBACTC,QAAS,mBACTC,SAAU,iBACVC,QAAS,iBACTC,kBAASxV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,6BACT,QACE,MAAO,+BAGbyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAA,SAAO1W,GACL,OAAQ,YAAciS,KAAKjS,EAAIW,SAAS,KAAO,MAAQ,MAAQ,IAAMX,GAEvE2W,KAAM,QACNjR,EAAG,iBACHkR,GAAI,aACJ1R,EAAG,YACH2R,GAAI,YACJrR,EAAG,SACHsR,GAAI,SACJ3R,EAAG,YACH4R,GAAI,YACJtR,EAAG,UACHuR,GAAI,UACJ/R,EAAG,UACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,ICtDIoe,GAAwB,CACnC9T,KAAM,KACNpN,OAAS,yCAAyC0D,MAAM,KACxD5D,YAAc,yCAAyC4D,MAAM,KAC7D+D,SAAW,8BAA8B/D,MAAM,KAC/CoE,cAAgB,gBAAgBpE,MAAM,KACtCkE,YAAc,gBAAgBlE,MAAM,KACpCyB,eAAiB,CACflB,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,YACLC,IAAM,kBACNC,KAAO,uBACPgO,EAAI,aACJqN,GAAK,YACLC,IAAM,kBACNC,KAAO,wBAETpU,cAAe,SACfvC,cAAMrT,GACJ,MAAiB,OAAVA,GAET+I,kBAAUjI,EAAMC,EAAQ0S,GACtB,OAAI3S,EAAO,GACF,KAEA,MAGXoO,SAAW,CACT0F,QAAU,UACVC,QAAU,UACVC,SAAW,cACXC,QAAU,UACVC,SAAW,cACXC,SAAW,KAEbE,uBAAyB,WACzB/R,QAAA,SAAS1E,EAAakmB,GACpB,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,MACH,OAAOlmB,EAAM,IACf,QACE,OAAOA,EAAIW,SAAS,MAG1B6Q,aAAe,CACbkF,OAAS,MACTC,KAAO,MACPjR,EAAI,KACJkR,GAAK,MACL1R,EAAI,KACJ2R,GAAK,MACLrR,EAAI,MACJsR,GAAK,OACL3R,EAAI,KACJ4R,GAAK,MACLtR,EAAI,MACJuR,GAAK,OACL/R,EAAI,KACJgS,GAAK,QC7DI4V,GAAuB,CAClC/T,KAAM,KACNpN,OAAS,yCAAyC0D,MAAM,KACxD5D,YAAc,yCAAyC4D,MAAM,KAC7D+D,SAAW,8BAA8B/D,MAAM,KAC/CoE,cAAgB,gBAAgBpE,MAAM,KACtCkE,YAAc,gBAAgBlE,MAAM,KACpCyB,eAAiB,CACflB,GAAK,SACLD,IAAM,YACNE,EAAI,aACJC,GAAK,gBACLC,IAAM,uBACNC,KAAO,4BACPgO,EAAI,aACJqN,GAAK,gBACLC,IAAM,uBACNC,KAAO,6BAET9a,SAAW,CACT0F,QAAU,QACVC,QAAU,QACVC,SAAW,UACXC,QAAU,QACVC,SAAW,cACXC,SAAW,KAEb/E,aAAe,CACbkF,OAAS,OACTC,KAAO,OACPjR,EAAI,MACJkR,GAAK,MACL1R,EAAI,KACJ2R,GAAK,MACLrR,EAAI,OACJsR,GAAK,OACL3R,EAAI,KACJ4R,GAAK,MACLtR,EAAI,MACJuR,GAAK,MACL/R,EAAI,MACJgS,GAAK,OAEPR,uBAAyB,iBACzB/R,QAAU,SAAU1E,EAAakmB,GAC/B,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,MACH,OAAOlmB,EAAM,IACf,IAAK,IACH,OAAOA,EAAM,IACf,IAAK,IACL,IAAK,IACH,OAAOA,EAAM,IACf,QACE,OAAOA,EAAIW,SAAS,MAG1BuW,cAAgB,QAChBvC,KAAO,SAAUnQ,GACf,MAAiB,OAAVA,GAET6F,SAAW,SAAUjI,EAAMC,EAAQyqB,GACjC,OAAO1qB,EAAO,GAAK,KAAO,OCjE9B,SAAA2qB,GAAmB/sB,EAAayR,EAAwBhB,EAAaiB,GACnE,OAAQjB,GACN,IAAK,IACH,OAAOgB,EAAgB,gBAAkB,kBAC3C,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,UAAY,aAC5C,IAAK,IACL,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,SAAW,YAC3C,IAAK,IACL,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,OAAS,WACzC,IAAK,IACL,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,QAAU,WAC1C,IAAK,IACL,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,OAAS,UACzC,IAAK,IACL,IAAK,KACH,OAAOzR,GAAOyR,EAAgB,OAAS,WACzC,QACE,OAAOzR,EAAIW,SAAS,KAI1B,IAAaqsB,GAAuB,CAClClU,KAAM,KACNpN,OAAQ,+LAA+L0D,MAAM,KAC7M5D,YAAa,6EAA6E4D,MAAM,KAChGgb,kBAAkB,EAClBjX,SAAU,6CAA6C/D,MAAM,KAC7DoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,oBACJC,IAAK,0BACLC,KAAM,iCAERmH,cAAe,SACfvC,KAAM,SAAUrT,GACd,MAAiB,OAAVA,GAET+I,SAAU,SAAUjI,EAAMC,EAAQ0S,GAChC,OAAI3S,EAAO,GACF,KAEA,MAGXoO,SAAU,CACR0F,QAAS,eACTC,QAAS,eACTC,SAAU,iBACVC,QAAS,eACTC,SAAU,qBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,WACRC,KAAM,UACNjR,EAAGkkB,GACHhT,GAAIgT,GACJ1kB,EAAG0kB,GACH/S,GAAI+S,GACJpkB,EAAGokB,GACH9S,GAAI8S,GACJzkB,EAAGykB,GACH7S,GAAI6S,GACJnkB,EAAGmkB,GACH5S,GAAI4S,GACJ3kB,EAAG2kB,GACH3S,GAAI2S,IAENnT,uBAAwB,eACxB/R,QAAS,SAAU1E,EAAakmB,GAC9B,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,MACH,OAAOlmB,EAAM,QACf,QACE,OAAOA,EAAIW,SAAS,OCrFxBssB,GAAsB,6DAA6D7d,MAAM,KAC3F8d,GAAyB,kDAAkD9d,MAAM,KAE/EtD,GAAc,CAAC,QAAS,QAAS,iBAAkB,QAAS,SAAU,cAAe,cAAe,QAAS,QAAS,QAAS,QAAS,SACxIF,GAAc,2KAELuhB,GAAuB,CAClCrU,KAAM,KACNpN,OAAS,0FAA0F0D,MAAM,KACzG5D,YAAA,SAAa1K,EAAY2K,EAAgB1F,GACvC,OAAKjF,EAEM,QAAQmR,KAAKxG,GACfyhB,GAAuBvmB,EAAS7F,EAAMiF,IAEtCknB,GAAoBtmB,EAAS7F,EAAMiF,IAJnCknB,IAQXrhB,YAAWwhB,GACXzhB,iBAAkBC,GAClB6e,kBAAmB,4FACnBC,uBAAwB,mFAExB5e,YAAWuhB,GACXrD,gBAAkBle,GAClBie,iBAAmBje,GAEnBqH,SAAW,6DAA6D/D,MAAM,KAC9EoE,cAAgB,8BAA8BpE,MAAM,KACpDkE,YAAc,uBAAuBlE,MAAM,KAC3Csa,oBAAqB,EACrB7Y,eAAiB,CACflB,GAAK,QACLD,IAAM,WACNE,EAAI,aACJC,GAAK,cACLC,IAAM,oBACNC,KAAO,0BAETS,SAAW,CACT0F,QAAS,kBACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,mBACTC,SAAU,2BACVC,SAAU,KAEZ/E,aAAe,CACbkF,OAAS,UACTC,KAAO,aACPjR,EAAI,oBACJkR,GAAK,cACL1R,EAAI,aACJ2R,GAAK,aACLrR,EAAI,UACJsR,GAAK,SACL3R,EAAI,UACJ4R,GAAK,WACLtR,EAAI,YACJuR,GAAK,aACL/R,EAAI,WACJgS,GAAK,WAEPR,uBAAwB,kBACxB/R,QAAA,SAAS4hB,GACP,IAAMtmB,EAAMsqB,OAAOhE,GACnB,OAAOtmB,GAAgB,IAARA,GAAqB,IAARA,GAAoB,IAAPA,EAAa,MAAQ,OAEhE8O,KAAO,CACLP,IAAM,EACNC,IAAM,ICvENye,GAAsB,6DAA6D7d,MAAM,KACzF8d,GAAyB,kDAAkD9d,MAAM,KAEjFtD,GAAc,CAAC,QAAS,QAAS,iBAAkB,QAAS,SAAU,cAAe,cAAe,QAAS,QAAS,QAAS,QAAS,SACxIF,GAAc,2KAEL0hB,GAAyB,CACpCxU,KAAM,QACNpN,OAAQ,0FAA0F0D,MAAM,KACxG5D,YAAA,SAAY1K,EAAY2K,EAAgB1F,GACtC,OAAKjF,EAEM,QAAQmR,KAAKxG,GACfyhB,GAAuBvmB,EAAS7F,EAAMiF,IAEtCknB,GAAoBtmB,EAAS7F,EAAMiF,IAJnCknB,IAQXrhB,YAAW2hB,GACX5hB,iBAAkBC,GAClB6e,kBAAmB,4FACnBC,uBAAwB,mFAExB5e,YAAW0hB,GACXxD,gBAAiBle,GACjBie,iBAAkBje,GAElBqH,SAAU,6DAA6D/D,MAAM,KAC7EoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,0BAERS,SAAU,CACR0F,QAAS,kBACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,mBACTC,SAAU,2BACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,UACRC,KAAM,aACNjR,EAAG,oBACHkR,GAAI,cACJ1R,EAAG,aACH2R,GAAI,aACJrR,EAAG,UACHsR,GAAI,SACJ3R,EAAG,UACH4R,GAAI,WACJtR,EAAG,YACHuR,GAAI,aACJ/R,EAAG,WACHgS,GAAI,WAENR,uBAAwB,kBACxB/R,QAAA,SAAQ4hB,GACN,IAAMtmB,EAAMsqB,OAAOhE,GACnB,OAAOtmB,GAAgB,IAARA,GAAqB,IAARA,GAAoB,IAAPA,EAAa,MAAQ,OAEhE8O,KAAM,CACJP,IAAK,EACLC,IAAK,ICvELif,GAAmB,mGAAmGre,MAAM,KAC5Hse,GAAmB,qGAAqGte,MAAM,KAElI,SAAAue,GAAgB3tB,GACd,OAAQA,EAAM,GAAK,GAAkB,EAAXA,EAAM,OAAgBA,EAAM,IAAM,IAAQ,EAGtE,SAAA4tB,GAAmB5tB,EAAayR,EAAwBhB,GACtD,IAAIiO,EAAS1e,EAAM,IACnB,OAAQyQ,GACN,IAAK,KACH,OAAOiO,GAAUiL,GAAO3pB,GAAO,UAAY,UAC7C,IAAK,IACH,OAAOyR,EAAgB,SAAW,SACpC,IAAK,KACH,OAAOiN,GAAUiL,GAAO3pB,GAAO,SAAW,SAC5C,IAAK,IACH,OAAOyR,EAAgB,UAAY,UACrC,IAAK,KACH,OAAOiN,GAAUiL,GAAO3pB,GAAO,UAAY,UAC7C,IAAK,KACH,OAAO0e,GAAUiL,GAAO3pB,GAAO,WAAa,YAC9C,IAAK,KACH,OAAO0e,GAAUiL,GAAO3pB,GAAO,OAAS,QAI9C,IAAa6tB,GAAuB,CAClC/U,KAAM,KACNpN,OAAA,SAAO5K,EAAY2K,EAAgB1F,GACjC,OAAKjF,EAEiB,KAAX2K,EAIF,IAAMiiB,GAAiB/mB,EAAS7F,EAAMiF,IAAU,IAAM0nB,GAAiB9mB,EAAS7F,EAAMiF,IAAU,IAC9F,SAASkM,KAAKxG,GAChBiiB,GAAiB/mB,EAAS7F,EAAMiF,IAEhC0nB,GAAiB9mB,EAAS7F,EAAMiF,IAThC0nB,IAYXjiB,YAAa,kDAAkD4D,MAAM,KACrE+D,SAAU,6DAA6D/D,MAAM,KAC7EoE,cAAe,2BAA2BpE,MAAM,KAChDkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,2BAERS,SAAU,CACR0F,QAAS,cACTC,QAAS,eACTC,SAAA,SAAStV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,qBAET,KAAK,EACH,MAAO,mBAET,KAAK,EACH,MAAO,iBAET,KAAK,EACH,MAAO,kBAET,QACE,MAAO,oBAGbuV,QAAS,iBACTC,SAAA,SAASxV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,4BACT,KAAK,EACH,MAAO,wBACT,KAAK,EACH,MAAO,yBACT,QACE,MAAO,2BAGbyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,UACNjR,EAAG,eACHkR,GAAIgT,GACJ1kB,EAAG0kB,GACH/S,GAAI+S,GACJpkB,EAAGokB,GACH9S,GAAI8S,GACJzkB,EAAG,UACH4R,GAAI,SACJtR,EAAG,UACHuR,GAAI4S,GACJ3kB,EAAG,MACHgS,GAAI2S,IAENnT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IChHIsf,GAAyB,CACpChV,KAAM,QACNpN,OAAQ,2FAA2F0D,MAAM,KACzG5D,YAAa,kDAAkD4D,MAAM,KACrE+D,SAAU,iFAAiF/D,MAAM,KACjGoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,wBACJC,IAAK,mCACLC,KAAM,0CAERS,SAAU,CACR0F,QAAS,eACTC,QAAS,iBACTC,SAAU,eACVC,QAAS,gBACTC,kBAASxV,GACP,OAA+B,IAAvBkN,GAAalN,IAAsC,IAAvBkN,GAAalN,GAC/C,wBACA,yBAEJyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,WACNjR,EAAG,kBACHkR,GAAI,cACJ1R,EAAG,YACH2R,GAAI,aACJrR,EAAG,WACHsR,GAAI,WACJ3R,EAAG,SACH4R,GAAI,UACJtR,EAAG,SACHuR,GAAI,WACJ/R,EAAG,SACHgS,GAAI,WAENR,uBAAwB,WACxB/R,QAAS,OCrCX,SAAAqpB,GAAgC/tB,EAAayR,EAAwBhB,GASnE,MAAY,MAARA,EACKgB,EAAgB,SAAW,SAE7BzR,EAAM,IAjBf,SAAAguB,EAAgBC,EAAcjuB,GAC5B,IAAIkuB,EAAQD,EAAK7e,MAAM,KACvB,OAAOpP,EAAM,IAAO,GAAKA,EAAM,KAAQ,GAAKkuB,EAAM,GAAkB,GAAZluB,EAAM,IAAWA,EAAM,IAAM,IAAMA,EAAM,IAAM,IAAmB,IAAbA,EAAM,KAAakuB,EAAM,GAAKA,EAAM,GAe9HvE,CAXmB,CACpC/S,GAAInF,EAAgB,yBAA2B,yBAC/CoF,GAAIpF,EAAgB,sBAAwB,sBAC5CqF,GAAI,iBACJC,GAAI,gBACJC,GAAI,uBACJC,GAAI,gBAK2BxG,IAAOzQ,GAG1C,IAAI8L,GAAc,CAAC,QAAS,QAAS,QAAS,QAAS,WAAY,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAK5GqiB,GAAuB,CAClCrV,KAAM,KACNpN,OAAQ,CACND,OAAQ,oFAAoF2D,MAAM,KAClG2C,WAAY,kFAAkF3C,MAAM,MAEtG5D,YAAa,CAEXC,OAAQ,gEAAgE2D,MAAM,KAC9E2C,WAAY,gEAAgE3C,MAAM,MAEpF+D,SAAU,CACRpB,WAAY,gEAAgE3C,MAAM,KAClF3D,OAAQ,gEAAgE2D,MAAM,KAC9E4C,SAAU,kDAEZwB,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,uBAAuBlE,MAAM,KAC1CtD,YAAWsiB,GACXpE,gBAAiBle,GACjBie,iBAAkBje,GAGlBF,YAAa,2MAGbD,iBAAkB,2MAGlB8e,kBAAmB,wHAGnBC,uBAAwB,6FACxB7Z,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,iBACJC,IAAK,uBACLC,KAAM,8BAERS,SAAU,CACR0F,QAAS,iBACTC,QAAS,gBACTE,QAAS,eACTD,kBAAStV,EAAY4P,GACnB,GAAI0W,GAAQ1W,KAAS0W,GAAQtmB,GAc3B,OAA2B,IAAvBkN,GAAalN,GACR,mBAEA,kBAhBT,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,4BACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,4BACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,8BAUfwV,kBAASxV,EAAY4P,GACnB,GAAI0W,GAAQ1W,KAAS0W,GAAQtmB,GAc3B,OAA2B,IAAvBkN,GAAalN,GACR,mBAEA,kBAhBT,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,0BACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,0BACT,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,4BAUfyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,WACRC,KAAM,WACNjR,EAAG,mBACHkR,GAAImX,GACJ7oB,EAAG6oB,GACHlX,GAAIkX,GACJvoB,EAAG,MACHsR,GAAIiX,GACJ5oB,EAAG,OACH4R,GAAIgX,GACJtoB,EAAG,QACHuR,GAAI+W,GACJ9oB,EAAG,MACHgS,GAAI8W,IAEN7W,cAAe,wBACfvC,cAAKrT,GACH,MAAO,iBAAiB2Q,KAAK3Q,IAE/B+I,kBAASjI,EAAMC,EAAQ0S,GACrB,OAAI3S,EAAO,EACF,OACEA,EAAO,GACT,OACEA,EAAO,GACT,MAEA,UAGXqU,uBAAwB,mBACxB/R,QAAA,SAAQ4hB,EAAcJ,GACpB,IAAMlmB,EAAMsqB,OAAOhE,GACnB,OAAQJ,GACN,IAAK,IACL,IAAK,IACL,IAAK,MACH,OAAOlmB,EAAM,KACf,IAAK,IACH,OAAOA,EAAM,MACf,IAAK,IACL,IAAK,IACH,OAAOA,EAAM,KACf,QACE,OAAOA,EAAIW,SAAS,MAG1BmO,KAAM,CACJP,IAAK,EACLC,IAAK,ICzKT,SAAA6f,GAAgCruB,EAAayR,EAAwBhB,GACnE,IASIwT,EAAY,IAIhB,OAHiB,IAAbjkB,EAAM,KAAqB,KAAPA,GAAcA,EAAM,KAAQ,KAClDikB,EAAY,QAEPjkB,EAAMikB,EAbwB,CACnCrN,GAAI,UACJC,GAAI,SACJC,GAAI,MACJC,GAAI,OACJC,GAAI,OACJC,GAAI,OAO0BxG,GAIlC,IAAa6d,GAAuB,CAClCxV,KAAM,KACNpN,OAAQ,oGAAoG0D,MAAM,KAClH5D,YAAa,gEAAgE4D,MAAM,KACnFgb,kBAAkB,EAClBjX,SAAU,kDAAkD/D,MAAM,KAClEoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,cACJC,IAAK,mBACLC,KAAM,0BAERS,SAAU,CACR0F,QAAS,cACTC,QAAS,gBACTC,SAAU,eACVC,QAAS,eACTC,SAAU,uBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,WACRC,KAAM,aACNjR,EAAG,iBACHkR,GAAImX,GACJ7oB,EAAG,WACH2R,GAAIkX,GACJvoB,EAAG,QACHsR,GAAIiX,GACJ5oB,EAAG,OACH4R,GAAIgX,GACJtoB,EAAG,SACHuR,GAAI+W,GACJ9oB,EAAG,QACHgS,GAAI8W,IAENjf,KAAM,CACJP,IAAK,EACLC,IAAK,ICzDT,SAAA+f,GAAgBvuB,GACd,OAAc,EAANA,GAAaA,EAAM,GAAwB,MAAdA,EAAM,IAG7C,SAAAwuB,GAAmBxuB,EAAayR,EAAwBhB,EAAaiB,GACnE,IAAMgN,EAAS1e,EAAM,IAErB,OAAQyQ,GACN,IAAK,IACH,OAAQgB,GAAiBC,EAAY,aAAe,gBACtD,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,UAAY,UAGpC0e,EAAS,YAGpB,IAAK,IACH,OAAOjN,EAAgB,SAAYC,EAAW,SAAW,UAC3D,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,SAAW,SAGnC0e,EAAS,WAGpB,IAAK,IACH,OAAOjN,EAAgB,SAAYC,EAAW,SAAW,UAC3D,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,SAAW,SAGnC0e,EAAS,WAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,MAAQ,OAC/C,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,MAAQ,OAGhC0e,EAAS,QAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,SAAW,WAClD,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,UAAY,YAGpC0e,EAAS,WAGpB,IAAK,IACH,OAAQjN,GAAiBC,EAAY,MAAQ,QAC/C,IAAK,KACH,OAAID,GAAiBC,EACZgN,GAAUiL,GAAO3pB,GAAO,OAAS,SAGjC0e,EAAS,SAMxB,IAAa+P,GAAuB,CAClC3V,KAAM,KACNpN,OA5Ea,oFAAoF0D,MAAM,KA6EvG5D,YA5EkB,kDAAkD4D,MAAM,KA6E1E+D,SAAU,sDAAsD/D,MAAM,KACtEoE,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,yBACNgO,EAAG,cAELvN,SAAU,CACR0F,QAAS,cACTC,QAAS,gBACTC,SAAA,SAAStV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,kBACT,KAAK,EACL,KAAK,EACH,MAAO,kBACT,KAAK,EACH,MAAO,kBACT,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAO,kBACT,KAAK,EACH,MAAO,oBAGbuV,QAAS,eACTC,SAAA,SAASxV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,uBACT,KAAK,EACL,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,uBACT,KAAK,EACL,KAAK,EACH,MAAO,uBACT,KAAK,EACH,MAAO,yBAGbyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,OACRC,KAAM,UACNjR,EAAGkkB,GACHhT,GAAIgT,GACJ1kB,EAAG0kB,GACH/S,GAAI+S,GACJpkB,EAAGokB,GACH9S,GAAI8S,GACJzkB,EAAGykB,GACH7S,GAAI6S,GACJnkB,EAAGmkB,GACH5S,GAAI4S,GACJ3kB,EAAG2kB,GACH3S,GAAI2S,IAENnT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,ICpJT,SAAAkgB,GAA6B/U,EAAgBlI,EAAwBhB,EAAaiB,GAChF,IAAIgN,EAAS/E,EAAS,IACtB,OAAQlJ,GACN,IAAK,IACH,OAAOgB,GAAiBC,EAAW,eAAiB,kBACtD,IAAK,KAUH,OAREgN,GADa,IAAX/E,EACQlI,EAAgB,UAAY,UAClB,IAAXkI,EACClI,GAAiBC,EAAW,UAAY,WACzCiI,EAAS,EACRlI,GAAiBC,EAAW,UAAY,WAEZ,SAG1C,IAAK,IACH,OAAOD,EAAgB,aAAe,aACxC,IAAK,KAUH,OAREiN,GADa,IAAX/E,EACQlI,EAAgB,SAAW,SACjB,IAAXkI,EACClI,GAAiBC,EAAW,SAAW,WACxCiI,EAAS,EACRlI,GAAiBC,EAAW,SAAW,WAEvCD,GAAiBC,EAAW,QAAU,WAGpD,IAAK,IACH,OAAOD,EAAgB,UAAY,UACrC,IAAK,KAUH,OAREiN,GADa,IAAX/E,EACQlI,EAAgB,MAAQ,MACd,IAAXkI,EACClI,GAAiBC,EAAW,MAAQ,QACrCiI,EAAS,EACRlI,GAAiBC,EAAW,MAAQ,QAEpCD,GAAiBC,EAAW,KAAO,QAGjD,IAAK,IACH,OAAOD,GAAiBC,EAAW,SAAW,YAChD,IAAK,KAQH,OANEgN,GADa,IAAX/E,EACQlI,GAAiBC,EAAW,MAAQ,OAC1B,IAAXiI,EACClI,GAAiBC,EAAW,MAAQ,UAEpCD,GAAiBC,EAAW,MAAQ,QAGlD,IAAK,IACH,OAAOD,GAAiBC,EAAW,WAAa,eAClD,IAAK,KAUH,OAREgN,GADa,IAAX/E,EACQlI,GAAiBC,EAAW,QAAU,UAC5B,IAAXiI,EACClI,GAAiBC,EAAW,SAAW,WACxCiI,EAAS,EACRlI,GAAiBC,EAAW,SAAW,SAEvCD,GAAiBC,EAAW,UAAY,SAGtD,IAAK,IACH,OAAOD,GAAiBC,EAAW,WAAa,aAClD,IAAK,KAUH,OAREgN,GADa,IAAX/E,EACQlI,GAAiBC,EAAW,OAAS,QAC3B,IAAXiI,EACClI,GAAiBC,EAAW,OAAS,SACtCiI,EAAS,EACRlI,GAAiBC,EAAW,OAAS,OAErCD,GAAiBC,EAAW,MAAQ,QAMtD,IAAaid,GAAuB,CAClC7V,KAAM,KACNpN,OAAQ,wFAAwF0D,MAAM,KACtG5D,YAAa,8DAA8D4D,MAAM,KACjFgb,kBAAkB,EAClBjX,SAAU,sDAAsD/D,MAAM,KACtEoE,cAAe,qCAAqCpE,MAAM,KAC1DkE,YAAa,uBAAuBlE,MAAM,KAC1Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,eACJC,IAAK,oBACLC,KAAM,2BAERS,SAAU,CACR0F,QAAS,gBACTC,QAAS,gBAETC,kBAAStV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,wBACT,KAAK,EACH,MAAO,sBACT,KAAK,EACH,MAAO,uBACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,qBAGbuV,QAAS,iBACTC,kBAASxV,GACP,OAAQkN,GAAalN,IACnB,KAAK,EACH,MAAO,+BACT,KAAK,EACH,MAAO,6BACT,KAAK,EACH,MAAO,8BACT,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,MAAO,4BAGbyV,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,SACRC,KAAM,UACNjR,EAAGwkB,GACHtT,GAAIsT,GACJhlB,EAAGglB,GACHrT,GAAIqT,GACJ1kB,EAAG0kB,GACHpT,GAAIoT,GACJ/kB,EAAG+kB,GACHnT,GAAImT,GACJzkB,EAAGykB,GACHlT,GAAIkT,GACJjlB,EAAGilB,GACHjT,GAAIiT,IAENzT,uBAAwB,YACxB/R,QAAS,MACToK,KAAM,CACJP,IAAK,EACLC,IAAK,IC9JIogB,GAAuB,CAClC9V,KAAM,KACNpN,OAAQ,wFAAwF0D,MAAM,KACtG5D,YAAa,kDAAkD4D,MAAM,KACrE+D,SAAU,oDAAoD/D,MAAM,KACpEoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,0BACLC,KAAM,+BACNsb,IAAK,mBACLC,KAAM,wBAER9a,SAAU,CACR0F,QAAS,YACTC,QAAS,eACTE,QAAS,YACTD,SAAU,eACVE,SAAU,iBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,QACRC,KAAM,eACNjR,EAAG,iBACHkR,GAAI,cACJ1R,EAAG,WACH2R,GAAI,aACJrR,EAAG,WACHsR,GAAI,YACJ3R,EAAG,SACH4R,GAAI,WACJtR,EAAG,WACHuR,GAAI,aACJ/R,EAAG,SACHgS,GAAI,SAENR,uBAAwB,eACxB/R,QAAA,SAAQ4hB,GACN,IAAMtmB,EAAMsqB,OAAOhE,GACf5kB,EAAI1B,EAAM,GAKd,OAAOA,GAJ4B,MAApBA,EAAM,IAAM,IAAa,IAC7B,IAAN0B,EAAW,IACH,IAANA,EAAW,IACE,MAGtBoN,KAAM,CACJP,IAAK,EACLC,IAAK,ICrDIqgB,GAAuB,CAClC/V,KAAM,KACNpN,OAAQ,oGAAoG0D,MAAM,KAClH5D,YAAa,iEAAiE4D,MAAM,KACpFgb,kBAAkB,EAClBjX,SAAU,iDAAiD/D,MAAM,KACjEoE,cAAe,8CAA8CpE,MAAM,KACnEkE,YAAa,yBAAyBlE,MAAM,KAC5Csa,oBAAoB,EACpB7Y,eAAgB,CACdlB,GAAI,OACJD,IAAK,UACLE,EAAG,aACHC,GAAI,cACJC,IAAK,wBACLC,KAAM,oCAERmH,cAAe,wBACfvC,cAAKrT,GACH,MAAiB,eAAVA,GAET+I,kBAASjI,EAAMC,EAAQ0S,GACrB,OAAI3S,EAAO,GACF,aAEA,cAGXoO,SAAU,CACR0F,QAAS,mBACTC,QAAS,qBACTC,SAAU,qBACVC,QAAS,wBACTC,SAAU,6BACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,SACRC,KAAM,YACNjR,EAAG,eACHkR,GAAI,YACJ1R,EAAG,SACH2R,GAAI,UACJrR,EAAG,YACHsR,GAAI,aACJ3R,EAAG,QACH4R,GAAI,SACJtR,EAAG,UACHuR,GAAI,WACJ/R,EAAG,OACHgS,GAAI,UCjDJ6X,GAAsC,CACxC/G,EAAG,QACHI,EAAG,QACHG,EAAG,QACHyG,GAAI,QACJC,GAAI,QACJhH,EAAG,OACHK,EAAG,OACH4G,GAAI,OACJC,GAAI,OACJjH,EAAG,QACHC,EAAG,QACHiH,IAAK,QACL/G,EAAG,OACHG,EAAG,QACH6G,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,SAGOC,GAAuB,CAClC1W,KAAM,KACNpN,OAAQ,6EAA6E0D,MAAM,KAC3F5D,YAAa,kDAAkD4D,MAAM,KACrE+D,SAAU,wDAAwD/D,MAAM,KACxEoE,cAAe,8BAA8BpE,MAAM,KACnDkE,YAAa,uBAAuBlE,MAAM,KAC1CyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,cACJC,IAAK,oBACLC,KAAM,2BAERS,SAAU,CACR0F,QAAS,kBACTC,QAAS,kBACTC,SAAU,2BACVC,QAAS,WACTC,SAAU,yBACVC,SAAU,KAEZ/E,aAAc,CACZkF,OAAQ,WACRC,KAAM,UACNjR,EAAG,gBACHkR,GAAI,YACJ1R,EAAG,aACH2R,GAAI,YACJrR,EAAG,WACHsR,GAAI,UACJ3R,EAAG,UACH4R,GAAI,SACJtR,EAAG,SACHuR,GAAI,QACJ/R,EAAG,UACHgS,GAAI,UAENR,uBAAwB,wCACxB/R,QAAA,SAAQ4hB,GACN,IAAMtmB,EAAMsqB,OAAOhE,GACnB,GAAY,IAARtmB,EACF,OAAOA,EAAM,QAEf,IAAIyB,EAAIzB,EAAM,GAGd,OAAOA,GAAO8uB,GAASrtB,IAAMqtB,GAFvB9uB,EAAM,IAAMyB,IAE0BqtB,GAD/B,KAAP9uB,EAAa,IAAM,QAG3B8O,KAAM,CACJP,IAAK,EACLC,IAAK,ICxEIihB,GAAyB,CACpC3W,KAAM,QACNpN,OAAQ,wCAAwC0D,MAAM,KACtD5D,YAAa,yCAAyC4D,MAAM,KAC5D+D,SAAU,8BAA8B/D,MAAM,KAC9CoE,cAAe,uBAAuBpE,MAAM,KAC5CkE,YAAa,gBAAgBlE,MAAM,KACnCyB,eAAgB,CACdlB,GAAI,QACJD,IAAK,WACLE,EAAG,aACHC,GAAI,YACJC,IAAK,kBACLC,KAAM,sBACNgO,EAAG,WACHqN,GAAI,YACJC,IAAK,kBACLC,KAAM,uBAERpU,cAAe,oBACfkL,sBAAahgB,EAAMiI,GAIjB,OAHa,KAATjI,IACFA,EAAO,GAEQ,OAAbiI,GAAkC,OAAbA,GACV,OAAbA,EACOjI,EACe,OAAbiI,GAAkC,OAAbA,EACvBjI,EAAO,GAGC,IAARA,EAAaA,EAAOA,EAAO,IAGtCiI,kBAASjI,EAAMC,EAAQ0S,GACrB,IAAI2K,EAAY,IAAPtd,EAAaC,EACtB,OAAIqd,EAAK,IACA,KACEA,EAAK,IACP,KACEA,EAAK,KACP,KACEA,EAAK,KACP,KACEA,EAAK,KACP,KAEA,MAGXlP,SAAU,CACR0F,QAAS,SACTC,QAAS,SACTC,SAAU,YACVC,QAAS,SACTC,SAAU,YACVC,SAAU,KAEZE,uBAAwB,iBACxB/R,iBAAQ4hB,EAAcJ,GACpB,IAAMlmB,EAAMsqB,OAAOhE,GACnB,OAAQJ,GACN,IAAK,IACL,IAAK,IACL,IAAK,MACH,OAAOlmB,EAAM,IACf,IAAK,IACH,OAAOA,EAAM,IACf,IAAK,IACL,IAAK,IACH,OAAOA,EAAM,IACf,QACE,OAAOA,EAAIW,aAGjB6Q,aAAc,CACZkF,OAAQ,MACRC,KAAM,MACNjR,EAAG,KACHkR,GAAI,OACJ1R,EAAG,OACH2R,GAAI,QACJrR,EAAG,OACHsR,GAAI,QACJ3R,EAAG,MACH4R,GAAI,OACJtR,EAAG,OACHuR,GAAI,QACJ/R,EAAG,MACHgS,GAAI,QAENnI,KAAM,CAEJP,IAAK,EACLC,IAAK,yD7E3CT,SAAAkhB,GAAiC5uB,EAAYmS,GAC3C,OAAOnS,EAAKyF,WAAa0M,8BAmB3B,SAAA0c,GAA0B7oB,EAAaC,GACrC,SAAKD,IAAUC,IAKbC,EAAWF,EAAOC,IAClBF,EAAYC,EAAOC,IACnBN,EAAQK,KAAWL,EAAQM,yDA/C/B,SAAA6oB,GAAmC9uB,GACjC,OAAOyE,EACLzE,EAAK8E,cACL9E,EAAK6F,WACL,EACA7F,EAAKgF,WACLhF,EAAKmF,aACLnF,EAAKqF,wDyBxCT,SAAA0pB,GAA2B/uB,EAAY2K,EAAgB1G,EAAiBgB,EAAiBme,QAAA,IAAAA,IAAAA,EAAA,GACvF,IAAMrY,EAAUgC,GAAU9I,GAAU,MACpC,IAAK8G,EACH,MAAM,IAAIiQ,MACR,WAAW/W,EAAM,4DAIrB,IAEM4L,EAUR,SAAAmf,EAA6BhvB,EAAY8e,EAAiB7a,EAAgBgB,EAAiBme,GACzF,QADyF,IAAAA,IAAAA,EAAA,IACpFrjB,EAAYC,GACf,OAAOiE,EAAOyR,YAGhB,IAAM/K,EAASkU,GAAaC,EAAS7a,GAGrC,OAFAX,EAAgBqH,GAAUrH,EAAgBqH,I3BA5C,SAAAskB,EAAmCtkB,GAMjC,IALA,IAAMtC,EAAkBsC,EAAOH,MAAMhH,GAC/BN,EAASmF,EAAMnF,OAEfgsB,EAA0C,IAAIzuB,MAAMyC,GAEjDqF,EAAI,EAAGA,EAAIrF,EAAQqF,IAC1B2mB,EAAU3mB,GAAKhF,EAAqB8E,EAAME,IACtChF,EAAqB8E,EAAME,KAgBH/H,EAfD6H,EAAME,IAgBzBiC,MAAM,YACPhK,EAAMmH,QAAQ,WAAY,IAG5BnH,EAAMmH,QAAQ,MAAO,IAL9B,IAAgCnH,EAZ9B,OAAO,SAAUR,EAAYiE,EAAgBgB,EAAgBme,QAAA,IAAAA,IAAAA,EAAA,GAE3D,IADA,IAAIvT,EAAS,GACJyI,EAAI,EAAGA,EAAIpV,EAAQoV,IAC1BzI,GAAU1P,EAAW+uB,EAAU5W,IAC1B4W,EAAU5W,GAAuBxY,KAAK,KAAME,EAAM,CAAC2K,OAAMA,EAAE1G,OAAMA,EAAEgB,MAAKA,EAAEme,OAAMA,IACjF8L,EAAU5W,GAGhB,OAAOzI,G2BpB4Cof,CAAmBtkB,GAEjErH,EAAgBqH,GAAQ3K,EAAMiE,EAAQgB,EAAOme,GAlBrC4L,CAAahvB,EAFZ2K,IAAW1F,EAAS,yBAA2B,wBAEpB8F,EAAS9F,EAAOme,GAE3D,OAAKvT,EAIE9E,EAAQ0F,WAAWZ,GAHjBA,iBRwLX,SAAAsf,KACE,OAAOxvB,OAAOia,KAAK/C,mCA3CrB,SAAAuY,GAA6B5X,EAAclP,GACzC,IAAImH,EAAUnH,EAEd,GAAe,MAAXmH,EAAiB,CACnB,IAAIwH,EAAe9B,GAEbka,EAAY9X,GAAWC,GACZ,MAAb6X,IACFpY,EAAeoY,EAAU5f,SAE3BA,EAAUuH,GAAaC,EAAcxH,GACrC,IAAMxL,EAAS,IAAImL,GAAOK,GAC1BxL,EAAOgU,aAAepB,GAAQW,GAC9BX,GAAQW,GAAQvT,EAGhB0T,GAAmBH,QAGE,MAAjBX,GAAQW,KACwB,MAA9BX,GAAQW,GAAMS,aAChBpB,GAAQW,GAAQX,GAAQW,GAAMS,aACJ,MAAjBpB,GAAQW,WACVX,GAAQW,IAKrB,OAAOX,GAAQW,4HVnLjB,SAAA8X,GAA0BtvB,EAAY2B,GACpC,IAAMI,EAAQpC,OAAO0X,OAAO,GAAInM,GAAiBvJ,GAC3CkI,EAAO7J,EAAK8E,eAAiB/C,EAAM8H,MAAQ,GAC3CG,EAAQhK,EAAK6F,YAAc9D,EAAMiI,OAAS,GAC5CmB,EAAMnL,EAAK2F,WAAa5D,EAAMoJ,KAAO,GAKzC,OAJIpJ,EAAMiI,QAAUjI,EAAMoJ,MACxBA,EAAMhM,KAAKsM,IAAIN,EAAKO,GAAY7B,EAAMG,KAGjCvF,EACLoF,EACAG,EACAmB,EACAnL,EAAKgF,YAAcjD,EAAMT,MAAQ,GACjCtB,EAAKmF,cAAgBpD,EAAMR,QAAU,GACrCvB,EAAKqF,cAAgBtD,EAAMqJ,SAAW,mBAI1C,SAAAmkB,GAA4BvvB,EAAY2B,GACtC,OAAO8C,EACL4G,GAAOrL,EAAK8E,cAAenD,EAAKkI,MAChCwB,GAAOrL,EAAK6F,WAAYlE,EAAKqI,OAC7BqB,GAAOrL,EAAK2F,UAAWhE,EAAKwJ,KAC5BE,GAAOrL,EAAKgF,WAAYrD,EAAKL,MAC7B+J,GAAOrL,EAAKmF,aAAcxD,EAAKJ,QAC/B8J,GAAOrL,EAAKqF,aAAc1D,EAAKyJ,SAC/BC,GAAOrL,EAAKuF,kBAAmB5D,EAAK8X","sourcesContent":["\n\nexport function mod(n: number, x: number): number {\n  return (n % x + x) % x;\n}\n\nexport function absFloor(num: number): number {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\n","import { absFloor } from '../utils';\n\nexport function isString(str: any): str is string {\n  return typeof str === 'string';\n}\n\nexport function isDate(value: any): value is Date {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n\nexport function isBoolean(value: any): value is boolean {\n  return value === true || value === false;\n}\n\nexport function isDateValid(date: Date): boolean {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n\nexport function isFunction(fn: any): fn is Function {\n  return (\n    fn instanceof Function ||\n    Object.prototype.toString.call(fn) === '[object Function]'\n  );\n}\n\nexport function isNumber(value?: any): value is number {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\nexport function isArray<T>(input?: any): input is T[] {\n  return (\n    input instanceof Array ||\n    Object.prototype.toString.call(input) === '[object Array]'\n  );\n}\n\n// TODO: returned type should be changed to \"b is Extract<keyof T, string>\"\n// after update to typescript 3.1.1 (issue 4728)\nexport function hasOwnProp<T>(a: T /*object*/, b: string): boolean {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nexport function isObject<T>(input: any /*object*/): input is T {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return (\n    input != null && Object.prototype.toString.call(input) === '[object Object]'\n  );\n}\n\nexport function isObjectEmpty(obj: any): boolean {\n  if (Object.getOwnPropertyNames) {\n    return (Object.getOwnPropertyNames(obj).length === 0);\n  }\n  let k;\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nexport function isUndefined(input: any): boolean {\n  return input === void 0;\n}\n\nexport function toInt<T>(argumentForCoercion: string | number | T): number {\n  const coercedNumber = +argumentForCoercion;\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n","import { hasOwnProp, isString } from '../utils/type-checks';\nimport { DateObject, UnitOfTime } from '../types';\n\nconst aliases: { [key: string]: string } = {};\n\nexport type ExtendedUnitOfTime = UnitOfTime | 'date' | 'week' | 'isoWeek' | 'dayOfYear' |\n  'weekday' | 'isoWeekday' | 'second' | 'millisecond' | 'minute' | 'hour' | 'quarter' | 'weekYear' | 'isoWeekYear';\n\nconst _mapUnits: { [key: string]: UnitOfTime } = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n\nexport function addUnitAlias(unit: ExtendedUnitOfTime, shorthand: string): void {\n  const lowerCase = unit.toLowerCase();\n  let _unit = unit;\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n\nexport function normalizeUnits(units: string | string[]): string {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nexport function normalizeObjectUnits(inputObject: { [key: string]: number }): DateObject {\n  const normalizedInput: { [key: string]: number } = {};\n  let normalizedProp;\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return normalizedInput as any;\n}\n","// place in new Date([array])\nexport const YEAR = 0;\nexport const MONTH = 1;\nexport const DATE = 2;\nexport const HOUR = 3;\nexport const MINUTE = 4;\nexport const SECOND = 5;\nexport const MILLISECOND = 6;\nexport const WEEK = 7;\nexport const WEEKDAY = 8;\n","export function zeroFill(num: number,\n                         targetLength: number,\n                         forceSign?: boolean): string {\n  const absNumber = `${Math.abs(num)}`;\n  const zerosToFill = targetLength - absNumber.length;\n  const sign = num >= 0;\n  const _sign = sign ? (forceSign ? '+' : '') : '-';\n  // todo: this is crazy slow\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return (_sign + _zeros + absNumber);\n}\n","import { Locale } from '../locale/locale.class';\nimport { zeroFill } from '../utils/zero-fill';\nimport { isFunction } from '../utils/type-checks';\nimport { DateFormatterOptions, DateFormatterFn } from '../types';\n\nexport let formatFunctions: {\n  [key: string]: (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string;\n} = {};\nexport let formatTokenFunctions: { [key: string]: DateFormatterFn } = {};\n\n// tslint:disable-next-line\nexport const formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nexport function addFormatToken(token: string,\n                               padded: [string, number, boolean],\n                               ordinal: string,\n                               callback: DateFormatterFn): void {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] = function (): string {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] = function (date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n\nexport function makeFormatFunction(format: string): (date: Date, locale: Locale, isUTC?: boolean, offset?: number) => string {\n  const array: string[] = format.match(formattingTokens);\n  const length = array.length;\n\n  const formatArr: string[] | DateFormatterFn[] = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]]\n      ? formatTokenFunctions[array[i]]\n      : removeFormattingTokens(array[i]);\n  }\n\n  return function (date: Date, locale: Locale, isUTC: boolean, offset = 0): string {\n    let output = '';\n    for (let j = 0; j < length; j++) {\n      output += isFunction(formatArr[j])\n        ? (formatArr[j] as DateFormatterFn).call(null, date, {format, locale, isUTC, offset})\n        : formatArr[j];\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input: string): string {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n","export function createUTCDate(y?: number,\n                              m?: number,\n                              d?: number): Date {\n  const date = new Date(Date.UTC.apply(null, arguments));\n\n  // the Date.UTC function remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n\nexport function createDate(y?: number,\n                           m = 0,\n                           d = 1,\n                           h = 0,\n                           M = 0,\n                           s = 0,\n                           ms = 0): Date {\n  const date = new Date(y, m, d, h, M, s, ms);\n\n  // the date constructor remaps years 0-99 to 1900-1999\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n","import { createDate } from '../create/date-from-array';\n\nexport function getHours(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n\nexport function getMinutes(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n\nexport function getSeconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n\nexport function getMilliseconds(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\nexport function getTime(date: Date): number {\n  return date.getTime();\n}\n\nexport function getDay(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n\nexport function getDate(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n\nexport function getMonth(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n\nexport function getFullYear(date: Date, isUTC = false): number {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n\nexport function getUnixTime(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function unix(date: Date): number {\n  return Math.floor(date.valueOf() / 1000);\n}\n\nexport function getFirstDayOfMonth(date: Date): Date {\n  return createDate(\n    date.getFullYear(),\n    date.getMonth(),\n    1,\n    date.getHours(),\n    date.getMinutes(),\n    date.getSeconds()\n  );\n}\n\nexport function daysInMonth(date: Date): number {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n\nexport function _daysInMonth(year: number, month: number): number {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\nexport function isFirstDayOfWeek(date: Date, firstDayOfWeek: number): boolean {\n  return date.getDay() === firstDayOfWeek;\n}\n\nexport function isSameMonth(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n\nexport function isSameYear(date1: Date, date2: Date) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n\nexport function isSameDay(date1: Date, date2: Date): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return (\n    isSameYear(date1, date2) &&\n    isSameMonth(date1, date2) &&\n    getDate(date1) === getDate(date2)\n  );\n}\n","import { hasOwnProp, isFunction } from '../utils/type-checks';\nimport { Locale } from '../locale/locale.class';\n\nexport const match1 = /\\d/;            //       0 - 9\nexport const match2 = /\\d\\d/;          //      00 - 99\nexport const match3 = /\\d{3}/;         //     000 - 999\nexport const match4 = /\\d{4}/;         //    0000 - 9999\nexport const match6 = /[+-]?\\d{6}/;    // -999999 - 999999\nexport const match1to2 = /\\d\\d?/;         //       0 - 99\nexport const match3to4 = /\\d\\d\\d\\d?/;     //     999 - 9999\nexport const match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nexport const match1to3 = /\\d{1,3}/;       //       0 - 999\nexport const match1to4 = /\\d{1,4}/;       //       0 - 9999\nexport const match1to6 = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nexport const matchUnsigned = /\\d+/;           //       0 - inf\nexport const matchSigned = /[+-]?\\d+/;      //    -inf - inf\n\nexport const matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport const matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nexport const matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\nexport const matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n\nexport type RegExpTokenFn = (isStrict: boolean, locale: Locale) => RegExp;\nconst regexes: {[key: string]: RegExpTokenFn} = {};\n\n\nexport function addRegexToken(token: string, regex: RegExp | RegExpTokenFn, strictRegex?: RegExp): void {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n\n    return;\n  }\n\n  regexes[token] = function (isStrict: boolean, locale: Locale) {\n    return (isStrict && strictRegex) ? strictRegex : regex;\n  };\n}\n\nexport function getParseRegexForToken(token: string, locale: Locale): RegExp {\n  const _strict = false;\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str: string): string {\n  // tslint:disable-next-line\n  return regexEscape(str\n    .replace('\\\\', '')\n    .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)\n  );\n}\n\nexport function regexEscape(str: string): string {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","// tslint:disable:max-line-length\nimport { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateParseTokenFn } from '../types';\n\nconst tokens: {[key: string]: DateParseTokenFn} = {};\n\nexport function addParseToken(token: string | string[], callback: DateParseTokenFn | number) {\n  const _token = isString(token) ? [token] : token;\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func = function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n      array[callback] = toInt(input);\n\n      return config;\n    };\n  }\n\n  if (isArray<string>(_token) && isFunction(func)) {\n    let i;\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n\nexport function addWeekParseToken(token: string[], callback: DateParseTokenFn): void {\n  addParseToken(token, function (input: string, array: DateArray, config: DateParsingConfig, _token: string): DateParsingConfig {\n    config._w = config._w || {};\n\n    return callback(input, config._w, config, _token);\n  });\n}\n\n\nexport function addTimeToArrayFromToken(token: string, input: string, config: DateParsingConfig): DateParsingConfig {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n","import { DateParsingConfig, DateParsingFlags } from './parsing.types';\n\nfunction defaultParsingFlags(): DateParsingFlags {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n\nexport function getParsingFlags(config: DateParsingConfig): DateParsingFlags {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n","import { addFormatToken } from '../format/format';\nimport { getFullYear } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { YEAR } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\nfunction getYear(date: Date, opts: DateFormatterOptions): string {\n  return getFullYear(date, opts.isUTC).toString();\n}\n\naddFormatToken('Y', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n  const y = getFullYear(date, opts.isUTC);\n\n  return y <= 9999 ? y.toString(10) : `+${y}`;\n});\n\naddFormatToken(null, ['YY', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n  return (getFullYear(date, opts.isUTC) % 100).toString(10);\n});\n\naddFormatToken(null, ['YYYY', 4, false], null, getYear);\naddFormatToken(null, ['YYYYY', 5, false], null, getYear);\naddFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y', matchSigned);\naddRegexToken('YY', match1to2, match2);\naddRegexToken('YYYY', match1to4, match4);\naddRegexToken('YYYYY', match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array, config) {\n  array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n\n  return config;\n});\naddParseToken('YY', function (input, array, config) {\n  array[YEAR] = parseTwoDigitYear(input);\n\n  return config;\n});\naddParseToken('Y', function (input, array, config) {\n  array[YEAR] = parseInt(input, 10);\n\n  return config;\n});\n\nexport function parseTwoDigitYear(input: string): number {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n\nexport function daysInYear(year: number): number {\n  return isLeapYear(year) ? 366 : 365;\n}\n\nexport function isLeapYear(year: number): boolean {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n","import { addFormatToken } from '../format/format';\nimport { isLeapYear } from './year';\nimport { mod } from '../utils';\nimport { getMonth } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { DateArray, DateFormatterOptions } from '../types';\n\n// todo: this is duplicate, source in date-getters.ts\nexport function daysInMonth(year: number, month: number): number {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1\n    ? isLeapYear(_year) ? 29 : 28\n    : (31 - modMonth % 7 % 2);\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2, false], 'Mo',\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n\naddFormatToken('MMM', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n\naddFormatToken('MMMM', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  });\n\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M', match1to2);\naddRegexToken('MM', match1to2, match2);\naddRegexToken('MMM', function (isStrict, locale) {\n  return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n  return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  array[MONTH] = toInt(input) - 1;\n\n  return config;\n});\n\naddParseToken(['MMM', 'MMMM'],\n  function (input: string, array: DateArray, config: DateParsingConfig, token: string): DateParsingConfig {\n    const month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n\n    return config;\n  });\n\n","import { addFormatToken } from '../format/format';\nimport { getDate } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { DATE } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2, false], 'Do',\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getDate(date, opts.isUTC).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D', match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n  return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do',\n  function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n\n    return config;\n  });\n","import { TimeUnit } from '../types';\nimport { daysInMonth } from '../units/month';\nimport { isNumber } from './type-checks';\nimport { getDate, getFullYear, getMonth } from './date-getters';\nimport { isLeapYear } from '../units/year';\nimport { createDate } from '../create/date-from-array';\n\nconst defaultTimeUnit: TimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n\nexport function shiftDate(date: Date, unit: TimeUnit): Date {\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  const year = date.getFullYear() + (_unit.year || 0);\n  const month = date.getMonth() + (_unit.month || 0);\n  let day = date.getDate() + (_unit.day || 0);\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(\n    year,\n    month,\n    day,\n    date.getHours() + (_unit.hour || 0),\n    date.getMinutes() + (_unit.minute || 0),\n    date.getSeconds() + (_unit.seconds || 0)\n  );\n}\n\nexport function setFullDate(date: Date, unit: TimeUnit): Date {\n  return createDate(\n    getNum(date.getFullYear(), unit.year),\n    getNum(date.getMonth(), unit.month),\n    getNum(date.getDate(), unit.day),\n    getNum(date.getHours(), unit.hour),\n    getNum(date.getMinutes(), unit.minute),\n    getNum(date.getSeconds(), unit.seconds),\n    getNum(date.getMilliseconds(), unit.milliseconds)\n  );\n}\n\nfunction getNum(def: number, num?: number): number {\n  return isNumber(num) ? num : def;\n}\n\nexport function setFullYear(date: Date, value: number, isUTC?: boolean): Date {\n  const _month = getMonth(date, isUTC);\n  const _date = getDate(date, isUTC);\n  const _year = getFullYear(date, isUTC);\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    const _daysInMonth = daysInMonth(value, _month);\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n\n  return date;\n}\n\nexport function setMonth(date: Date, value: number, isUTC?: boolean): Date {\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n\n  return date;\n}\n\nexport function setDay(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setHours(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n\n  return date;\n}\n\nexport function setMinutes(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n\n  return date;\n}\n\nexport function setSeconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n\n  return date;\n}\n\nexport function setMilliseconds(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n\n  return date;\n}\n\nexport function setDate(date: Date, value: number, isUTC?: boolean): Date {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n\n  return date;\n}\n\nexport function setTime(date: Date, value: number): Date {\n  date.setTime(value);\n\n  return date;\n}\n","// fastest way to clone date\n// https://jsperf.com/clone-date-object2\nexport function cloneDate(date: Date): Date {\n  return new Date(date.getTime());\n}\n","// tslint:disable: switch-default\nimport { TimeUnit, UnitOfTime } from '../types';\nimport {\n  setDate, setFullDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds,\n  shiftDate\n} from './date-setters';\nimport { cloneDate } from '../create/clone';\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\nimport { getMonth } from './date-getters';\nimport { add, subtract } from '../moment/add-subtract';\n\nexport function startOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  const _date = cloneDate(date);\n  // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n    /* falls through */\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n    /* falls through */\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n    /* falls through */\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n    /* falls through */\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n    /* falls through */\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  }\n\n  // weeks are a special case\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {isUTC});\n  }\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  }\n\n  // quarters are also special\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n\nexport function endOf(date: Date, unit: UnitOfTime, isUTC?: boolean): Date {\n  let _unit = unit;\n  // 'date' is an alias for 'day', so it should be considered as such.\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n\n  const start = startOf(date, _unit, isUTC);\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n\n  return res;\n}\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { getDay } from '../utils/date-getters';\nimport { addRegexToken, match1to2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { add } from '../moment/add-subtract';\nimport { getLocale } from '../locale/locales';\n\n// FORMATTING\n\naddFormatToken('d', null, 'do',\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n\naddFormatToken('dd', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n\naddFormatToken('ddd', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n\naddFormatToken('dddd', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n\naddFormatToken('e', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10);\n    // return getDay(date, opts.isUTC).toString(10);\n  });\naddFormatToken('E', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d', match1to2);\naddRegexToken('e', match1to2);\naddRegexToken('E', match1to2);\n\naddRegexToken('dd', function (isStrict: boolean, locale: Locale): RegExp {\n  return locale.weekdaysMinRegex(isStrict);\n});\n\naddRegexToken('ddd', function (isStrict: boolean, locale: Locale): RegExp {\n  return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd', function (isStrict: boolean, locale: Locale): RegExp {\n  return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'],\n  function (input: string, week: WeekParsing, config: DateParsingConfig, token) {\n    const weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n\n    return config;\n  });\n\naddWeekParseToken(['d', 'e', 'E'],\n  function (input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n    week[token] = toInt(input);\n\n    return config;\n  });\n\n// HELPERS\n\nexport function parseWeekday(input: string | number, locale: Locale): number {\n  if (!isString(input)) {\n    return input;\n  }\n\n  const _num = parseInt(input, 10);\n  if (!isNaN(_num)) {\n    return _num;\n  }\n\n  const _weekDay = locale.weekdaysParse(input);\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n\nexport function parseIsoWeekday(input: string | number, locale: Locale = getLocale()): number {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n\n// MOMENTS\n\nexport function getSetDayOfWeek(date: Date, input: number, opts: { isUTC?: boolean; locale: Locale }): Date | number {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n\nexport function setDayOfWeek(date: Date, input: number, locale = getLocale(), isUTC?: boolean): Date {\n  const day = getDay(date, isUTC);\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n\nexport function getDayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC);\n}\n\n/********************************************/\n\n// todo: utc\n// getSetLocaleDayOfWeek\nexport function getLocaleDayOfWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n\nexport function setLocaleDayOfWeek(date: Date, input: number, opts: { locale?: Locale; isUTC?: boolean } = {}): Date {\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n\n  return add(date, input - weekday, 'day');\n}\n\n\n// getSetISODayOfWeek\nexport function getISODayOfWeek(date: Date, isUTC?: boolean): number {\n  return getDay(date, isUTC) || 7;\n}\n\nexport function setISODayOfWeek(date: Date, input: number | string, opts: { locale?: Locale } = {}): Date {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  const weekday = parseIsoWeekday(input, opts.locale);\n\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n","import { addFormatToken } from '../format/format';\nimport { startOf } from '../utils/start-end-of';\nimport { addRegexToken, match1to3, match3 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { toInt } from '../utils/type-checks';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n  function (date: Date): string {\n    return getDayOfYear(date).toString(10);\n  });\n\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\n\naddUnitPriority('dayOfYear', 4);\n\naddRegexToken('DDD', match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'],\n  function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    config._dayOfYear = toInt(input);\n\n    return config;\n  });\n\nexport function getDayOfYear(date: Date, isUTC?: boolean): number {\n  const date1 = +startOf(date, 'day', isUTC);\n  const date2 = +startOf(date, 'year', isUTC);\n  const someDate = date1 - date2;\n  const oneDay = 1000 * 60 * 60 * 24;\n\n  return Math.round(someDate / oneDay) + 1;\n}\n\nexport function setDayOfYear(date: Date, input: number): Date {\n  const dayOfYear = getDayOfYear(date);\n\n  return add(date, (input - dayOfYear), 'day');\n}\n","/**\n *\n * @param {number} year\n * @param {number} dow - start-of-first-week\n * @param {number} doy - start-of-year\n * @returns {number}\n */\nimport { createUTCDate } from '../create/date-from-array';\nimport { daysInYear } from './year';\nimport { getDayOfYear } from './day-of-year';\nimport { getFullYear } from '../utils/date-getters';\n\nfunction firstWeekOffset(year: number, dow: number, doy: number): number {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n  const fwd = dow - doy + 7;\n  // first-week day local weekday -- which local weekday is fwd\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n\n  return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nexport function dayOfYearFromWeeks(\n  year: number,\n  week: number,\n  weekday: number,\n  dow: number,\n  doy: number\n): { year: number; dayOfYear: number } {\n  const localWeekday = (7 + weekday - dow) % 7;\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  let resYear: number;\n  let resDayOfYear: number;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n\nexport function weekOfYear(date: Date, dow: number, doy: number, isUTC?: boolean): { week: number; year: number } {\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  let resWeek: number;\n  let resYear: number;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n\nexport function weeksInYear(year: number, dow: number, doy: number): number {\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n","// tslint:disable:max-file-line-count max-line-length cyclomatic-complexity\n\nimport { weekOfYear } from '../units/week-calendar-utils';\nimport { hasOwnProp, isArray, isFunction } from '../utils/type-checks';\nimport { getDay, getMonth } from '../utils/date-getters';\nimport { matchWord, regexEscape } from '../parse/regex';\nimport { setDayOfWeek } from '../units/day-of-week';\n\nexport interface LocaleOptionsFormat {\n  format: string[];\n  standalone: string[];\n  isFormat?: RegExp;\n}\n\nexport type LocaleOptions = string[] | LocaleOptionsFormat;\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nexport const defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n  '_'\n);\nexport const defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(\n  '_'\n);\nexport const defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split(\n  '_'\n);\nexport const defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nexport const defaultLongDateFormat: { [index: string]: string } = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n\nexport const defaultOrdinal = '%d';\nexport const defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nconst defaultMonthsShortRegex = matchWord;\nconst defaultMonthsRegex = matchWord;\n\nexport type OrdinalDateFn = (num: number, token?: string) => string;\nexport type PluralizeDateFn = (num: number, withoutSuffix: boolean,\n                               key?: string, isFuture?: boolean) => string;\n\nexport interface LocaleData {\n  abbr?: string;\n  parentLocale?: string;\n\n  months?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsShort?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  monthsParseExact?: boolean;\n\n  weekdays?: LocaleOptions | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysShort?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysMin?: string[] | ((date: Date, format: string, isUTC?: boolean) => string | string[]);\n  weekdaysParseExact?: boolean;\n\n  longDateFormat?: { [index: string]: string };\n  calendar?: {\n    [key: string]: (string\n      | ((date: Date, now?: Date) => string)\n      // tslint:disable-next-line\n      | ((dayOfWeek: number, isNextWeek: boolean) => string))\n  };\n  relativeTime?: { [key: string]: string | PluralizeDateFn };\n  dayOfMonthOrdinalParse?: RegExp;\n  ordinal?: string | OrdinalDateFn;\n\n  week?: { dow?: number; doy?: number };\n\n  invalidDate?: string;\n\n  monthsRegex?: RegExp;\n  monthsParse?: RegExp[];\n  monthsShortRegex?: RegExp;\n  monthsStrictRegex?: RegExp;\n  monthsShortStrictRegex?: RegExp;\n  longMonthsParse?: RegExp[];\n  shortMonthsParse?: RegExp[];\n\n  meridiemParse?: RegExp;\n\n  meridiemHour?(hour: number, meridiem: string): number;\n\n  preparse?(str: string): string;\n\n  postformat?(str: string | number): string;\n\n  meridiem?(hour: number, minute?: number, isLower?: boolean): string;\n\n  isPM?(input: string): boolean;\n}\n\nexport class Locale {\n  parentLocale?: Locale;\n  _abbr: string;\n  _config: LocaleData;\n  meridiemHour: (hour: number, meridiem: string) => number;\n\n  _invalidDate: string;\n  _week: { dow: number; doy: number };\n  _dayOfMonthOrdinalParse: RegExp;\n  _ordinalParse: RegExp;\n  _meridiemParse: RegExp;\n\n  private _calendar: { [key: string]: string };\n  private _relativeTime: { future: string; past: string };\n  private _months: LocaleOptions;\n  private _monthsShort: LocaleOptions;\n  private _monthsRegex: RegExp;\n  private _monthsShortRegex: RegExp;\n  private _monthsStrictRegex: RegExp;\n  private _monthsShortStrictRegex: RegExp;\n  private _monthsParse: RegExp[];\n  private _longMonthsParse: string[] | RegExp[];\n  private _shortMonthsParse: string[] | RegExp[];\n  private _monthsParseExact: RegExp;\n  private _weekdaysParseExact: boolean;\n  private _weekdaysRegex: RegExp;\n  private _weekdaysShortRegex: RegExp;\n  private _weekdaysMinRegex: RegExp;\n\n  private _weekdaysStrictRegex: RegExp;\n  private _weekdaysShortStrictRegex: RegExp;\n  private _weekdaysMinStrictRegex: RegExp;\n\n  private _weekdays: LocaleOptions;\n  private _weekdaysShort: string[];\n  private _weekdaysMin: string[];\n  private _weekdaysParse: string[] | RegExp[];\n  private _minWeekdaysParse: string[] | RegExp[];\n  private _shortWeekdaysParse: string[] | RegExp[];\n  private _fullWeekdaysParse: RegExp[];\n  private _longDateFormat: { [key: string]: string };\n\n  private _ordinal: string;\n\n  constructor(config: LocaleData) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n\n  set(config: LocaleData): void {\n    let confKey;\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      const prop = config[confKey as keyof LocaleData];\n      const key = (isFunction(prop) ? confKey : `_${confKey}`) as keyof Locale;\n\n      this[key] = prop as any;\n    }\n\n    this._config = config;\n  }\n\n  calendar(key: string, date: Date, now: Date): string {\n    const output = this._calendar[key] || this._calendar.sameElse;\n\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n\n  longDateFormat(key: string) {\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val: string) {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  get invalidDate(): string {\n    return this._invalidDate;\n  }\n\n  set invalidDate(val: string) {\n    this._invalidDate = val;\n  }\n\n  ordinal(num: number, token?: string): string {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n\n  preparse(str: string) {\n    return str;\n  }\n\n  postformat(str: string) {\n    return str;\n  }\n\n  relativeTime(num: number, withoutSuffix: boolean, str: 'future' | 'past', isFuture: boolean): string {\n    const output = this._relativeTime[str];\n\n    return (isFunction(output)) ?\n      output(num, withoutSuffix, str, isFuture) :\n      output.replace(/%d/i, num.toString(10));\n  }\n\n  pastFuture(diff: number, output: string): string {\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  /** Months */\n  months(): string[];\n  months(date: Date, format?: string, isUTC?: boolean): string;\n  months(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._months)\n        ? this._months\n        : this._months.standalone;\n    }\n\n    if (isArray<string>(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._months[key][getMonth(date, isUTC)];\n  }\n\n  monthsShort(): string[];\n  monthsShort(date?: Date, format?: string, isUTC?: boolean): string;\n  monthsShort(date?: Date, format?: string, isUTC = false): string | string[] {\n    if (!date) {\n      return isArray<string>(this._monthsShort)\n        ? this._monthsShort\n        : this._monthsShort.standalone;\n    }\n\n    if (isArray<string>(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n\n  monthsParse(monthName: string, format?: string, strict?: boolean): number {\n    let date;\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n      if (strict && !this._longMonthsParse[i]) {\n        const _months = this.months(date, '', true).replace('.', '');\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n      // test the regex\n      if (strict && format === 'MMMM' && (this._longMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' && (this._shortMonthsParse[i] as RegExp).test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n\n  monthsRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ?\n      this._monthsStrictRegex : this._monthsRegex;\n  }\n\n  monthsShortRegex(isStrict: boolean): RegExp {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ?\n      this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n\n  /** Week */\n  week(date: Date, isUTC?: boolean): number {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n\n  firstDayOfWeek(): number {\n    return this._week.dow;\n  }\n\n  firstDayOfYear(): number {\n    return this._week.doy;\n  }\n\n  /** Day of Week */\n  weekdays(): string[];\n  weekdays(date: Date, format?: string, isUTC?: boolean): string;\n  weekdays(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return isArray<string>(this._weekdays)\n        ? this._weekdays\n        : this._weekdays.standalone;\n    }\n\n    if (isArray<string>(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n\n    const _key = this._weekdays.isFormat.test(format)\n      ? 'format'\n      : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n\n  weekdaysMin(): string[];\n  weekdaysMin(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysMin(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n\n  weekdaysShort(): string[];\n  weekdaysShort(date: Date, format?: string, isUTC?: boolean): string;\n  weekdaysShort(date?: Date, format?: string, isUTC?: boolean): string | string[] {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  }\n\n\n  // proto.weekdaysParse  =        localeWeekdaysParse;\n  weekdaysParse(weekdayName?: string, format?: string, strict?: boolean): number {\n    let i;\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray<RegExp>(this._fullWeekdaysParse)\n        || !isArray<RegExp>(this._shortWeekdaysParse)\n        || !isArray<RegExp>(this._minWeekdaysParse)\n        || !isArray<RegExp>(this._weekdaysParse)) {\n        return;\n      }\n\n      // test the regex\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  }\n\n  // proto.weekdaysRegex       =        weekdaysRegex;\n  weekdaysRegex(isStrict: boolean) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ?\n        this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n\n  weekdaysShortRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ?\n        this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  weekdaysMinRegex(isStrict?: boolean): RegExp {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ?\n        this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  isPM(input: string): boolean {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n\n  meridiem(hours: number, minutes: number, isLower: boolean): string {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n\n  formatLongDate(key: string) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    const format = this._longDateFormat[key];\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[\n      key\n      ] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (val: string) => {\n      return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n  }\n\n  private handleMonthStrictParse(monthName: string, format: string, strict?: boolean) {\n    const llc = monthName.toLocaleLowerCase();\n    let i;\n    let ii;\n    let mom;\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii = (this._shortMonthsParse as string[]).indexOf(llc);\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii = (this._longMonthsParse as string[]).indexOf(llc);\n\n      return ii !== -1 ? ii : null;\n    }\n\n    ii = (this._longMonthsParse as string[]).indexOf(llc);\n    if (ii !== -1) {\n      return ii;\n    }\n    ii = (this._shortMonthsParse as string[]).indexOf(llc);\n\n    return ii !== -1 ? ii : null;\n  }\n\n  private handleWeekStrictParse(weekdayName: string, format: string, strict: boolean): number {\n    let ii;\n    const llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      let i;\n      for (i = 0; i < 7; ++i) {\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray<string>(this._weekdaysParse)\n      || !isArray<string>(this._shortWeekdaysParse)\n      || !isArray<string>(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._weekdaysParse.indexOf(llc);\n        if (ii !== -1) {\n          return ii;\n        }\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  private computeMonthsParse() {\n    const shortPieces: string[] = [];\n    const longPieces: string[] = [];\n    const mixedPieces: string[] = [];\n    let date;\n\n    let i;\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n\n  private computeWeekdaysParse() {\n    const minPieces = [];\n    const shortPieces = [];\n    const longPieces = [];\n    const mixedPieces = [];\n\n    let i;\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      const minp = this.weekdaysMin(date);\n      const shortp = this.weekdaysShort(date);\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n}\n\nfunction cmpLenRev(a: string, b: string): number {\n  return b.length - a.length;\n}\n","export const defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n","import {\n  defaultDayOfMonthOrdinalParse,\n  defaultLocaleMonths,\n  defaultLocaleMonthsShort,\n  defaultLocaleWeekdays,\n  defaultLocaleWeekdaysMin,\n  defaultLocaleWeekdaysShort, defaultLongDateFormat, defaultOrdinal,\n  LocaleData\n} from './locale.class';\nimport { defaultCalendar } from './calendar';\n\nexport const defaultInvalidDate = 'Invalid date';\n\nexport const defaultLocaleWeek = {\n  dow: 0, // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n\nexport const defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\nexport const defaultRelativeTime: {[key: string]: string} = {\n  future : 'in %s',\n  past   : '%s ago',\n  s  : 'a few seconds',\n  ss : '%d seconds',\n  m  : 'a minute',\n  mm : '%d minutes',\n  h  : 'an hour',\n  hh : '%d hours',\n  d  : 'a day',\n  dd : '%d days',\n  M  : 'a month',\n  MM : '%d months',\n  y  : 'a year',\n  yy : '%d years'\n};\n\nexport const baseConfig: LocaleData = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n\n  week: defaultLocaleWeek,\n\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n\n  meridiemParse: defaultLocaleMeridiemParse\n};\n","// compare two arrays, return the number of differences\nimport { toInt } from './type-checks';\n\nexport function compareArrays<T>(array1: T[], array2: T[], dontConvert: boolean) {\n  const len = Math.min(array1.length, array2.length);\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  let diffs = 0;\n  let i;\n  for (i = 0; i < len; i++) {\n    if ((dontConvert && array1[i] !== array2[i])\n      || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n","// internal storage for locale config files\nimport { Locale, LocaleData } from './locale.class';\nimport { baseConfig } from './locale.defaults';\nimport { hasOwnProp, isArray, isObject, isString, isUndefined, toInt } from '../utils/type-checks';\nimport { compareArrays } from '../utils/compare-arrays';\n\nconst locales: { [key: string]: Locale } = {};\nconst localeFamilies: { [key: string]: {name: string; config: LocaleData}[] } = {};\nlet globalLocale: Locale;\n\nfunction normalizeLocale(key: string): string {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names: string[]): Locale {\n  let next;\n  let locale;\n  let i = 0;\n\n  while (i < names.length) {\n    const split = normalizeLocale(names[i]).split('-');\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n      if (locale) {\n        return locale;\n      }\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n      j--;\n    }\n    i++;\n  }\n\n  return null;\n}\n\nexport function mergeConfigs(parentConfig: LocaleData,\n                             childConfig: LocaleData) {\n  const res: LocaleData = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[childProp] = childConfig[childProp];\n    } else {\n      delete res[childProp];\n    }\n  }\n  let parentProp;\n  for (parentProp in parentConfig) {\n    if (\n      hasOwnProp(parentConfig, parentProp) &&\n      !hasOwnProp(childConfig, parentProp) &&\n      isObject(parentConfig[parentProp as keyof LocaleData])\n    ) {\n      // make sure changes to properties don't modify parent config\n      res[parentProp as keyof LocaleData] = Object.assign({}, res[parentProp as keyof LocaleData]);\n    }\n  }\n\n  return res;\n}\n\n\nfunction loadLocale(name: string): Locale {\n  // no way!\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nexport function getSetGlobalLocale(key?: string | string[], values?: LocaleData): string {\n  let data: Locale;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n\nexport function defineLocale(name: string, config?: LocaleData): Locale {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n      localeFamilies[config.parentLocale].push({ name, config });\n\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(function (x) {\n      defineLocale(x.name, x.config);\n    });\n  }\n\n  // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n  getSetGlobalLocale(name);\n\n\n  return locales[name];\n}\n\nexport function updateLocale(name: string, config?: LocaleData): Locale {\n  let _config = config;\n\n  if (_config != null) {\n    let parentConfig = baseConfig;\n    // MERGE\n    const tmpLocale = loadLocale(name);\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n    _config = mergeConfigs(parentConfig, _config);\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale;\n\n    // backwards compat for now: also set the locale\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n}\n\n// returns locale data\nexport function getLocale(key?: string | string[]): Locale {\n  if (!key) {\n    return globalLocale;\n  }\n  // let locale;\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n\nexport function listLocales(): string[] {\n  return Object.keys(locales);\n}\n\n// define default locale\ngetSetGlobalLocale('en', {\n  dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n  ordinal(num: number): string {\n    const b = num % 10;\n    const output =\n      toInt((num % 100) / 10) === 1\n        ? 'th'\n        : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n\n    return num + output;\n  }\n});\n","import { toInt } from '../utils/type-checks';\nimport { createDuration } from './create';\nimport { Duration } from './constructor';\nimport { DateObject } from '../types';\n\nconst ordering: (keyof DateObject)[] = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst orderingHash = ordering.reduce((mem: { [key: string]: boolean }, order) => {\n  mem[order] = true;\n\n  return mem;\n}, {});\n\nexport function isDurationValid(duration: Partial<DateObject>): boolean {\n  const durationKeys = Object.keys(duration);\n  if (durationKeys\n      .some((key: keyof DateObject) => {\n        return (key in orderingHash)\n          && duration[key] === null\n          || isNaN(duration[key]);\n      })) {\n    return false;\n  }\n  // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  let unitHasDecimal = false;\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n\n// export function isValid() {\n//   return this._isValid;\n// }\n//\n// export function createInvalid(): Duration {\n//   return createDuration(NaN);\n// }\n","export function absCeil (number: number): number {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n","import { Duration } from './constructor';\nimport { absFloor } from '../utils';\nimport { absCeil } from '../utils/abs-ceil';\n\nexport function bubble(dur: Duration): Duration {\n  let milliseconds = dur._milliseconds;\n  let days = dur._days;\n  let months = dur._months;\n  const data = dur._data;\n\n  // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n  if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n      (milliseconds <= 0 && days <= 0 && months <= 0))) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  }\n\n  // The following code bubbles up values, see the tests for\n  // examples of what that means.\n  data.milliseconds = milliseconds % 1000;\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n\n  days += absFloor(hours / 24);\n\n  // convert days to months\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays));\n\n  // 12 months -> 1 year\n  const years = absFloor(months / 12);\n  months %= 12;\n\n  data.day = days;\n  data.month = months;\n  data.year = years;\n\n  return dur;\n}\n\nexport function daysToMonths(day: number): number {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n\nexport function monthsToDays(month: number): number {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n","// tslint:disable:cyclomatic-complexity\nimport { createDuration } from './create';\nimport { Locale } from '../locale/locale.class';\nimport { Duration } from './constructor';\n\nlet round = Math.round;\nconst thresholds: { [key: string]: number } = {\n  ss: 44,         // a few seconds to seconds\n  s: 45,         // seconds to minute\n  m: 45,         // minutes to hour\n  h: 22,         // hours to day\n  d: 26,         // days to month\n  M: 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(str: 'future' | 'past', num: number,\n                           withoutSuffix: boolean, isFuture: boolean,\n                           locale: Locale): string {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n\nexport function relativeTime(posNegDuration: Duration, withoutSuffix: boolean, locale: Locale): string {\n  const duration = createDuration(posNegDuration).abs();\n  const seconds = round(duration.as('s'));\n  const minutes = round(duration.as('m'));\n  const hours = round(duration.as('h'));\n  const days = round(duration.as('d'));\n  const months = round(duration.as('M'));\n  const years = round(duration.as('y'));\n\n  const a: [string] | [string, number] =\n    seconds <= thresholds.ss && ['s', seconds] ||\n    seconds < thresholds.s && ['ss', seconds] ||\n    minutes <= 1 && ['m'] ||\n    minutes < thresholds.m && ['mm', minutes] ||\n    hours <= 1 && ['h'] ||\n    hours < thresholds.h && ['hh', hours] ||\n    days <= 1 && ['d'] ||\n    days < thresholds.d && ['dd', days] ||\n    months <= 1 && ['M'] ||\n    months < thresholds.M && ['MM', months] ||\n    years <= 1 && ['y'] || ['yy', years];\n\n  const b: [string, number | string, boolean, boolean, Locale] =\n    [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n  // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n}\n\n// This function allows you to set the rounding function for relative time strings\nexport function getSetRelativeTimeRounding(roundingFunction: any): boolean | Function {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n  if (typeof(roundingFunction) === 'function') {\n    round = roundingFunction;\n\n    return true;\n  }\n\n  return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nexport function getSetRelativeTimeThreshold(threshold: string, limit: number): boolean | number {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n  thresholds[threshold] = limit;\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n\n// export function humanize(withSuffix) {\n//   if (!this.isValid()) {\n//     return this.localeData().invalidDate();\n//   }\n//\n//   const locale = this.localeData();\n//   let output = relativeTime(this, !withSuffix, locale);\n//\n//   if (withSuffix) {\n//     output = locale.pastFuture(+this, output);\n//   }\n//\n//   return locale.postformat(output);\n// }\n","import { getLocale } from '../locale/locales';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isDurationValid } from './valid';\nimport { bubble, daysToMonths, monthsToDays } from './bubble';\nimport { DateObject } from '../types';\nimport { Locale } from '../locale/locale.class';\nimport { normalizeUnits } from '../units/aliases';\nimport { relativeTime } from './humanize';\nimport { toInt } from '../utils/type-checks';\n\nexport class Duration {\n  _milliseconds: number;\n  _days: number;\n  _months: number;\n  _data: Partial<DateObject> = {};\n  _locale: Locale = getLocale();\n  _isValid: boolean;\n\n  constructor(duration: Partial<DateObject>, config: DateParsingConfig = {}) {\n    this._locale = config && config._locale || getLocale();\n    // const normalizedInput = normalizeObjectUnits(duration);\n    const normalizedInput = duration;\n    const years = normalizedInput.year || 0;\n    const quarters = normalizedInput.quarter || 0;\n    const months = normalizedInput.month || 0;\n    const weeks = normalizedInput.week || 0;\n    const days = normalizedInput.day || 0;\n    const hours = normalizedInput.hours || 0;\n    const minutes = normalizedInput.minutes || 0;\n    const seconds = normalizedInput.seconds || 0;\n    const milliseconds = normalizedInput.milliseconds || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n      seconds * 1000 +\n      minutes * 60 * 1000 + // 1000 * 60\n      hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n      weeks * 7;\n    // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n      quarters * 3 +\n      years * 12;\n\n    // this._data = {};\n\n    // this._locale = getLocale();\n\n    // this._bubble();\n    return bubble(this);\n  }\n\n  isValid(): boolean {\n    return this._isValid;\n  }\n\n  humanize(withSuffix?: boolean): string {\n    // throw new Error(`TODO: implement`);\n\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n\n    const locale = this.localeData();\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  localeData(): Locale {\n    return this._locale;\n  }\n\n  locale(): string;\n  locale(localeKey: string): Duration;\n  locale(localeKey?: string): Duration | string {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n\n    return this;\n  }\n\n\n  abs(): Duration {\n    const mathAbs = Math.abs;\n\n    const data = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n\n    return this;\n  }\n\n  as(_units: string): number {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    let days;\n    let months;\n    const milliseconds = this._milliseconds;\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      return units === 'month' ? months : months / 12;\n    }\n\n    // handle milliseconds separately because of floating point math errors (issue #1867)\n    days = this._days + Math.round(monthsToDays(this._months));\n    switch (units) {\n      case 'week'   :\n        return days / 7 + milliseconds / 6048e5;\n      case 'day'    :\n        return days + milliseconds / 864e5;\n      case 'hours'   :\n        return days * 24 + milliseconds / 36e5;\n      case 'minutes' :\n        return days * 1440 + milliseconds / 6e4;\n      case 'seconds' :\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n\n  valueOf () {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return (\n      this._milliseconds +\n      this._days * 864e5 +\n      (this._months % 12) * 2592e6 +\n      toInt(this._months / 12) * 31536e6\n    );\n  }\n}\n\nexport function isDuration(obj: any): obj is Duration {\n  return obj instanceof Duration;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { getParsingFlags } from './parsing-flags';\n\nexport function isValid(config: DateParsingConfig): boolean {\n  if (config._isValid == null) {\n    const flags = getParsingFlags(config);\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts, function (i: number) {\n      return i != null;\n    });\n    let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n      flags.overflow < 0 &&\n      !flags.empty &&\n      !flags.invalidMonth &&\n      !flags.invalidWeekday &&\n      !flags.weekdayMismatch &&\n      !flags.nullInput &&\n      !flags.invalidFormat &&\n      !flags.userInvalidated &&\n      (!flags.meridiem || (flags.meridiem && parsedParts));\n\n    if (config._strict) {\n      isNowValid = isNowValid &&\n        flags.charsLeftOver === 0 &&\n        flags.unusedTokens.length === 0 &&\n        flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n\nexport function createInvalid(config: DateParsingConfig, flags?: { nullInput: boolean }): DateParsingConfig {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n\n  return config;\n}\n\nexport function markInvalid(config: DateParsingConfig): DateParsingConfig {\n  config._isValid = false;\n\n  return config;\n}\n","// tslint:disable-next-line\nimport { defaultLocaleMonthsShort, defaultLocaleWeekdaysShort } from '../locale/locale.class';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from './parsing.types';\nimport { isString } from '../utils/type-checks';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { createUTCDate } from './date-from-array';\nimport { createInvalid, markInvalid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nconst isoDates: [string, RegExp, boolean][] = [\n  ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n  ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n  ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n  ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n  ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n  ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n  ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n  ['YYYYMMDD', /\\d{8}/, true],\n  // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n  ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n  ['YYYYDDD', /\\d{7}/, true]\n];\n\n// iso time formats and regexes\nconst isoTimes: [string, RegExp][] = [\n  ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n  ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n  ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n  ['HH:mm', /\\d\\d:\\d\\d/],\n  ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n  ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n  ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n  ['HHmm', /\\d\\d\\d\\d/],\n  ['HH', /\\d\\d/]\n];\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\nconst obsOffsets: { [key: string]: number } = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n};\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n// date from iso format\nexport function configFromISO(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const input = config._i;\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n\n\n  let allowTime;\n  let dateFormat;\n  let timeFormat;\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  // getParsingFlags(config).iso = true;\n  let i;\n  let l;\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n\n      return config;\n    }\n\n  }\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\n  return configFromStringAndFormat(config);\n}\n\n// tslint:disable-next-line\nfunction extractFromRFC2822Strings(yearStr: string, monthStr: string, dayStr: string, hourStr: string, minuteStr: string, secondStr: string): DateArray {\n  const result = [\n    untruncateYear(yearStr),\n    defaultLocaleMonthsShort.indexOf(monthStr),\n    parseInt(dayStr, 10),\n    parseInt(hourStr, 10),\n    parseInt(minuteStr, 10)\n  ];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n\nfunction untruncateYear(yearStr: string): number {\n  const year = parseInt(yearStr, 10);\n\n  return year <= 49 ? year + 2000 : year;\n}\n\nfunction preprocessRFC2822(str: string): string {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str\n    .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n    .replace(/(\\s\\s+)/g, ' ').trim();\n}\n\nfunction checkWeekday(weekdayStr: string, parsedInput: DateArray, config: DateParsingConfig): boolean {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction calculateOffset(obsOffset: string, militaryOffset: string, numOffset: string) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    const hm = parseInt(numOffset, 10);\n    const m = hm % 100;\n    const h = (hm - m) / 100;\n\n    return h * 60 + m;\n  }\n}\n\n// date and time from ref 2822 format\nexport function configFromRFC2822(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n  config._d = createUTCDate.apply(null, config._a);\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n\n  return config;\n}\n\n// date from iso format or fallback\nexport function configFromString(config: DateParsingConfig): DateParsingConfig {\n  if (!isString(config._i)) {\n    return config;\n  }\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n\n    return config;\n  }\n\n  // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n  configFromISO(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n  return createInvalid(config);\n}\n\n// hooks.createFromInputFallback = deprecate(\n//     'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n//     'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n//     'discouraged and will be removed in an upcoming major release. Please refer to ' +\n//     'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n//     function (config) {\n//         config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n//     }\n// );\n","// moment.js\n// version : 2.18.1\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\n// license : MIT\n// momentjs.com\n\nimport './units/index';\nimport { formatFunctions, makeFormatFunction } from './format/format';\nimport { Locale } from './locale/locale.class';\nimport { getLocale } from './locale/locales';\nimport { isDateValid } from './utils/type-checks';\n\nexport function formatDate(date: Date, format: string, locale?: string, isUTC?: boolean, offset = 0): string {\n  const _locale = getLocale(locale || 'en');\n  if (!_locale) {\n    throw new Error(\n      `Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`\n    );\n  }\n\n  const _format = format || (isUTC ?  'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n}\n\n// format date using native date object\nexport function formatMoment(date: Date, _format: string, locale: Locale, isUTC?: boolean, offset = 0): string {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n\nexport function expandFormat(_format: string, locale: Locale): string {\n  let format = _format;\n  let i = 5;\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n  const replaceLongDateFormatTokens = (input: any) => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n","// Pick the first defined of two or three arguments.\nexport function defaults<T>(a?: T, b?: T, c?: T): T {\n  if (a != null) {\n    return a;\n  }\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { DateArray } from '../types';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, YEAR } from '../units/constants';\nimport { daysInYear } from '../units/year';\nimport { getParsingFlags } from './parsing-flags';\nimport { createUTCDate } from './date-from-array';\nimport { createDate } from './date-from-array';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from '../units/week-calendar-utils';\nimport { defaults } from '../utils/defaults';\n\nfunction currentDateArray(config: DateParsingConfig): DateArray {\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nexport function configFromArray(config: DateParsingConfig): DateParsingConfig {\n  const input = [];\n  let i;\n  let date;\n  let currentDate;\n  let expectedWeekday;\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config);\n\n  // compute day of the year from weeks and weekdays\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  }\n\n  // if the day of the year is set, figure out what it is\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  }\n\n  // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  }\n\n  // Zero out whatever was not defaulted, including time\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n  }\n\n  // Check for 24:00:00.000\n  if (config._a[HOUR] === 24 &&\n    config._a[MINUTE] === 0 &&\n    config._a[SECOND] === 0 &&\n    config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n\n  // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  }\n\n  // check for mismatching day of week\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n\nfunction dayOfYearFromWeekInfo(config: DateParsingConfig): DateParsingConfig {\n  let w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n  w = config._w;\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4;\n\n    // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n    // Default to current week.\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n","import { getParsingFlags } from './parsing-flags';\nimport { DATE, HOUR, MILLISECOND, MINUTE, MONTH, SECOND, WEEK, WEEKDAY, YEAR } from '../units/constants';\nimport { daysInMonth } from '../units/month';\nimport { DateParsingConfig } from './parsing.types';\n\nexport function checkOverflow(config: DateParsingConfig): DateParsingConfig {\n  let overflow;\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow =\n      a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n        a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n          a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n              a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                  -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n\n","import { DateParsingConfig } from './parsing.types';\nimport { configFromISO, configFromRFC2822 } from './from-string';\nimport { expandFormat } from '../format';\nimport { formattingTokens, formatTokenFunctions } from '../format/format';\nimport { isArray, isString } from '../utils/type-checks';\nimport { getParseRegexForToken } from '../parse/regex';\nimport { addTimeToArrayFromToken } from '../parse/token';\nimport { HOUR } from '../units/constants';\nimport { configFromArray } from './from-array';\nimport { getParsingFlags } from './parsing-flags';\nimport { checkOverflow } from './check-overflow';\nimport { Locale } from '../locale/locale.class';\n\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\nexport const ISO_8601 = 'ISO_8601';\n\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\nexport const RFC_2822 = 'RFC_2822';\n\n// date from string and format string\nexport function configFromStringAndFormat(config: DateParsingConfig): DateParsingConfig {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || (!config._i && config._i !== 0)) {\n    return config;\n  }\n\n  // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  let input = config._i.toString();\n  let totalParsedInputLength = 0;\n  const inputLength = input.length;\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n  let i;\n  let token;\n  let parsedInput;\n  let skipped;\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    }\n    // don't parse if it's not a known token\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  }\n\n  // add remaining unparsed input length to the string\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  }\n\n  // clear _12h flag if hour is <= 12\n  if (config._a[HOUR] <= 12 &&\n    getParsingFlags(config).bigHour === true &&\n    config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem;\n  // handle meridiem\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n  configFromArray(config);\n\n  return checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap(locale: Locale, _hour: number, meridiem: string): number {\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  }\n  // Fallback\n  const isPm = locale.isPM(meridiem);\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n","import { normalizeObjectUnits } from '../units/aliases';\nimport { configFromArray } from './from-array';\nimport { DateParsingConfig } from './parsing.types';\nimport { isObject, isString } from '../utils/type-checks';\n\nexport function configFromObject(config: DateParsingConfig): DateParsingConfig {\n  if (config._d) {\n    return config;\n  }\n\n  const input = config._i;\n  if (isObject(input)) {\n    const i = normalizeObjectUnits(input as any);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n    // todo: obsolete -> remove it\n      .map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n","// tslint:disable:max-line-length\nimport { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\nimport { DateParsingConfig } from './parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { createInvalid, isValid } from './valid';\nimport { configFromStringAndArray } from './from-string-and-array';\nimport { configFromStringAndFormat } from './from-string-and-format';\nimport { cloneDate } from './clone';\nimport { configFromString } from './from-string';\nimport { configFromArray } from './from-array';\nimport { configFromObject } from './from-object';\nimport { checkOverflow } from './check-overflow';\nimport { DateInput } from '../test/chain';\n\nfunction createFromConfig(config: DateParsingConfig): DateParsingConfig {\n  const res = checkOverflow(prepareConfig(config));\n  // todo: remove, in moment.js it's never called cuz of moment constructor\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n  if (!isValid(Object.assign({}, res, {_isValid: null}))) {\n    res._d = new Date(NaN);\n  }\n  // todo: update offset\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n  return res;\n}\n\nexport function prepareConfig(config: DateParsingConfig): DateParsingConfig {\n  let input = config._i;\n  const format = config._f;\n\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || (format === undefined && input === '')) {\n    return createInvalid(config, { nullInput: true });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n\n    return config;\n  }\n\n  // todo: add check for recursion\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n\nfunction configFromInput(config: DateParsingConfig): DateParsingConfig {\n  const input = config._i;\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray<string | number>(input) && input.length) {\n    const _arr: (string | number)[] = input.slice(0);\n    config._a = _arr.map(obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n\nexport function createLocalOrUTC(input: DateInput, format?: string | string[], localeKey?: string, strict?: boolean, isUTC?: boolean): DateParsingConfig {\n  const config: DateParsingConfig = {};\n  let _input = input;\n\n  // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n\n  // todo: fail fast and return not valid date\n  if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n    _input = undefined;\n  }\n  // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n\n  return createFromConfig(config);\n}\n","import { DateParsingConfig } from './parsing.types';\nimport { createInvalid, isValid } from './valid';\nimport { getParsingFlags } from './parsing-flags';\nimport { configFromStringAndFormat } from './from-string-and-format';\n\n// date from string and array of format strings\nexport function configFromStringAndArray(config: DateParsingConfig): DateParsingConfig {\n  let tempConfig;\n  let bestMoment;\n  let scoreToBeat;\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n\n    return createInvalid(config);\n  }\n\n  let i;\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    }\n\n    // if there is any input that was not parsed add a penalty for that format\n    currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n    // or tokens\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n","import { createLocalOrUTC } from './from-anything';\nimport { DateArray, DateObject } from '../types';\nimport { DateInput } from '../test/chain';\nimport { isDate } from '../utils/type-checks';\n\nexport function parseDate(input: DateInput, format?: string | string[],\n                          localeKey?: string, strict?: boolean, isUTC?: boolean): Date {\n  if (isDate(input)) {\n    return input;\n  }\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n\n  return config._d;\n}\n","export function absRound(num: number): number {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n","// tslint:disable:no-bitwise max-line-length\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { isNumber, isString, toInt } from '../utils/type-checks';\nimport { addRegexToken, matchOffset, matchShortOffset } from '../parse/regex';\nimport { add } from '../moment/add-subtract';\nimport { addParseToken } from '../parse/token';\nimport { DateArray } from '../types';\nimport { cloneDate } from '../create/clone';\nimport { setMonth } from '../utils/date-setters';\n\nfunction addOffsetFormatToken(token: string, separator: string): void {\n  addFormatToken(token, null, null, function (date: Date, config): string {\n    let offset = getUTCOffset(date, {_isUTC: config.isUTC, _offset: config.offset});\n    let sign = '+';\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n  });\n}\n\naddOffsetFormatToken('Z', ':');\naddOffsetFormatToken('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z', matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._useUTC = true;\n  config._tzm = offsetFromString(matchShortOffset, input);\n\n  return config;\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher: RegExp, str: string): number {\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n\n  const chunk = matches[matches.length - 1];\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nexport function cloneWithOffset(input: Date, date: Date,\n                                config: DateParsingConfig = {}): Date {\n  if (!config._isUTC) {\n    return input;\n  }\n\n  const res = cloneDate(date);\n  // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n  const offsetDiff = (config._offset || 0) * 60000;\n  const diff = input.valueOf() - res.valueOf() + offsetDiff;\n  // Use low-level api, because this fn is low-level api.\n  res.setTime(res.valueOf() + diff);\n  // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n\nexport function getDateOffset(date: Date): number {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nexport function getUTCOffset(date: Date, config: DateParsingConfig = {}): number {\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n\nexport function setUTCOffset(date: Date, input: number | string, keepLocalTime?: boolean, keepMinutes?: boolean, config: DateParsingConfig = {}): Date {\n  const offset = config._offset || 0;\n  let localAdjust;\n  let _input = input;\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n  config._offset = _input;\n  config._isUTC = true;\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC);\n      // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true;\n      // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\nexport function setOffsetToUTC(date: Date, keepLocalTime?: boolean): Date {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n\nexport function isDaylightSavingTime(date: Date): boolean {\n\n  return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n    || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\nexport function setOffsetToParsedOffset(date: Date, input: string, config: DateParsingConfig = {}): Date {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    const tZone = offsetFromString(matchOffset, input);\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n\nexport function hasAlignedHourOffset(date: Date, input?: Date) {\n  const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n\n\n// DEPRECATED\n/*export function isDaylightSavingTimeShifted() {\n  if (!isUndefined(this._isDSTShifted)) {\n    return this._isDSTShifted;\n  }\n\n  const c = {};\n\n  copyConfig(c, this);\n  c = prepareConfig(c);\n\n  if (c._a) {\n    const other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n    this._isDSTShifted = this.isValid() &&\n      compareArrays(c._a, other.toArray()) > 0;\n  } else {\n    this._isDSTShifted = false;\n  }\n\n  return this._isDSTShifted;\n}*/\n\n// in Khronos\n/*export function isLocal() {\n  return this.isValid() ? !this._isUTC : false;\n}\n\nexport function isUtcOffset() {\n  return this.isValid() ? this._isUTC : false;\n}\n\nexport function isUtc() {\n  return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}*/\n","import { UnitOfTime } from '../types';\nimport { endOf, startOf } from './start-end-of';\n\nexport function isAfter(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n\nexport function isBefore(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n\nexport function isBetween(\n  date: Date,\n  from: Date,\n  to: Date,\n  units: UnitOfTime,\n  inclusivity = '()'\n): boolean {\n  const leftBound =\n    inclusivity[0] === '('\n      ? isAfter(date, from, units)\n      : !isBefore(date, from, units);\n  const rightBound =\n    inclusivity[1] === ')'\n      ? isBefore(date, to, units)\n      : !isAfter(date, to, units);\n\n  return leftBound && rightBound;\n}\n\nexport function isSame(\n  date1: Date,\n  date2: Date,\n  units: UnitOfTime = 'milliseconds'\n): boolean {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n\n  const inputMs = date2.valueOf();\n\n  return (\n    startOf(date1, units).valueOf() <= inputMs &&\n    inputMs <= endOf(date1, units).valueOf()\n  );\n}\n\nexport function isSameOrAfter(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n\nexport function isSameOrBefore(\n  date1: Date,\n  date2: Date,\n  units?: UnitOfTime\n): boolean {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n","// ASP.NET json date format regex\nimport { Duration, isDuration } from './constructor';\nimport { isDateValid, isNumber, isObject, isString, toInt } from '../utils/type-checks';\nimport { DATE, HOUR, MILLISECOND, MINUTE, SECOND } from '../units/constants';\nimport { parseDate } from '../create/local';\nimport { absRound } from '../utils/abs-round';\nimport { DateObject } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { cloneWithOffset } from '../units/offset';\nimport { isAfter, isBefore } from '../utils/date-compare';\nimport { getFullYear, getMonth } from '../utils/date-getters';\nimport { add } from '../moment/add-subtract';\nimport { cloneDate } from '../create/clone';\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\nexport type DurationInput = string | number | Duration | Partial<DateObject> | { from: Date; to: Date };\n\nexport function createDuration(input?: DurationInput, key?: string, config: DateParsingConfig = {}) {\n  const duration = convertDuration(input, key);\n  // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n\nfunction convertDuration(input: any, key: string): Partial<DateObject> {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? { [key]: input } : { milliseconds: input };\n  }\n\n  if (isString(input)) {\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : 1;\n\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n    if (match) {\n      const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n\n  }\n\n  if (isObject<{from: any; to: any}>(input) && ('from' in input || 'to' in input)) {\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n}\n\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\nfunction parseIso(inp: string, sign: number): number {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n  const res = inp && parseFloat(inp.replace(',', '.'));\n  // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  const res = { milliseconds: 0, months: 0 };\n\n  res.months = getMonth(other) - getMonth(base) +\n    (getFullYear(other) - getFullYear(base)) * 12;\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n\n  return res;\n}\n\nfunction momentsDifference(base: Date, other: Date): { milliseconds: number; months: number } {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return { milliseconds: 0, months: 0 };\n  }\n\n  let res;\n  const _other = cloneWithOffset(other, base, {_offset: base.getTimezoneOffset()});\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n","// tslint:disable:no-bitwise\n// FORMATTING\n\nimport { addFormatToken } from '../format/format';\nimport { addRegexToken, match1, match1to3, match2, match3, matchUnsigned } from '../parse/regex';\nimport { MILLISECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addParseToken } from '../parse/token';\nimport { DateArray, DateFormatterOptions, WeekParsing } from '../types';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getMilliseconds } from '../utils/date-getters';\n\naddFormatToken('S', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n\naddFormatToken(null, ['SS', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n\naddFormatToken(null, ['SSS', 3, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC)).toString(10);\n  });\naddFormatToken(null, ['SSSS', 4, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\naddFormatToken(null, ['SSSSS', 5, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\naddFormatToken(null, ['SSSSSS', 6, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\naddFormatToken(null, ['SSSSSSS', 7, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\naddFormatToken(null, ['SSSSSSSS', 8, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\naddFormatToken(null, ['SSSSSSSSS', 9, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  });\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S', match1to3, match1);\naddRegexToken('SS', match1to3, match2);\naddRegexToken('SSS', match1to3, match3);\n\nlet token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n  addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n\n  return config;\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n  addParseToken(token, parseMs);\n}\n// MOMENTS\n\n","import { createDuration } from '../duration/create';\nimport { absRound } from '../utils/abs-round';\nimport { Duration } from '../duration/constructor';\nimport { getDate, getMonth, getTime } from '../utils/date-getters';\nimport { setDate, setMonth, setTime } from '../utils/date-setters';\nimport { cloneDate } from '../create/clone';\nimport { UnitOfTime } from '../types';\n\nexport function add(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, 1, isUTC);\n}\n\nexport function subtract(date: Date, val: number, period: UnitOfTime, isUTC?: boolean): Date {\n  const dur = createDuration(val, period);\n\n  return addSubtract(date, dur, -1, isUTC);\n}\n\nexport function addSubtract(date: Date, duration: Duration, isAdding: number, isUTC?: boolean): Date {\n  const milliseconds = duration._milliseconds;\n  const days = absRound(duration._days);\n  const months = absRound(duration._months);\n\n  // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date);\n  // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n","import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\nimport { addFormatToken } from '../format/format';\nimport { zeroFill } from '../utils/zero-fill';\nimport { Locale } from '../locale/locale.class';\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { HOUR, MINUTE, SECOND } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getParsingFlags } from '../create/parsing-flags';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\n\n// FORMATTING\n\nfunction hFormat(date: Date, isUTC: boolean): number {\n  return getHours(date, isUTC) % 12 || 12;\n}\n\nfunction kFormat(date: Date, isUTC: boolean): number {\n  return getHours(date, isUTC) || 24;\n}\n\naddFormatToken('H', ['HH', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getHours(date, opts.isUTC).toString(10);\n  });\naddFormatToken('h', ['hh', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\naddFormatToken('k', ['kk', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n\naddFormatToken('hmm', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}`;\n  });\n\naddFormatToken('hmmss', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    const _h = hFormat(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}${_ss}`;\n  });\n\naddFormatToken('Hmm', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}`;\n  });\n\naddFormatToken('Hmmss', null, null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    const _H = getHours(date, opts.isUTC);\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}${_ss}`;\n  });\n\nfunction meridiem(token: string, lowercase: boolean): void {\n  addFormatToken(token, null, null,\n    function (date: Date, opts: DateFormatterOptions): string {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n\n// PARSING\n\nfunction matchMeridiem(isStrict: boolean, locale: Locale): RegExp {\n  return locale._meridiemParse;\n}\n\naddRegexToken('a', matchMeridiem);\naddRegexToken('A', matchMeridiem);\naddRegexToken('H', match1to2);\naddRegexToken('h', match1to2);\naddRegexToken('k', match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'],\n  function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n\n    return config;\n  });\naddParseToken(['a', 'A'], function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._isPm = config._locale.isPM(input);\n  config._meridiem = input;\n\n  return config;\n});\naddParseToken(['h', 'hh'], function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  array[HOUR] = toInt(input);\n  getParsingFlags(config).bigHour = true;\n\n  return config;\n});\naddParseToken('hmm', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  const pos = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos));\n  array[MINUTE] = toInt(input.substr(pos));\n  getParsingFlags(config).bigHour = true;\n\n  return config;\n});\naddParseToken('hmmss', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  const pos1 = input.length - 4;\n  const pos2 = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos1));\n  array[MINUTE] = toInt(input.substr(pos1, 2));\n  array[SECOND] = toInt(input.substr(pos2));\n  getParsingFlags(config).bigHour = true;\n\n  return config;\n});\naddParseToken('Hmm', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  const pos = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos));\n  array[MINUTE] = toInt(input.substr(pos));\n\n  return config;\n});\naddParseToken('Hmmss', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  const pos1 = input.length - 4;\n  const pos2 = input.length - 2;\n  array[HOUR] = toInt(input.substr(0, pos1));\n  array[MINUTE] = toInt(input.substr(pos1, 2));\n  array[SECOND] = toInt(input.substr(pos2));\n\n  return config;\n});\n","import { addFormatToken } from '../format/format';\nimport { Locale } from '../locale/locale.class';\nimport { weekOfYear } from './week-calendar-utils';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateFormatterOptions, WeekParsing } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { getLocale } from '../locale/locales';\nimport { add } from '../moment/add-subtract';\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2, false], 'wo',\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getWeek(date, opts.locale).toString(10);\n  });\n\naddFormatToken('W', ['WW', 2, false], 'Wo',\n  function (date: Date): string {\n    return getISOWeek(date).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w', match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W', match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'],\n  function (input: string, week: WeekParsing, config: DateParsingConfig, token: string): DateParsingConfig {\n    week[token.substr(0, 1)] = toInt(input);\n\n    return config;\n  });\n\n// export function getSetWeek (input) {\n//   var week = this.localeData().week(this);\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\nexport function setWeek(date: Date, input: number, locale = getLocale()): Date {\n  const week = getWeek(date, locale);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getWeek(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return locale.week(date, isUTC);\n}\n\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\nexport function setISOWeek(date: Date, input: number): Date {\n  const week = getISOWeek(date);\n\n  return add(date, (input - week) * 7, 'day');\n}\n\nexport function getISOWeek(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n","import { addFormatToken } from '../format/format';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addWeekParseToken } from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { parseTwoDigitYear } from './year';\nimport { dayOfYearFromWeeks, weekOfYear, weeksInYear } from './week-calendar-utils';\nimport { createUTCDate } from '../create/date-from-array';\nimport { getISOWeek, getWeek } from './week';\nimport { getISODayOfWeek, getLocaleDayOfWeek } from './day-of-week';\nimport { getLocale } from '../locale/locales';\nimport { setDate, setFullYear, setMonth } from '../utils/date-setters';\nimport { getDate, getFullYear, getMonth } from '../utils/date-getters';\nimport { Locale } from '../locale/locale.class';\nimport { DateFormatterFn, DateFormatterOptions, WeekParsing } from '../types';\n\n// FORMATTING\n\naddFormatToken(null, ['gg', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n\naddFormatToken(null, ['GG', 2, false], null,\n  function (date: Date): string {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n\nfunction addWeekYearFormatToken(token: string, getter: DateFormatterFn): void {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n\nfunction _getWeekYearFormatCb(date: Date, opts: DateFormatterOptions): string {\n  return getWeekYear(date, opts.locale).toString();\n}\n\nfunction _getISOWeekYearFormatCb(date: Date): string {\n  return getISOWeekYear(date).toString();\n}\n\naddWeekYearFormatToken('gggg', _getWeekYearFormatCb);\naddWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\naddWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\naddWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G', matchSigned);\naddRegexToken('g', matchSigned);\naddRegexToken('GG', match1to2, match2);\naddRegexToken('gg', match1to2, match2);\naddRegexToken('GGGG', match1to4, match4);\naddRegexToken('gggg', match1to4, match4);\naddRegexToken('GGGGG', match1to6, match6);\naddRegexToken('ggggg', match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n  function (input, week: WeekParsing, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n\n    return config;\n  });\n\naddWeekParseToken(['gg', 'GG'], function (input, week: WeekParsing, config, token) {\n  week[token] = parseTwoDigitYear(input);\n\n  return config;\n});\n\n// MOMENTS\n\nexport function getSetWeekYear(date: Date, input: number, locale = getLocale(), isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date,\n    input,\n    // this.week(),\n    getWeek(date, locale, isUTC),\n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC),\n    locale.firstDayOfWeek(),\n    locale.firstDayOfYear(),\n    isUTC);\n}\n\nexport function getWeekYear(date: Date, locale = getLocale(), isUTC?: boolean): number {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n\nexport function getSetISOWeekYear(date: Date, input: number, isUTC?: boolean): number | Date {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n\nexport function getISOWeekYear(date: Date, isUTC?: boolean): number {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n\nexport function getISOWeeksInYear(date: Date, isUTC?: boolean) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n\nexport function getWeeksInYear(date: Date, isUTC?: boolean, locale: Locale = getLocale()): number {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n\nfunction getSetWeekYearHelper(date: Date, input: number, week: number,\n                              weekday: number, dow: number, doy: number, isUTC?: boolean): number | Date {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n\nfunction setWeekAll(date: Date, weekYear: number, week: number,\n                    weekday: number, dow: number, doy: number): Date {\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n\n  return date;\n}\n","import { addFormatToken } from '../format/format';\nimport { getMinutes } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MINUTE } from './constants';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getMinutes(date, opts.isUTC).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m', match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n","import { addFormatToken } from '../format/format';\nimport { addRegexToken, match1 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { MONTH } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { getMonth } from '../utils/date-getters';\nimport { DateArray, DateFormatterOptions } from '../types';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\nimport { DateParsingConfig } from '../create/parsing.types';\nimport { setMonth } from '../utils/date-setters';\n\n// FORMATTING\n\naddFormatToken('Q', null, 'Qo',\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getQuarter(date, opts.isUTC).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  array[MONTH] = (toInt(input) - 1) * 3;\n\n  return config;\n});\n\n// MOMENTS\n\nexport function getQuarter(date: Date, isUTC = false): number {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\nexport function setQuarter(date: Date, quarter: number, isUTC?: boolean): Date {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n\n// export function getSetQuarter(input) {\n//   return input == null\n//     ? Math.ceil((this.month() + 1) / 3)\n//     : this.month((input - 1) * 3 + this.month() % 3);\n// }\n","import { addFormatToken } from '../format/format';\nimport { getSeconds } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { SECOND } from './constants';\nimport { addUnitAlias } from './aliases';\nimport { addUnitPriority } from './priorities';\nimport { DateFormatterOptions } from '../types';\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2, false], null,\n  function (date: Date, opts: DateFormatterOptions): string {\n    return getSeconds(date, opts.isUTC).toString(10);\n  });\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s', match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n","import { addFormatToken } from '../format/format';\nimport { unix } from '../utils/date-getters';\nimport { addRegexToken, matchSigned, matchTimestamp } from '../parse/regex';\nimport { addParseToken} from '../parse/token';\nimport { toInt } from '../utils/type-checks';\nimport { DateArray } from '../types';\nimport { DateParsingConfig } from '../create/parsing.types';\n\n// FORMATTING\n\naddFormatToken('X', null, null, function (date: Date): string {\n  return unix(date).toString(10);\n});\naddFormatToken('x', null, null, function (date: Date): string {\n  return date.valueOf().toString(10);\n});\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\n\naddParseToken('X', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._d = new Date(parseFloat(input) * 1000);\n\n  return config;\n});\naddParseToken('x', function (input: string, array: DateArray, config: DateParsingConfig): DateParsingConfig {\n  config._d = new Date(toInt(input));\n\n  return config;\n});\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\nimport { LocaleData } from '../locale/locale.class';\n\nconst symbolMap: {[key: string]: string} = {\n  1: 'Ù¡',\n  2: 'Ù¢',\n  3: 'Ù£',\n  4: 'Ù¤',\n  5: 'Ù¥',\n  6: 'Ù¦',\n  7: 'Ù§',\n  8: 'Ù¨',\n  9: 'Ù©',\n  0: 'Ù '\n};\nconst numberMap: {[key: string]: string} = {\n  'Ù¡': '1',\n  'Ù¢': '2',\n  'Ù£': '3',\n  'Ù¤': '4',\n  'Ù¥': '5',\n  'Ù¦': '6',\n  'Ù§': '7',\n  'Ù¨': '8',\n  'Ù©': '9',\n  'Ù ': '0'\n};\nconst pluralForm = function (num: number): number {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\nconst plurals: {[key: string]: [string, string, [string, string], string, string, string]} = {\n  s: ['Ø£ÙÙ ÙÙ Ø«Ø§ÙÙØ©', 'Ø«Ø§ÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø«Ø§ÙÙØªØ§Ù', 'Ø«Ø§ÙÙØªÙÙ'], '%d Ø«ÙØ§Ù', '%d Ø«Ø§ÙÙØ©', '%d Ø«Ø§ÙÙØ©'],\n  m: ['Ø£ÙÙ ÙÙ Ø¯ÙÙÙØ©', 'Ø¯ÙÙÙØ© ÙØ§Ø­Ø¯Ø©', ['Ø¯ÙÙÙØªØ§Ù', 'Ø¯ÙÙÙØªÙÙ'], '%d Ø¯ÙØ§Ø¦Ù', '%d Ø¯ÙÙÙØ©', '%d Ø¯ÙÙÙØ©'],\n  h: ['Ø£ÙÙ ÙÙ Ø³Ø§Ø¹Ø©', 'Ø³Ø§Ø¹Ø© ÙØ§Ø­Ø¯Ø©', ['Ø³Ø§Ø¹ØªØ§Ù', 'Ø³Ø§Ø¹ØªÙÙ'], '%d Ø³Ø§Ø¹Ø§Øª', '%d Ø³Ø§Ø¹Ø©', '%d Ø³Ø§Ø¹Ø©'],\n  d: ['Ø£ÙÙ ÙÙ ÙÙÙ', 'ÙÙÙ ÙØ§Ø­Ø¯', ['ÙÙÙØ§Ù', 'ÙÙÙÙÙ'], '%d Ø£ÙØ§Ù', '%d ÙÙÙÙØ§', '%d ÙÙÙ'],\n  M: ['Ø£ÙÙ ÙÙ Ø´ÙØ±', 'Ø´ÙØ± ÙØ§Ø­Ø¯', ['Ø´ÙØ±Ø§Ù', 'Ø´ÙØ±ÙÙ'], '%d Ø£Ø´ÙØ±', '%d Ø´ÙØ±Ø§', '%d Ø´ÙØ±'],\n  y: ['Ø£ÙÙ ÙÙ Ø¹Ø§Ù', 'Ø¹Ø§Ù ÙØ§Ø­Ø¯', ['Ø¹Ø§ÙØ§Ù', 'Ø¹Ø§ÙÙÙ'], '%d Ø£Ø¹ÙØ§Ù', '%d Ø¹Ø§ÙÙØ§', '%d Ø¹Ø§Ù']\n};\nconst pluralize = function (u: string) {\n  return function (num: number, withoutSuffix: boolean): string {\n    const f = pluralForm(num);\n    let str = plurals[u][pluralForm(num)];\n    if (f === 2) {\n      str = str[withoutSuffix ? 0 : 1];\n    }\n\n    return (str as string).replace(/%d/i, num.toString());\n  };\n};\nconst months: string[] = [\n  'ÙÙØ§ÙØ±',\n  'ÙØ¨Ø±Ø§ÙØ±',\n  'ÙØ§Ø±Ø³',\n  'Ø£Ø¨Ø±ÙÙ',\n  'ÙØ§ÙÙ',\n  'ÙÙÙÙÙ',\n  'ÙÙÙÙÙ',\n  'Ø£ØºØ³Ø·Ø³',\n  'Ø³Ø¨ØªÙØ¨Ø±',\n  'Ø£ÙØªÙØ¨Ø±',\n  'ÙÙÙÙØ¨Ø±',\n  'Ø¯ÙØ³ÙØ¨Ø±'\n];\n\nexport const arLocale: LocaleData = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'Ø§ÙØ£Ø­Ø¯_Ø§ÙØ¥Ø«ÙÙÙ_Ø§ÙØ«ÙØ§Ø«Ø§Ø¡_Ø§ÙØ£Ø±Ø¨Ø¹Ø§Ø¡_Ø§ÙØ®ÙÙØ³_Ø§ÙØ¬ÙØ¹Ø©_Ø§ÙØ³Ø¨Øª'.split('_'),\n  weekdaysShort: 'Ø£Ø­Ø¯_Ø¥Ø«ÙÙÙ_Ø«ÙØ§Ø«Ø§Ø¡_Ø£Ø±Ø¨Ø¹Ø§Ø¡_Ø®ÙÙØ³_Ø¬ÙØ¹Ø©_Ø³Ø¨Øª'.split('_'),\n  weekdaysMin: 'Ø­_Ù_Ø«_Ø±_Ø®_Ø¬_Ø³'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /Øµ|Ù/,\n  isPM(input) {\n    return 'Ù' === input;\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Øµ';\n    } else {\n      return 'Ù';\n    }\n  },\n  calendar: {\n    sameDay: '[Ø§ÙÙÙÙ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextDay: '[ØºØ¯ÙØ§ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    nextWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastDay: '[Ø£ÙØ³ Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    lastWeek: 'dddd [Ø¹ÙØ¯ Ø§ÙØ³Ø§Ø¹Ø©] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Ø¨Ø¹Ø¯ %s',\n    past: 'ÙÙØ° %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n  preparse(str: string): string {\n    return str.replace(/[Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©Ù ]/g, function (match) {\n      return numberMap[match];\n    }).replace(/Ø/g, ',');\n  },\n  postformat(str: string) {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, 'Ø');\n  },\n  week: {\n    dow: 6, // Saturday is the first day of the week.\n    doy: 12  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\nconst months: string[] = 'leden_Ãºnor_bÅezen_duben_kvÄten_Äerven_Äervenec_srpen_zÃ¡ÅÃ­_ÅÃ­jen_listopad_prosinec'.split('_');\nconst monthsShort: string[] = 'led_Ãºno_bÅe_dub_kvÄ_Ävn_Ävc_srp_zÃ¡Å_ÅÃ­j_lis_pro'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':  // a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekund' : 'pÃ¡r sekundami';\n    case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':  // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n    case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n    // break;\n    case 'h':  // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh': // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':  // a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n    case 'dd': // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dnÃ­');\n      } else {\n        return result + 'dny';\n      }\n    // break;\n    case 'M':  // a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mÄsÃ­c' : 'mÄsÃ­cem';\n    case 'MM': // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mÄsÃ­ce' : 'mÄsÃ­cÅ¯');\n      } else {\n        return result + 'mÄsÃ­ci';\n      }\n    // break;\n    case 'y':  // a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n    case 'yy': // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n    // break;\n  }\n}\n\nexport const csLocale: LocaleData = {\n  abbr: 'cs',\n  months,\n  monthsShort,\n  monthsParse: (function (months, monthsShort) {\n    let i, _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (Äervenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n  }(months, monthsShort)),\n  shortMonthsParse: (function (monthsShort) {\n    let i, _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n  }(monthsShort)),\n  longMonthsParse: (function (months) {\n    let i, _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n  }(months)),\n  weekdays: 'nedÄle_pondÄlÃ­_ÃºterÃ½_stÅeda_Ätvrtek_pÃ¡tek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  weekdaysMin: 'ne_po_Ãºt_st_Ät_pÃ¡_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zÃ­tra v] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n        case 3:\n          return '[ve stÅedu v] LT';\n        case 4:\n          return '[ve Ätvrtek v] LT';\n        case 5:\n          return '[v pÃ¡tek v] LT';\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n    lastDay: '[vÄera v] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou nedÄli v] LT';\n        case 1:\n        case 2:\n          return '[minulÃ©] dddd [v] LT';\n        case 3:\n          return '[minulou stÅedu v] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [v] LT';\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'pÅed %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\nexport const daLocale: LocaleData = {\n  abbr: 'da',\n  months : 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays : 'SÃ¸ndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_LÃ¸rdag'.split('_'),\n  weekdaysShort : 'SÃ¸n_Man_Tir_Ons_Tor_Fre_LÃ¸r'.split('_'),\n  weekdaysMin : 'SÃ¸_Ma_Ti_On_To_Fr_LÃ¸'.split('_'),\n  longDateFormat : {\n      LT : 'HH:mm',\n      LTS : 'HH:mm:ss',\n      L : 'DD/MM/YYYY',\n      LL : 'D. MMMM YYYY',\n      LLL : 'D. MMMM YYYY HH:mm',\n      LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar : {\n      sameDay : '[i dag kl.] LT',\n      nextDay : '[i morgen kl.] LT',\n      nextWeek : 'pÃ¥ dddd [kl.] LT',\n      lastDay : '[i gÃ¥r kl.] LT',\n      lastWeek : '[i] dddd[s kl.] LT',\n      sameElse : 'L'\n  },\n  relativeTime : {\n      future : 'om %s',\n      past : '%s siden',\n      s : 'fÃ¥ sekunder',\n      m : 'et minut',\n      mm : '%d minutter',\n      h : 'en time',\n      hh : '%d timer',\n      d : 'en dag',\n      dd : '%d dage',\n      M : 'en mÃ¥ned',\n      MM : '%d mÃ¥neder',\n      y : 'et Ã¥r',\n      yy : '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n      dow : 1, // Monday is the first day of the week.\n      doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion ElensÃºle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\nfunction processRelativeTime(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const format: { [key: string]: [string, string] } = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nexport const deLocale: LocaleData = {\n  abbr: 'de',\n  months: 'Januar_Februar_MÃ¤rz_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._MÃ¤rz_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\nexport const enGbLocale: LocaleData = {\n  abbr: 'en-gb',\n  months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'in %s',\n    past : '%s ago',\n    s : 'a few seconds',\n    ss : '%d seconds',\n    m : 'a minute',\n    mm : '%d minutes',\n    h : 'an hour',\n    hh : '%d hours',\n    d : 'a day',\n    dd : '%d days',\n    M : 'a month',\n    MM : '%d months',\n    y : 'a year',\n    yy : '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    const b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'th' :\n        (b === 1) ? 'st' :\n          (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n    return num + output;\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio NapurÃ­ : https://github.com/julionc\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esLocale: LocaleData = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_'),\n  monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nlet monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\nlet monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\nexport const esDoLocale: LocaleData = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\nlet monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nlet monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nexport const esUsLocale: LocaleData = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot[getMonth(date, isUTC)];\n    }\n  },\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miÃ©rcoles_jueves_viernes_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._miÃ©._jue._vie._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    sameDay(date: Date): string {\n      return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date): string {\n      return '[maÃ±ana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date): string {\n      return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date): string {\n      return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date): string {\n      return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un aÃ±o',\n    yy: '%d aÃ±os'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\nvar numbersPast = 'nolla yksi kaksi kolme neljÃ¤ viisi kuusi seitsemÃ¤n kahdeksan yhdeksÃ¤n'.split(' '),\n  numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljÃ¤n', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n  ];\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = '';\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n    case 'd':\n      return isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤';\n    case 'dd':\n      result = isFuture ? 'pÃ¤ivÃ¤n' : 'pÃ¤ivÃ¤Ã¤';\n      break;\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n\nfunction verbalNumber(num: number, isFuture: boolean) {\n  return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n\nexport const fiLocale: LocaleData = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesÃ¤kuu_heinÃ¤kuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesÃ¤_heinÃ¤_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tÃ¤nÃ¤Ã¤n] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pÃ¤Ã¤stÃ¤',\n    past: '%s sitten',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\nexport const frLocale: LocaleData = {\n  abbr: 'fr',\n  months: 'janvier_fÃ©vrier_mars_avril_mai_juin_juillet_aoÃ»t_septembre_octobre_novembre_dÃ©cembre'.split('_'),\n  monthsShort: 'janv._fÃ©vr._mars_avr._mai_juin_juil._aoÃ»t_sept._oct._nov._dÃ©c.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourdâhui Ã ] LT',\n    nextDay: '[Demain Ã ] LT',\n    nextWeek: 'dddd [Ã ] LT',\n    lastDay: '[Hier Ã ] LT',\n    lastWeek: 'dddd [dernier Ã ] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n\n      // Words with masculine grammatical gender: mois, trimestre, jour\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n\n      // Words with feminine grammatical gender: semaine\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getHours, getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : DarÃ­o BeirÃ³ : https://github.com/quinobravo\n\nlet monthsShortDot = 'xan._feb._mar._abr._mai._xuÃ±._xul._ago._set._out._nov._dec.'.split('_'),\n  monthsShort = 'xan_feb_mar_abr_mai_xuÃ±_xul_ago_set_out_nov_dec'.split('_');\n\nlet monthsParse = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuÃ±/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n\nexport const glLocale: LocaleData = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuÃ±o_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuÃ±o|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuÃ±\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'domingo_luns_martes_mÃ©rcores_xoves_venres_sÃ¡bado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mÃ©r._xov._ven._sÃ¡b.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mÃ©_xo_ve_sÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    sameDay(date: Date) {\n      return '[hoxe Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextDay(date: Date) {\n      return '[maÃ±an Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    nextWeek(date: Date) {\n      return 'dddd [Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastDay(date: Date) {\n      return '[onte Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    lastWeek(date: Date) {\n      return '[o] dddd [pasado Ã¡' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un dÃ­a',\n    dd: '%d dÃ­as',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\nexport const heLocale: LocaleData = {\n  abbr: 'he',\n  months: '×× ×××¨_×¤××¨×××¨_××¨×¥_××¤×¨××_×××_××× ×_××××_×××××¡×_×¡×¤××××¨_×××§××××¨_× ×××××¨_××¦×××¨'.split('_'),\n  monthsShort: '×× ××³_×¤××¨×³_××¨×¥_××¤×¨×³_×××_××× ×_××××_××××³_×¡×¤××³_×××§×³_× ×××³_××¦××³'.split('_'),\n  weekdays: '×¨××©××_×©× ×_×©×××©×_×¨×××¢×_××××©×_×©××©×_×©××ª'.split('_'),\n  weekdaysShort: '××³_××³_××³_××³_××³_××³_×©×³'.split('_'),\n  weekdaysMin: '×_×_×_×_×_×_×©'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [×]MMMM YYYY',\n    LLL: 'D [×]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [×]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[×××× ×Ö¾]LT',\n    nextDay: '[×××¨ ×Ö¾]LT',\n    nextWeek: 'dddd [××©×¢×] LT',\n    lastDay: '[××ª××× ×Ö¾]LT',\n    lastWeek: '[××××] dddd [××××¨×× ××©×¢×] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '××¢×× %s',\n    past: '××¤× × %s',\n    s: '××¡×¤×¨ ×©× ×××ª',\n    ss: '%d ×©× ×××ª',\n    m: '××§×',\n    mm: '%d ××§××ª',\n    h: '×©×¢×',\n    hh(num: number): string {\n      if (num === 2) {\n        return '×©×¢×ª×××';\n      }\n      return num + ' ×©×¢××ª';\n    },\n    d: '×××',\n    dd(num: number): string {\n      if (num === 2) {\n        return '××××××';\n      }\n      return num + ' ××××';\n    },\n    M: '××××©',\n    MM(num: number): string {\n      if (num === 2) {\n        return '××××©×××';\n      }\n      return num + ' ××××©××';\n    },\n    y: '×©× ×',\n    yy(num: number): string {\n      if (num === 2) {\n        return '×©× ×ª×××';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' ×©× ×';\n      }\n      return num + ' ×©× ××';\n    }\n  },\n  meridiemParse: /×××\"×¦|××¤× ×\"×¦|×××¨× ××¦××¨×××|××¤× × ××¦××¨×××|××¤× ××ª ×××§×¨|××××§×¨|××¢×¨×/i,\n  isPM(input) {\n    return /^(×××\"×¦|×××¨× ××¦××¨×××|××¢×¨×)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return '××¤× ××ª ×××§×¨';\n    } else if (hour < 10) {\n      return '××××§×¨';\n    } else if (hour < 12) {\n      return isLower ? '××¤× ×\"×¦' : '××¤× × ××¦××¨×××';\n    } else if (hour < 18) {\n      return isLower ? '×××\"×¦' : '×××¨× ××¦××¨×××';\n    } else {\n      return '××¢×¨×';\n    }\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\nlet symbolMap: {[key: string]: string} = {\n    1: 'à¥§',\n    2: 'à¥¨',\n    3: 'à¥©',\n    4: 'à¥ª',\n    5: 'à¥«',\n    6: 'à¥¬',\n    7: 'à¥­',\n    8: 'à¥®',\n    9: 'à¥¯',\n    0: 'à¥¦'\n  },\n  numberMap: {[key: string]: string} = {\n    'à¥§': '1',\n    'à¥¨': '2',\n    'à¥©': '3',\n    'à¥ª': '4',\n    'à¥«': '5',\n    'à¥¬': '6',\n    'à¥­': '7',\n    'à¥®': '8',\n    'à¥¯': '9',\n    'à¥¦': '0'\n  };\n\nexport const hiLocale: LocaleData = {\n  abbr: 'hi',\n  months: 'à¤à¤¨à¤µà¤°à¥_à¤«à¤¼à¤°à¤µà¤°à¥_à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥à¤²_à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²à¤¾à¤_à¤à¤à¤¸à¥à¤¤_à¤¸à¤¿à¤¤à¤®à¥à¤¬à¤°_à¤à¤à¥à¤à¥à¤¬à¤°_à¤¨à¤µà¤®à¥à¤¬à¤°_à¤¦à¤¿à¤¸à¤®à¥à¤¬à¤°'.split('_'),\n  monthsShort: 'à¤à¤¨._à¤«à¤¼à¤°._à¤®à¤¾à¤°à¥à¤_à¤à¤ªà¥à¤°à¥._à¤®à¤_à¤à¥à¤¨_à¤à¥à¤²._à¤à¤._à¤¸à¤¿à¤¤._à¤à¤à¥à¤à¥._à¤¨à¤µ._à¤¦à¤¿à¤¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¤°à¤µà¤¿à¤µà¤¾à¤°_à¤¸à¥à¤®à¤µà¤¾à¤°_à¤®à¤à¤à¤²à¤µà¤¾à¤°_à¤¬à¥à¤§à¤µà¤¾à¤°_à¤à¥à¤°à¥à¤µà¤¾à¤°_à¤¶à¥à¤à¥à¤°à¤µà¤¾à¤°_à¤¶à¤¨à¤¿à¤µà¤¾à¤°'.split('_'),\n  weekdaysShort: 'à¤°à¤µà¤¿_à¤¸à¥à¤®_à¤®à¤à¤à¤²_à¤¬à¥à¤§_à¤à¥à¤°à¥_à¤¶à¥à¤à¥à¤°_à¤¶à¤¨à¤¿'.split('_'),\n  weekdaysMin: 'à¤°_à¤¸à¥_à¤®à¤_à¤¬à¥_à¤à¥_à¤¶à¥_à¤¶'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm à¤¬à¤à¥',\n    LTS: 'A h:mm:ss à¤¬à¤à¥',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm à¤¬à¤à¥',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm à¤¬à¤à¥'\n  },\n  calendar: {\n    sameDay: '[à¤à¤] LT',\n    nextDay: '[à¤à¤²] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[à¤à¤²] LT',\n    lastWeek: '[à¤ªà¤¿à¤à¤²à¥] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s à¤®à¥à¤',\n    past: '%s à¤ªà¤¹à¤²à¥',\n    s: 'à¤à¥à¤ à¤¹à¥ à¤à¥à¤·à¤£',\n    ss: '%d à¤¸à¥à¤à¤à¤¡',\n    m: 'à¤à¤ à¤®à¤¿à¤¨à¤',\n    mm: '%d à¤®à¤¿à¤¨à¤',\n    h: 'à¤à¤ à¤à¤à¤à¤¾',\n    hh: '%d à¤à¤à¤à¥',\n    d: 'à¤à¤ à¤¦à¤¿à¤¨',\n    dd: '%d à¤¦à¤¿à¤¨',\n    M: 'à¤à¤ à¤®à¤¹à¥à¤¨à¥',\n    MM: '%d à¤®à¤¹à¥à¤¨à¥',\n    y: 'à¤à¤ à¤µà¤°à¥à¤·',\n    yy: '%d à¤µà¤°à¥à¤·'\n  },\n  preparse(str: string): string {\n    return str.replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function (match) {\n      return numberMap[match];\n    });\n  },\n  postformat(str: string): string {\n    return str.replace(/\\d/g, function (match) {\n      return symbolMap[match];\n    });\n  },\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /à¤°à¤¾à¤¤|à¤¸à¥à¤¬à¤¹|à¤¦à¥à¤ªà¤¹à¤°|à¤¶à¤¾à¤®/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'à¤°à¤¾à¤¤') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¸à¥à¤¬à¤¹') {\n      return hour;\n    } else if (meridiem === 'à¤¦à¥à¤ªà¤¹à¤°') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'à¤¶à¤¾à¤®') {\n      return hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'à¤°à¤¾à¤¤';\n    } else if (hour < 10) {\n      return 'à¤¸à¥à¤¬à¤¹';\n    } else if (hour < 17) {\n      return 'à¤¦à¥à¤ªà¤¹à¤°';\n    } else if (hour < 20) {\n      return 'à¤¶à¤¾à¤®';\n    } else {\n      return 'à¤°à¤¾à¤¤';\n    }\n  },\n  week: {\n    dow: 0, // Sunday is the first day of the week.\n    doy: 6  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\nlet weekEndings = 'vasÃ¡rnap hÃ©tfÅn kedden szerdÃ¡n csÃ¼tÃ¶rtÃ¶kÃ¶n pÃ©nteken szombaton'.split(' ');\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  switch (key) {\n    case 's':\n      return (isFuture || withoutSuffix) ? 'nÃ©hÃ¡ny mÃ¡sodperc' : 'nÃ©hÃ¡ny mÃ¡sodperce';\n    case 'ss':\n      return num + ((isFuture || withoutSuffix) ? ' mÃ¡sodperc' : ' mÃ¡sodperce');\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' Ã³ra' : ' Ã³rÃ¡ja');\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hÃ³nap' : ' hÃ³napja');\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' Ã©v' : ' Ã©ve');\n  }\n  return '';\n}\nfunction week(date: Date, isFuture: boolean) {\n  return (isFuture ? '' : '[mÃºlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n\nexport const huLocale: LocaleData = {\n  abbr: 'hu',\n  months : 'januÃ¡r_februÃ¡r_mÃ¡rcius_Ã¡prilis_mÃ¡jus_jÃºnius_jÃºlius_augusztus_szeptember_oktÃ³ber_november_december'.split('_'),\n  monthsShort : 'jan_feb_mÃ¡rc_Ã¡pr_mÃ¡j_jÃºn_jÃºl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays : 'vasÃ¡rnap_hÃ©tfÅ_kedd_szerda_csÃ¼tÃ¶rtÃ¶k_pÃ©ntek_szombat'.split('_'),\n  weekdaysShort : 'vas_hÃ©t_kedd_sze_csÃ¼t_pÃ©n_szo'.split('_'),\n  weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat : {\n    LT : 'H:mm',\n    LTS : 'H:mm:ss',\n    L : 'YYYY.MM.DD.',\n    LL : 'YYYY. MMMM D.',\n    LLL : 'YYYY. MMMM D. H:mm',\n    LLLL : 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n  isPM (input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n  meridiem (hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n  calendar : {\n    sameDay : '[ma] LT[-kor]',\n    nextDay : '[holnap] LT[-kor]',\n    nextWeek (date: Date) {\n      return week(date, true);\n    },\n    lastDay : '[tegnap] LT[-kor]',\n    lastWeek (date: Date) {\n      return week(date, false);\n    },\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s mÃºlva',\n    past : '%s',\n    s : translate,\n    ss : translate,\n    m : translate,\n    mm : translate,\n    h : translate,\n    hh : translate,\n    d : translate,\n    dd : translate,\n    M : translate,\n    MM : translate,\n    y : translate,\n    yy : translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal : '%d.',\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\nexport const idLocale: LocaleData = {\n  abbr: 'id',\n  months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat : {\n    LT : 'HH.mm',\n    LTS : 'HH.mm.ss',\n    L : 'DD/MM/YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY [pukul] HH.mm',\n    LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n  calendar : {\n    sameDay : '[Hari ini pukul] LT',\n    nextDay : '[Besok pukul] LT',\n    nextWeek : 'dddd [pukul] LT',\n    lastDay : '[Kemarin pukul] LT',\n    lastWeek : 'dddd [lalu pukul] LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : 'dalam %s',\n    past : '%s yang lalu',\n    s : 'beberapa detik',\n    ss : '%d detik',\n    m : 'semenit',\n    mm : '%d menit',\n    h : 'sejam',\n    hh : '%d jam',\n    d : 'sehari',\n    dd : '%d hari',\n    M : 'sebulan',\n    MM : '%d bulan',\n    y : 'setahun',\n    yy : '%d tahun'\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\nexport const itLocale: LocaleData = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedÃ¬_martedÃ¬_mercoledÃ¬_giovedÃ¬_venerdÃ¬_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future(num: number): string {\n      return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\nexport const jaLocale: LocaleData =  {\n  abbr: 'ja',\n  months : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  monthsShort : '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays : 'æ¥ææ¥_æææ¥_ç«ææ¥_æ°´ææ¥_æ¨ææ¥_éææ¥_åææ¥'.split('_'),\n  weekdaysShort : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  weekdaysMin : 'æ¥_æ_ç«_æ°´_æ¨_é_å'.split('_'),\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'YYYY/MM/DD',\n    LL : 'YYYYå¹´MæDæ¥',\n    LLL : 'YYYYå¹´MæDæ¥ HH:mm',\n    LLLL : 'YYYYå¹´MæDæ¥ HH:mm dddd',\n    l : 'YYYY/MM/DD',\n    ll : 'YYYYå¹´MæDæ¥',\n    lll : 'YYYYå¹´MæDæ¥ HH:mm',\n    llll : 'YYYYå¹´MæDæ¥ HH:mm dddd'\n  },\n  meridiemParse: /åå|åå¾/i,\n  isPM (input) {\n    return input === 'åå¾';\n  },\n  meridiem (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'åå';\n    } else {\n      return 'åå¾';\n    }\n  },\n  calendar : {\n    sameDay : '[ä»æ¥] LT',\n    nextDay : '[ææ¥] LT',\n    nextWeek : '[æ¥é±]dddd LT',\n    lastDay : '[æ¨æ¥] LT',\n    lastWeek : '[åé±]dddd LT',\n    sameElse : 'L'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}æ¥/,\n  ordinal (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      default:\n        return num.toString(10);\n    }\n  },\n  relativeTime : {\n    future : '%så¾',\n    past : '%så',\n    s : 'æ°ç§',\n    ss : '%dç§',\n    m : '1å',\n    mm : '%då',\n    h : '1æé',\n    hh : '%dæé',\n    d : '1æ¥',\n    dd : '%dæ¥',\n    M : '1ã¶æ',\n    MM : '%dã¶æ',\n    y : '1å¹´',\n    yy : '%då¹´'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\nexport const koLocale: LocaleData = {\n  abbr: 'ko',\n  months : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  monthsShort : '1ì_2ì_3ì_4ì_5ì_6ì_7ì_8ì_9ì_10ì_11ì_12ì'.split('_'),\n  weekdays : 'ì¼ìì¼_ììì¼_íìì¼_ììì¼_ëª©ìì¼_ê¸ìì¼_í ìì¼'.split('_'),\n  weekdaysShort : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  weekdaysMin : 'ì¼_ì_í_ì_ëª©_ê¸_í '.split('_'),\n  longDateFormat : {\n    LT : 'A h:mm',\n    LTS : 'A h:mm:ss',\n    L : 'YYYY.MM.DD',\n    LL : 'YYYYë MMMM Dì¼',\n    LLL : 'YYYYë MMMM Dì¼ A h:mm',\n    LLLL : 'YYYYë MMMM Dì¼ dddd A h:mm',\n    l : 'YYYY.MM.DD',\n    ll : 'YYYYë MMMM Dì¼',\n    lll : 'YYYYë MMMM Dì¼ A h:mm',\n    llll : 'YYYYë MMMM Dì¼ dddd A h:mm'\n  },\n  calendar : {\n    sameDay : 'ì¤ë LT',\n    nextDay : 'ë´ì¼ LT',\n    nextWeek : 'dddd LT',\n    lastDay : 'ì´ì  LT',\n    lastWeek : 'ì§ëì£¼ dddd LT',\n    sameElse : 'L'\n  },\n  relativeTime : {\n    future : '%s í',\n    past : '%s ì ',\n    s : 'ëª ì´',\n    ss : '%dì´',\n    m : '1ë¶',\n    mm : '%dë¶',\n    h : 'í ìê°',\n    hh : '%dìê°',\n    d : 'íë£¨',\n    dd : '%dì¼',\n    M : 'í ë¬',\n    MM : '%dë¬',\n    y : 'ì¼ ë',\n    yy : '%dë'\n  },\n  dayOfMonthOrdinalParse : /\\d{1,2}(ì¼|ì|ì£¼)/,\n  ordinal : function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'ì¼';\n      case 'M':\n        return num + 'ì';\n      case 'w':\n      case 'W':\n        return num + 'ì£¼';\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse : /ì¤ì |ì¤í/,\n  isPM : function (token) {\n    return token === 'ì¤í';\n  },\n  meridiem : function (hour, minute, isUpper) {\n    return hour < 12 ? 'ì¤ì ' : 'ì¤í';\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´' : 'ÑÑÐ´ÑÑÐ½ ÑÐµÐºÑÐ½Ð´ÑÐ½';\n    case 'ss':\n      return num + (withoutSuffix ? ' ÑÐµÐºÑÐ½Ð´' : ' ÑÐµÐºÑÐ½Ð´ÑÐ½');\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' Ð¼Ð¸Ð½ÑÑ' : ' Ð¼Ð¸Ð½ÑÑÑÐ½');\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' ÑÐ°Ð³' : ' ÑÐ°Ð³Ð¸Ð¹Ð½');\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' Ó©Ð´Ó©Ñ' : ' Ó©Ð´ÑÐ¸Ð¹Ð½');\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' ÑÐ°Ñ' : ' ÑÐ°ÑÑÐ½');\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' Ð¶Ð¸Ð»' : ' Ð¶Ð¸Ð»Ð¸Ð¹Ð½');\n    default:\n      return num.toString(10);\n  }\n}\n\nexport const mnLocale: LocaleData = {\n  abbr: 'mn',\n  months: 'ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¥Ð¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÓ©ÑÓ©Ð²Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_Ð¢Ð°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÑÐ³Ð°Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ¾Ð»Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÐ°Ð¹Ð¼Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ°Ð²Ð´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ ÑÐ°Ñ_ÐÑÐ²Ð°Ð½ ÑÐ¾ÑÑÐ´ÑÐ³Ð°Ð°Ñ ÑÐ°Ñ'.split('_'),\n  monthsShort: '1 ÑÐ°Ñ_2 ÑÐ°Ñ_3 ÑÐ°Ñ_4 ÑÐ°Ñ_5 ÑÐ°Ñ_6 ÑÐ°Ñ_7 ÑÐ°Ñ_8 ÑÐ°Ñ_9 ÑÐ°Ñ_10 ÑÐ°Ñ_11 ÑÐ°Ñ_12 ÑÐ°Ñ'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'ÐÑÐ¼_ÐÐ°Ð²Ð°Ð°_ÐÑÐ³Ð¼Ð°Ñ_ÐÑÐ°Ð³Ð²Ð°_ÐÒ¯ÑÑÐ²_ÐÐ°Ð°ÑÐ°Ð½_ÐÑÐ¼Ð±Ð°'.split('_'),\n  weekdaysShort: 'ÐÑÐ¼_ÐÐ°Ð²_ÐÑÐ³_ÐÑÐ°_ÐÒ¯Ñ_ÐÐ°Ð°_ÐÑÐ¼'.split('_'),\n  weekdaysMin: 'ÐÑ_ÐÐ°_ÐÑ_ÐÑ_ÐÒ¯_ÐÐ°_ÐÑ'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D',\n    LLL: 'YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm',\n    LLLL: 'dddd, YYYY Ð¾Ð½Ñ MMMMÑÐ½ D HH:mm'\n  },\n  meridiemParse: /Ò®Ó¨|Ò®Ð¥/i,\n  isPM: function (input) {\n    return input === 'Ò®Ð¥';\n  },\n  meridiem: function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'Ò®Ó¨';\n    } else {\n      return 'Ò®Ð¥';\n    }\n  },\n  calendar: {\n    sameDay: '[Ó¨Ð½Ó©Ó©Ð´Ó©Ñ] LT',\n    nextDay: '[ÐÐ°ÑÐ³Ð°Ð°Ñ] LT',\n    nextWeek: '[ÐÑÑÑ] dddd LT',\n    lastDay: '[Ó¨ÑÐ¸Ð³Ð´Ó©Ñ] LT',\n    lastWeek: '[Ó¨Ð½Ð³Ó©ÑÑÓ©Ð½] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s Ð´Ð°ÑÐ°Ð°',\n    past: '%s Ó©Ð¼Ð½Ó©',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} Ó©Ð´Ó©Ñ/,\n  ordinal: function (num: number, period: string): string {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' Ó©Ð´Ó©Ñ';\n      default:\n        return num.toString(10);\n    }\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n  monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlLocale: LocaleData = {\n  abbr: 'nl',\n  months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort (date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse : monthsParse,\n  shortMonthsParse : monthsParse,\n\n  weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact : true,\n  longDateFormat : {\n    LT : 'HH:mm',\n    LTS : 'HH:mm:ss',\n    L : 'DD-MM-YYYY',\n    LL : 'D MMMM YYYY',\n    LLL : 'D MMMM YYYY HH:mm',\n    LLLL : 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar : {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime : {\n    future : 'over %s',\n    past : '%s geleden',\n    s : 'een paar seconden',\n    ss : '%d seconden',\n    m : 'Ã©Ã©n minuut',\n    mm : '%d minuten',\n    h : 'Ã©Ã©n uur',\n    hh : '%d uur',\n    d : 'Ã©Ã©n dag',\n    dd : '%d dagen',\n    M : 'Ã©Ã©n maand',\n    MM : '%d maanden',\n    y : 'Ã©Ã©n jaar',\n    yy : '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal (_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week : {\n    dow : 1, // Monday is the first day of the week.\n    doy : 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\n\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris RÃ¶ling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nlet monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nlet monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nexport const nlBeLocale: LocaleData = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n  monthsShort(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'Ã©Ã©n minuut',\n    mm: '%d minuten',\n    h: 'Ã©Ã©n uur',\n    hh: '%d uur',\n    d: 'Ã©Ã©n dag',\n    dd: '%d dagen',\n    M: 'Ã©Ã©n maand',\n    MM: '%d maanden',\n    y: 'Ã©Ã©n jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getMonth } from '../utils/date-getters';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\nlet monthsNominative = 'styczeÅ_luty_marzec_kwiecieÅ_maj_czerwiec_lipiec_sierpieÅ_wrzesieÅ_paÅºdziernik_listopad_grudzieÅ'.split('_');\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_wrzeÅnia_paÅºdziernika_listopada_grudnia'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string): string {\n  let result = num + ' ';\n  switch (key) {\n    case 'ss':\n      return result + (plural(num) ? 'sekundy' : 'sekund');\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutÄ';\n    case 'mm':\n      return result + (plural(num) ? 'minuty' : 'minut');\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinÄ';\n    case 'hh':\n      return result + (plural(num) ? 'godziny' : 'godzin');\n    case 'MM':\n      return result + (plural(num) ? 'miesiÄce' : 'miesiÄcy');\n    case 'yy':\n      return result + (plural(num) ? 'lata' : 'lat');\n  }\n}\n\nexport const plLocale: LocaleData = {\n  abbr: 'pl',\n  months(date: Date, format: string, isUTC?: boolean): string | string[] {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paÅº_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziaÅek_wtorek_Åroda_czwartek_piÄtek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_År_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_År_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[DziÅ o] LT',\n    nextDay: '[Jutro o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielÄ o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W ÅrodÄ o] LT';\n\n        case 6:\n          return '[W sobotÄ o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n    lastDay: '[Wczoraj o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszÅÄ niedzielÄ o] LT';\n        case 3:\n          return '[W zeszÅÄ ÅrodÄ o] LT';\n        case 6:\n          return '[W zeszÅÄ sobotÄ o] LT';\n        default:\n          return '[W zeszÅy] dddd [o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: '1 dzieÅ',\n    dd: '%d dni',\n    M: 'miesiÄc',\n    MM: translate,\n    y: 'rok',\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\nexport const ptBrLocale: LocaleData = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_MarÃ§o_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_TerÃ§a-feira_Quarta-feira_Quinta-feira_Sexta-feira_SÃ¡bado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_SÃ¡b'.split('_'),\n  weekdaysMin: 'Do_2Âª_3Âª_4Âª_5Âª_6Âª_SÃ¡'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [Ã s] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [Ã s] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje Ã s] LT',\n    nextDay: '[AmanhÃ£ Ã s] LT',\n    nextWeek: 'dddd [Ã s] LT',\n    lastDay: '[Ontem Ã s] LT',\n    lastWeek(date: Date) {\n      return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n        '[Ãltimo] dddd [Ã s] LT' : // Saturday + Sunday\n        '[Ãltima] dddd [Ã s] LT'; // Monday - Friday\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrÃ¡s',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mÃªs',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}Âº/,\n  ordinal: '%dÂº'\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getWeek } from '../units/week';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion ElensÃºle : https://github.com/Oire\n//! author : ÐÐ¾ÑÐµÐ½Ð±ÐµÑÐ³ ÐÐ°ÑÐº : https://github.com/socketpair\n\nfunction plural(word: string, num: number): string {\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key: string]: string} = {\n    ss: withoutSuffix ? 'ÑÐµÐºÑÐ½Ð´Ð°_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´' : 'ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´Ñ_ÑÐµÐºÑÐ½Ð´',\n    mm: withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ' : 'Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑÑ_Ð¼Ð¸Ð½ÑÑ',\n    hh: 'ÑÐ°Ñ_ÑÐ°ÑÐ°_ÑÐ°ÑÐ¾Ð²',\n    dd: 'Ð´ÐµÐ½Ñ_Ð´Ð½Ñ_Ð´Ð½ÐµÐ¹',\n    MM: 'Ð¼ÐµÑÑÑ_Ð¼ÐµÑÑÑÐ°_Ð¼ÐµÑÑÑÐµÐ²',\n    yy: 'Ð³Ð¾Ð´_Ð³Ð¾Ð´Ð°_Ð»ÐµÑ'\n  };\n  if (key === 'm') {\n    return withoutSuffix ? 'Ð¼Ð¸Ð½ÑÑÐ°' : 'Ð¼Ð¸Ð½ÑÑÑ';\n  }\n  return num + ' ' + plural(format[key], +num);\n}\n\nlet monthsParse = [/^ÑÐ½Ð²/i, /^ÑÐµÐ²/i, /^Ð¼Ð°Ñ/i, /^Ð°Ð¿Ñ/i, /^Ð¼Ð°[Ð¹Ñ]/i, /^Ð¸ÑÐ½/i, /^Ð¸ÑÐ»/i, /^Ð°Ð²Ð³/i, /^ÑÐµÐ½/i, /^Ð¾ÐºÑ/i, /^Ð½Ð¾Ñ/i, /^Ð´ÐµÐº/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : Â§ 103\n// Ð¡Ð¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ð¼ÐµÑÑÑÐµÐ²: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nexport const ruLocale: LocaleData = {\n  abbr: 'ru',\n  months: {\n    format: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑÐ°_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑÐ°_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_'),\n    standalone: 'ÑÐ½Ð²Ð°ÑÑ_ÑÐµÐ²ÑÐ°Ð»Ñ_Ð¼Ð°ÑÑ_Ð°Ð¿ÑÐµÐ»Ñ_Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³ÑÑÑ_ÑÐµÐ½ÑÑÐ±ÑÑ_Ð¾ÐºÑÑÐ±ÑÑ_Ð½Ð¾ÑÐ±ÑÑ_Ð´ÐµÐºÐ°Ð±ÑÑ'.split('_')\n  },\n  monthsShort: {\n    // Ð¿Ð¾ CLDR Ð¸Ð¼ÐµÐ½Ð½Ð¾ \"Ð¸ÑÐ».\" Ð¸ \"Ð¸ÑÐ½.\", Ð½Ð¾ ÐºÐ°ÐºÐ¾Ð¹ ÑÐ¼ÑÑÐ» Ð¼ÐµÐ½ÑÑÑ Ð±ÑÐºÐ²Ñ Ð½Ð° ÑÐ¾ÑÐºÑ ?\n    format: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°Ñ._Ð°Ð¿Ñ._Ð¼Ð°Ñ_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_'),\n    standalone: 'ÑÐ½Ð²._ÑÐµÐ²Ñ._Ð¼Ð°ÑÑ_Ð°Ð¿Ñ._Ð¼Ð°Ð¹_Ð¸ÑÐ½Ñ_Ð¸ÑÐ»Ñ_Ð°Ð²Ð³._ÑÐµÐ½Ñ._Ð¾ÐºÑ._Ð½Ð¾ÑÐ±._Ð´ÐµÐº.'.split('_')\n  },\n  weekdays: {\n    standalone: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ð°_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÐ°_ÑÑÐ±Ð±Ð¾ÑÐ°'.split('_'),\n    format: 'Ð²Ð¾ÑÐºÑÐµÑÐµÐ½ÑÐµ_Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑÐ½Ð¸Ðº_Ð²ÑÐ¾ÑÐ½Ð¸Ðº_ÑÑÐµÐ´Ñ_ÑÐµÑÐ²ÐµÑÐ³_Ð¿ÑÑÐ½Ð¸ÑÑ_ÑÑÐ±Ð±Ð¾ÑÑ'.split('_'),\n    isFormat: /\\[ ?[ÐÐ²] ?(?:Ð¿ÑÐ¾ÑÐ»ÑÑ|ÑÐ»ÐµÐ´ÑÑÑÑÑ|ÑÑÑ)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  weekdaysMin: 'Ð²Ñ_Ð¿Ð½_Ð²Ñ_ÑÑ_ÑÑ_Ð¿Ñ_ÑÐ±'.split('_'),\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸, Ð¿Ð¾ ÑÑÐ¸ Ð±ÑÐºÐ²Ñ, Ð´Ð»Ñ Ð½ÐµÐºÐ¾ÑÐ¾ÑÑÑ, Ð¿Ð¾ 4 Ð±ÑÐºÐ²Ñ, ÑÐ¾ÐºÑÐ°ÑÐµÐ½Ð¸Ñ Ñ ÑÐ¾ÑÐºÐ¾Ð¹ Ð¸ Ð±ÐµÐ· ÑÐ¾ÑÐºÐ¸\n  monthsRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // ÐºÐ¾Ð¿Ð¸Ñ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ³Ð¾\n  monthsShortRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐ½Ð²\\.?|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|ÑÐµÐ²Ñ?\\.?|Ð¼Ð°ÑÑÐ°?|Ð¼Ð°Ñ\\.?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð°Ð¿Ñ\\.?|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ½\\.?|Ð¸ÑÐ»[ÑÑ]|Ð¸ÑÐ»\\.?|Ð°Ð²Ð³ÑÑÑÐ°?|Ð°Ð²Ð³\\.?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|ÑÐµÐ½Ñ?\\.?|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑ\\.?|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±?\\.?|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ]|Ð´ÐµÐº\\.?)/i,\n\n  // Ð¿Ð¾Ð»Ð½ÑÐµ Ð½Ð°Ð·Ð²Ð°Ð½Ð¸Ñ Ñ Ð¿Ð°Ð´ÐµÐ¶Ð°Ð¼Ð¸\n  monthsStrictRegex: /^(ÑÐ½Ð²Ð°Ñ[ÑÑ]|ÑÐµÐ²ÑÐ°Ð»[ÑÑ]|Ð¼Ð°ÑÑÐ°?|Ð°Ð¿ÑÐµÐ»[ÑÑ]|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ]|Ð¸ÑÐ»[ÑÑ]|Ð°Ð²Ð³ÑÑÑÐ°?|ÑÐµÐ½ÑÑÐ±Ñ[ÑÑ]|Ð¾ÐºÑÑÐ±Ñ[ÑÑ]|Ð½Ð¾ÑÐ±Ñ[ÑÑ]|Ð´ÐµÐºÐ°Ð±Ñ[ÑÑ])/i,\n\n  // ÐÑÑÐ°Ð¶ÐµÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÐ²ÑÐµÑ ÑÐ¾Ð»ÑÐºÐ¾ ÑÐ¾ÐºÑÐ°ÑÑÐ½Ð½ÑÐ¼ ÑÐ¾ÑÐ¼Ð°Ð¼\n  monthsShortStrictRegex: /^(ÑÐ½Ð²\\.|ÑÐµÐ²Ñ?\\.|Ð¼Ð°Ñ[Ñ.]|Ð°Ð¿Ñ\\.|Ð¼Ð°[ÑÐ¹]|Ð¸ÑÐ½[ÑÑ.]|Ð¸ÑÐ»[ÑÑ.]|Ð°Ð²Ð³\\.|ÑÐµÐ½Ñ?\\.|Ð¾ÐºÑ\\.|Ð½Ð¾ÑÐ±?\\.|Ð´ÐµÐº\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY Ð³.',\n    LLL: 'D MMMM YYYY Ð³., H:mm',\n    LLLL: 'dddd, D MMMM YYYY Ð³., H:mm'\n  },\n  calendar: {\n    sameDay: '[Ð¡ÐµÐ³Ð¾Ð´Ð½Ñ Ð²] LT',\n    nextDay: '[ÐÐ°Ð²ÑÑÐ° Ð²] LT',\n    lastDay: '[ÐÑÐµÑÐ° Ð²] LT',\n    nextWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐµÐµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÐ¸Ð¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð ÑÐ»ÐµÐ´ÑÑÑÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    lastWeek(date: Date, now: Date) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»Ð¾Ðµ] dddd [Ð²] LT';\n          case 1:\n          case 2:\n          case 4:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÐ¹] dddd [Ð²] LT';\n          case 3:\n          case 5:\n          case 6:\n            return '[Ð Ð¿ÑÐ¾ÑÐ»ÑÑ] dddd [Ð²] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[ÐÐ¾] dddd [Ð²] LT';\n        } else {\n          return '[Ð] dddd [Ð²] LT';\n        }\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'ÑÐµÑÐµÐ· %s',\n    past: '%s Ð½Ð°Ð·Ð°Ð´',\n    s: 'Ð½ÐµÑÐºÐ¾Ð»ÑÐºÐ¾ ÑÐµÐºÑÐ½Ð´',\n    ss: relativeTimeWithPlural,\n    m: relativeTimeWithPlural,\n    mm: relativeTimeWithPlural,\n    h: 'ÑÐ°Ñ',\n    hh: relativeTimeWithPlural,\n    d: 'Ð´ÐµÐ½Ñ',\n    dd: relativeTimeWithPlural,\n    M: 'Ð¼ÐµÑÑÑ',\n    MM: relativeTimeWithPlural,\n    y: 'Ð³Ð¾Ð´',\n    yy: relativeTimeWithPlural\n  },\n  meridiemParse: /Ð½Ð¾ÑÐ¸|ÑÑÑÐ°|Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°/i,\n  isPM(input) {\n    return /^(Ð´Ð½Ñ|Ð²ÐµÑÐµÑÐ°)$/.test(input);\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'Ð½Ð¾ÑÐ¸';\n    } else if (hour < 12) {\n      return 'ÑÑÑÐ°';\n    } else if (hour < 17) {\n      return 'Ð´Ð½Ñ';\n    } else {\n      return 'Ð²ÐµÑÐµÑÐ°';\n    }\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(Ð¹|Ð³Ð¾|Ñ)/,\n  ordinal(_num: number, period: string): string {\n    const num = Number(_num);\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-Ð¹';\n      case 'D':\n        return num + '-Ð³Ð¾';\n      case 'w':\n      case 'W':\n        return num + '-Ñ';\n      default:\n        return num.toString(10);\n    }\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\nimport { LocaleData } from '../locale/locale.class';\n\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\nfunction relativeTimeWithPlural(num: number, withoutSuffix: boolean, key: string): string {\n  let format: {[key:string]: string} = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n\n  let separator = ' ';\n  if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n    separator = ' de ';\n  }\n  return num + separator + format[key];\n}\n\n\nexport const roLocale: LocaleData = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminicÄ_luni_marÈi_miercuri_joi_vineri_sÃ¢mbÄtÄ'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_SÃ¢m'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_SÃ¢'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mÃ¢ine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s Ã®n urmÄ',\n    s: 'cÃ¢teva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o orÄ',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lunÄ',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef PaÅ¾in : https://github.com/atiris\n\nconst months = 'januÃ¡r_februÃ¡r_marec_aprÃ­l_mÃ¡j_jÃºn_jÃºl_august_september_oktÃ³ber_november_december'.split('_');\nconst monthsShort = 'jan_feb_mar_apr_mÃ¡j_jÃºn_jÃºl_aug_sep_okt_nov_dec'.split('_');\n\nfunction plural(num: number): boolean {\n  return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n\nfunction translate(num: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':// a few seconds / in a few seconds / a few seconds ago\n      return (withoutSuffix || isFuture) ? 'pÃ¡r sekÃºnd' : 'pÃ¡r sekundami';\n    case 'ss':// 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekÃºnd');\n      }\n      else {\n        return result + 'sekundami';\n      }\n    // break;\n    case 'm':// a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minÃºta' : (isFuture ? 'minÃºtu' : 'minÃºtou');\n    case 'mm':// 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minÃºty' : 'minÃºt');\n      }\n      else {\n        return result + 'minÃºtami';\n      }\n    // break;\n    case 'h':// an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n    case 'hh':// 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodÃ­n');\n      }\n      else {\n        return result + 'hodinami';\n      }\n    // break;\n    case 'd':// a day / in a day / a day ago\n      return (withoutSuffix || isFuture) ? 'deÅ' : 'dÅom';\n    case 'dd':// 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dni' : 'dnÃ­');\n      }\n      else {\n        return result + 'dÅami';\n      }\n    // break;\n    case 'M':// a month / in a month / a month ago\n      return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n    case 'MM':// 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'mesiace' : 'mesiacov');\n      }\n      else {\n        return result + 'mesiacmi';\n      }\n    // break;\n    case 'y':// a year / in a year / a year ago\n      return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n    case 'yy':// 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'rokov');\n      }\n      else {\n        return result + 'rokmi';\n      }\n    // break;\n  }\n}\n\nexport const skLocale: LocaleData = {\n  abbr: 'sk',\n  months,\n  monthsShort,\n  weekdays: 'nedeÄ¾a_pondelok_utorok_streda_Å¡tvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_Å¡t_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n    nextWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n        case 3:\n          return '[v stredu o] LT';\n        case 4:\n          return '[vo Å¡tvrtok o] LT';\n        case 5:\n          return '[v piatok o] LT';\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n    lastDay: '[vÄera o] LT',\n    lastWeek(date: Date): string {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulÃº nedeÄ¾u o] LT';\n        case 1:\n        case 2:\n          return '[minulÃ½] dddd [o] LT';\n        case 3:\n          return '[minulÃº stredu o] LT';\n        case 4:\n        case 5:\n          return '[minulÃ½] dddd [o] LT';\n        case 6:\n          return '[minulÃº sobotu o] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n\nimport { LocaleData } from '../locale/locale.class';\nimport { getDayOfWeek } from '../units/day-of-week';\n\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\nfunction processRelativeTime(number: number, withoutSuffix: boolean, key: string, isFuture: boolean): string {\n  var result = number + ' ';\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n      return result;\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n      return result;\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n      return result;\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n      return result;\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n      return result;\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n      return result;\n  }\n}\n\nexport const slLocale: LocaleData = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_Äetrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._Äet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_Äe_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    nextWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n        case 3:\n          return '[v] [sredo] [ob] LT';\n        case 6:\n          return '[v] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n    lastDay: '[vÄeraj ob] LT',\n    lastWeek(date: Date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejÅ¡njo] [nedeljo] [ob] LT';\n        case 3:\n          return '[prejÅ¡njo] [sredo] [ob] LT';\n        case 6:\n          return '[prejÅ¡njo] [soboto] [ob] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejÅ¡nji] dddd [ob] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'Äez %s',\n    past: 'pred %s',\n    s: processRelativeTime,\n    ss: processRelativeTime,\n    m: processRelativeTime,\n    mm: processRelativeTime,\n    h: processRelativeTime,\n    hh: processRelativeTime,\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\nexport const svLocale: LocaleData = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'sÃ¶ndag_mÃ¥ndag_tisdag_onsdag_torsdag_fredag_lÃ¶rdag'.split('_'),\n  weekdaysShort: 'sÃ¶n_mÃ¥n_tis_ons_tor_fre_lÃ¶r'.split('_'),\n  weekdaysMin: 'sÃ¶_mÃ¥_ti_on_to_fr_lÃ¶'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[IgÃ¥r] LT',\n    nextWeek: '[PÃ¥] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'fÃ¶r %s sedan',\n    s: 'nÃ¥gra sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en mÃ¥nad',\n    MM: '%d mÃ¥nader',\n    y: 'ett Ã¥r',\n    yy: '%d Ã¥r'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    let b = num % 10,\n      output = (~~(num % 100 / 10) === 1) ? 'e' :\n        (b === 1) ? 'a' :\n          (b === 2) ? 'a' :\n            (b === 3) ? 'e' : 'e';\n    return num + output;\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\nimport { LocaleData } from '../locale/locale.class';\n\nexport const thLocale: LocaleData = {\n  abbr: 'th',\n  months: 'à¸¡à¸à¸£à¸²à¸à¸¡_à¸à¸¸à¸¡à¸ à¸²à¸à¸±à¸à¸à¹_à¸¡à¸µà¸à¸²à¸à¸¡_à¹à¸¡à¸©à¸²à¸¢à¸_à¸à¸¤à¸©à¸ à¸²à¸à¸¡_à¸¡à¸´à¸à¸¸à¸à¸²à¸¢à¸_à¸à¸£à¸à¸à¸²à¸à¸¡_à¸ªà¸´à¸à¸«à¸²à¸à¸¡_à¸à¸±à¸à¸¢à¸²à¸¢à¸_à¸à¸¸à¸¥à¸²à¸à¸¡_à¸à¸¤à¸¨à¸à¸´à¸à¸²à¸¢à¸_à¸à¸±à¸à¸§à¸²à¸à¸¡'.split('_'),\n  monthsShort: 'à¸¡.à¸._à¸.à¸._à¸¡à¸µ.à¸._à¹à¸¡.à¸¢._à¸.à¸._à¸¡à¸´.à¸¢._à¸.à¸._à¸ª.à¸._à¸.à¸¢._à¸.à¸._à¸.à¸¢._à¸.à¸.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ªà¸à¸à¸µ_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'),\n  weekdaysShort: 'à¸­à¸²à¸à¸´à¸à¸¢à¹_à¸à¸±à¸à¸à¸£à¹_à¸­à¸±à¸à¸à¸²à¸£_à¸à¸¸à¸_à¸à¸¤à¸«à¸±à¸ª_à¸¨à¸¸à¸à¸£à¹_à¹à¸ªà¸²à¸£à¹'.split('_'), // yes, three characters difference\n  weekdaysMin: 'à¸­à¸²._à¸._à¸­._à¸._à¸à¸¤._à¸¨._à¸ª.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY à¹à¸§à¸¥à¸² H:mm',\n    LLLL: 'à¸§à¸±à¸ddddà¸à¸µà¹ D MMMM YYYY à¹à¸§à¸¥à¸² H:mm'\n  },\n  meridiemParse: /à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸|à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸/,\n  isPM(input) {\n    return input === 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n  },\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'à¸à¹à¸­à¸à¹à¸à¸µà¹à¸¢à¸';\n    } else {\n      return 'à¸«à¸¥à¸±à¸à¹à¸à¸µà¹à¸¢à¸';\n    }\n  },\n  calendar: {\n    sameDay: '[à¸§à¸±à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextDay: '[à¸à¸£à¸¸à¹à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    nextWeek: 'dddd[à¸«à¸à¹à¸² à¹à¸§à¸¥à¸²] LT',\n    lastDay: '[à¹à¸¡à¸·à¹à¸­à¸§à¸²à¸à¸à¸µà¹ à¹à¸§à¸¥à¸²] LT',\n    lastWeek: '[à¸§à¸±à¸]dddd[à¸à¸µà¹à¹à¸¥à¹à¸§ à¹à¸§à¸¥à¸²] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'à¸­à¸µà¸ %s',\n    past: '%sà¸à¸µà¹à¹à¸¥à¹à¸§',\n    s: 'à¹à¸¡à¹à¸à¸µà¹à¸§à¸´à¸à¸²à¸à¸µ',\n    ss: '%d à¸§à¸´à¸à¸²à¸à¸µ',\n    m: '1 à¸à¸²à¸à¸µ',\n    mm: '%d à¸à¸²à¸à¸µ',\n    h: '1 à¸à¸±à¹à¸§à¹à¸¡à¸',\n    hh: '%d à¸à¸±à¹à¸§à¹à¸¡à¸',\n    d: '1 à¸§à¸±à¸',\n    dd: '%d à¸§à¸±à¸',\n    M: '1 à¹à¸à¸·à¸­à¸',\n    MM: '%d à¹à¸à¸·à¸­à¸',\n    y: '1 à¸à¸µ',\n    yy: '%d à¸à¸µ'\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak YiÄit Kaya: https://github.com/BYK\n\nlet suffixes: { [key: string]: string } = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'Ã¼ncÃ¼',\n  4: '\\'Ã¼ncÃ¼',\n  100: '\\'Ã¼ncÃ¼',\n  6: '\\'ncÄ±',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'Ä±ncÄ±',\n  90: '\\'Ä±ncÄ±'\n};\n\nexport const trLocale: LocaleData = {\n  abbr: 'tr',\n  months: 'Ocak_Åubat_Mart_Nisan_MayÄ±s_Haziran_Temmuz_AÄustos_EylÃ¼l_Ekim_KasÄ±m_AralÄ±k'.split('_'),\n  monthsShort: 'Oca_Åub_Mar_Nis_May_Haz_Tem_AÄu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_SalÄ±_ÃarÅamba_PerÅembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Ãar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ãa_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugÃ¼n saat] LT',\n    nextDay: '[yarÄ±n saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dÃ¼n] LT',\n    lastWeek: '[geÃ§en] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s Ã¶nce',\n    s: 'birkaÃ§ saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gÃ¼n',\n    dd: '%d gÃ¼n',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yÄ±l',\n    yy: '%d yÄ±l'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|Ã¼ncÃ¼|ncÄ±|uncu|Ä±ncÄ±)/,\n  ordinal(_num: number): string {\n    const num = Number(_num);\n    if (num === 0) {  // special case for zero\n      return num + '\\'Ä±ncÄ±';\n    }\n    let a = num % 10,\n      b = num % 100 - a,\n      c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n  week: {\n    dow: 1, // Monday is the first day of the week.\n    doy: 7  // The week that contains Jan 1st is the first week of the year.\n  }\n};\n","// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n\nimport { LocaleData } from '../locale/locale.class';\n\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\nexport const zhCnLocale: LocaleData = {\n  abbr: 'zh-cn',\n  months: 'ä¸æ_äºæ_ä¸æ_åæ_äºæ_å­æ_ä¸æ_å«æ_ä¹æ_åæ_åä¸æ_åäºæ'.split('_'),\n  monthsShort: '1æ_2æ_3æ_4æ_5æ_6æ_7æ_8æ_9æ_10æ_11æ_12æ'.split('_'),\n  weekdays: 'æææ¥_ææä¸_ææäº_ææä¸_ææå_ææäº_ææå­'.split('_'),\n  weekdaysShort: 'å¨æ¥_å¨ä¸_å¨äº_å¨ä¸_å¨å_å¨äº_å¨å­'.split('_'),\n  weekdaysMin: 'æ¥_ä¸_äº_ä¸_å_äº_å­'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYYå¹´MæDæ¥',\n    LLL: 'YYYYå¹´MæDæ¥Ahç¹mmå',\n    LLLL: 'YYYYå¹´MæDæ¥ddddAhç¹mmå',\n    l: 'YYYY/M/D',\n    ll: 'YYYYå¹´MæDæ¥',\n    lll: 'YYYYå¹´MæDæ¥ HH:mm',\n    llll: 'YYYYå¹´MæDæ¥dddd HH:mm'\n  },\n  meridiemParse: /åæ¨|æ©ä¸|ä¸å|ä¸­å|ä¸å|æä¸/,\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n    if (meridiem === 'åæ¨' || meridiem === 'æ©ä¸' ||\n      meridiem === 'ä¸å') {\n      return hour;\n    } else if (meridiem === 'ä¸å' || meridiem === 'æä¸') {\n      return hour + 12;\n    } else {\n      // 'ä¸­å'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n  meridiem(hour, minute, isLower) {\n    let hm = hour * 100 + minute;\n    if (hm < 600) {\n      return 'åæ¨';\n    } else if (hm < 900) {\n      return 'æ©ä¸';\n    } else if (hm < 1130) {\n      return 'ä¸å';\n    } else if (hm < 1230) {\n      return 'ä¸­å';\n    } else if (hm < 1800) {\n      return 'ä¸å';\n    } else {\n      return 'æä¸';\n    }\n  },\n  calendar: {\n    sameDay: '[ä»å¤©]LT',\n    nextDay: '[æå¤©]LT',\n    nextWeek: '[ä¸]ddddLT',\n    lastDay: '[æ¨å¤©]LT',\n    lastWeek: '[ä¸]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(æ¥|æ|å¨)/,\n  ordinal(_num: number, period) {\n    const num = Number(_num);\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + 'æ¥';\n      case 'M':\n        return num + 'æ';\n      case 'w':\n      case 'W':\n        return num + 'å¨';\n      default:\n        return num.toString();\n    }\n  },\n  relativeTime: {\n    future: '%så',\n    past: '%så',\n    s: 'å ç§',\n    ss: '%d ç§',\n    m: '1 åé',\n    mm: '%d åé',\n    h: '1 å°æ¶',\n    hh: '%d å°æ¶',\n    d: '1 å¤©',\n    dd: '%d å¤©',\n    M: '1 ä¸ªæ',\n    MM: '%d ä¸ªæ',\n    y: '1 å¹´',\n    yy: '%d å¹´'\n  },\n  week: {\n    // GB/T 7408-1994ãæ°æ®ååäº¤æ¢æ ¼å¼Â·ä¿¡æ¯äº¤æ¢Â·æ¥æåæ¶é´è¡¨ç¤ºæ³ãä¸ISO 8601:1988ç­æ\n    dow: 1, // Monday is the first day of the week.\n    doy: 4  // The week that contains Jan 4th is the first week of the year.\n  }\n};\n"]}