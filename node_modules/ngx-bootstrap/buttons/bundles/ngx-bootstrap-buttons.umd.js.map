{"version":3,"file":"ngx-bootstrap-buttons.umd.js.map","sources":["ng://ngx-bootstrap/buttons/button-checkbox.directive.ts","ng://ngx-bootstrap/buttons/button-radio-group.directive.ts","ng://ngx-bootstrap/buttons/button-radio.directive.ts","ng://ngx-bootstrap/buttons/buttons.module.ts"],"sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\n\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue: any = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse: any = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: any;\n  protected isDisabled: boolean;\n\n  protected onChange: any = Function.prototype;\n  protected onTouched: any = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): any {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","// tslint:disable:no-use-before-declare\nimport { ChangeDetectorRef, Directive, ElementRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n\n  get value(): any {\n    return this._value;\n  }\n  set value(value: any) {\n    this._value = value;\n  }\n\n  private _value: any;\n\n  constructor(private el: ElementRef, private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: any): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n","// tslint:disable:no-use-before-declare\nimport {\n  ChangeDetectorRef, Directive, ElementRef, forwardRef, HostBinding, HostListener, Input, OnInit,\n  Optional, Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange: any = Function.prototype;\n  onTouched: any = Function.prototype;\n  private _value: any;\n  private _disabled: boolean;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: any;\n  /** If `true` â radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input() get value(): any {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: any) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` â radio button is disabled */\n  @Input() get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = disabled;\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    @Optional() private group: ButtonRadioGroupDirective,\n    private renderer: Renderer2\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    if (this.el.nativeElement.attributes.disabled || !this.uncheckable && this.btnRadio === this.value) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  onBlur(): void {\n    this.onTouched();\n  }\n\n  _onChange(value: any): void {\n    if (this.group) {\n      this.group.onTouched();\n      this.group.onChange(value);\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: any): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","Directive","Input","HostBinding","HostListener","ElementRef","ChangeDetectorRef","RADIO_CONTROL_VALUE_ACCESSOR","Optional","Renderer2","NgModule"],"mappings":"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"}
