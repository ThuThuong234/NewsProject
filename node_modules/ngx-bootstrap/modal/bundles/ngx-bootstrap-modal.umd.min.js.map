{"version":3,"sources":["ng://ngx-bootstrap/modal/bs-modal-ref.service.ts","ng://ngx-bootstrap/modal/modal-backdrop.options.ts","ng://ngx-bootstrap/modal/modal-options.class.ts","ng://ngx-bootstrap/modal/modal-container.component.ts","ng://ngx-bootstrap/modal/modal-backdrop.component.ts","ng://ngx-bootstrap/modal/modal.directive.ts","ng://ngx-bootstrap/modal/bs-modal.service.ts","ng://ngx-bootstrap/modal/modal.module.ts"],"names":["BsModalRef","Function","Injectable","ModalBackdropOptions","options","Object","assign","this","ModalOptions","modalConfigDefaults","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","CLASS_NAME","SCROLLBAR_MEASURER","BACKDROP","OPEN","FADE","IN","SHOW","TRANSITION_DURATIONS","DISMISS_REASONS","ModalContainerComponent","_element","_renderer","config","prototype","ngOnInit","_this","isAnimated","addClass","nativeElement","setStyle","setTimeout","isShown","isBs3","document","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","onClick","event","target","setDismissReason","hide","onEsc","keyCode","preventDefault","level","ngOnDestroy","isModalHiding","removeClass","Component","args","selector","template","host","role","tabindex","[attr.aria-modal]","ElementRef","Renderer2","HostListener","ModalBackdropComponent","element","renderer","defineProperty","_isAnimated","value","_isShown","Utils","reflow","ModalDirective","_viewContainerRef","clf","EventEmitter","_backdrop","createLoader","_config","conf","getConfig","dismissReason","hideModal","dispose","toggle","onShow","emit","clearTimeout","timerHideModal","timerRmBackDrop","classList","contains","isNested","showBackdrop","showElement","onHide","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","setAttribute","setProperty","transitionComplete","onShown","resetScrollbar","resetAdjustments","focusOtherModal","onHidden","callback","instance","callbackRemove","removeBackdrop","attach","to","_componentRef","parentElement","otherOpenedModals","querySelectorAll","length","isBodyOverflowing","clientWidth","window","innerWidth","scrollbarWidth","getScrollbarWidth","originalBodyPadding","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","scrollDiv","createElement","offsetWidth","removeChild","Directive","exportAs","ViewContainerRef","ComponentLoaderFactory","Input","Output","BsModalService","rendererFactory","_backdropLoader","createRenderer","content","modalsCount","_createLoaders","_showBackdrop","lastDismissReason","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","duration","modalLoader","loaders","bsModalRef","modalContainerRef","provide","useValue","getInnerComponent","reason","loader","copyEvent","onBeforeShow","onBeforeHide","push","splice","forEach","i","from","subscribe","RendererFactory2","ModalModule","forRoot","ngModule","providers","PositioningService","NgModule","declarations","exports","entryComponents"],"mappings":"khBAAA,IAAAA,EAAA,kCAYqBC,oCAVpBC,EAAAA,eAFD,GCAAC,EAGE,SAAAA,EAAYC,iBAFF,EAGRC,OAAOC,OAAOC,KAAMH,ICJxBI,EAAA,oDAECN,EAAAA,eAFD,GAsCaO,EAAoC,CAC/CC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,MAAM,EACNC,qBAAqB,EACrBC,QAAO,GACPC,UAAU,EACVC,aAAc,IAGHC,EAAkB,CAC7BC,mBAAoB,0BACpBC,SAAU,iBACVC,KAAM,aACNC,KAAM,OACNC,GAAI,KACJC,KAAM,QAUKC,EACJ,IADIA,EAED,IAGCC,EACD,iBADCA,EAEN,MCxEPC,EAAA,WAyCE,SAAAA,EAAYvB,EACUwB,EACFC,GADEtB,KAAAqB,SAAAA,EACFrB,KAAAsB,UAAAA,gBARV,sBAIc,EAKtBtB,KAAKuB,OAASzB,OAAOC,OAAO,GAAIF,UAGlCuB,EAAAI,UAAAC,SAAA,WAAA,IAAAC,EAAA1B,KACMA,KAAK2B,YACP3B,KAAKsB,UAAUM,SACb5B,KAAKqB,SAASQ,cACdlB,EAAWI,MAGff,KAAKsB,UAAUQ,SACb9B,KAAKqB,SAASQ,cACd,UACA,SAEFE,WAAW,WACTL,EAAKM,SAAU,EACfN,EAAKJ,UAAUM,SACbF,EAAKL,SAASQ,cACdI,EAAAA,QAAUtB,EAAWK,GAAKL,EAAWM,OAEtCjB,KAAK2B,WAAaT,EAAgC,GACjDgB,UAAYA,SAASC,OACsB,IAAzCnC,KAAKoC,eAAeC,mBACtBrC,KAAKoC,eAAeE,iBACpBtC,KAAKoC,eAAeG,gBAEtBvC,KAAKsB,UAAUM,SAASM,SAASC,KAAMxB,EAAWG,OAEhDd,KAAKqB,SAASQ,eAChB7B,KAAKqB,SAASQ,cAAcxB,SAKhCe,EAAAI,UAAAgB,iBAAQC,GAEJzC,KAAKuB,OAAOhB,qBACa,WAAzBP,KAAKuB,OAAOpB,UACZsC,EAAMC,SAAW1C,KAAKqB,SAASQ,gBAIjC7B,KAAKoC,eAAeO,iBAAiBxB,GACrCnB,KAAK4C,SAIPxB,EAAAI,UAAAqB,eAAMJ,GACCzC,KAAKgC,UAIY,KAAlBS,EAAMK,SACRL,EAAMM,iBAIN/C,KAAKuB,OAAOnB,UACZJ,KAAKgD,QAAUhD,KAAKoC,eAAeC,mBAEnCrC,KAAKoC,eAAeO,iBAAiBxB,GACrCnB,KAAK4C,UAITxB,EAAAI,UAAAyB,YAAA,WACMjD,KAAKgC,SACPhC,KAAK4C,QAITxB,EAAAI,UAAAoB,KAAA,WAAA,IAAAlB,EAAA1B,MACMA,KAAKkD,eAAkBlD,KAAKgC,UAGhChC,KAAKkD,eAAgB,EACrBlD,KAAKsB,UAAU6B,YACbnD,KAAKqB,SAASQ,cACdI,EAAAA,QAAUtB,EAAWK,GAAKL,EAAWM,MAEvCc,WAAW,WACTL,EAAKM,SAAU,EAEbE,UACAA,SAASC,MACgC,IAAzCT,EAAKU,eAAeC,kBAEpBX,EAAKJ,UAAU6B,YAAYjB,SAASC,KAAMxB,EAAWG,MAEvDY,EAAKU,eAAeQ,KAAKlB,EAAKsB,OAC9BtB,EAAKwB,eAAgB,GACpBlD,KAAK2B,WAAaT,EAA6B,yBAvHrDkC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAU,4MAOVC,KAAM,CACJhD,QAAO,QACPiD,KAAM,SACNC,SAAU,KACVC,oBAAqB,qDAnBvB1D,SATA2D,EAAAA,kBAIAC,EAAAA,8CAwECC,EAAAA,aAAYT,KAAA,CAAC,QAAS,CAAC,0BAavBS,EAAAA,aAAYT,KAAA,CAAC,qBAAsB,CAAC,gBA3FvC,gBC4DE,SAAAU,EAAYC,EAAqBC,kBAFZ,EAGnBjE,KAAKgE,QAAUA,EACfhE,KAAKiE,SAAWA,SAjDlBnE,OAAAoE,eAAIH,EAAAvC,UAAA,aAAU,KAAd,WACE,OAAOxB,KAAKmE,iBAGd,SAAeC,GACbpE,KAAKmE,YAAcC,mCAIrBtE,OAAAoE,eAAIH,EAAAvC,UAAA,UAAO,KAAX,WACE,OAAOxB,KAAKqE,cAGd,SAAYD,IACVpE,KAAKqE,SAAWD,GAEdpE,KAAKiE,SAASrC,SACZ5B,KAAKgE,QAAQnC,cACb,GAAGlB,EAAWK,IAGhBhB,KAAKiE,SAASd,YACZnD,KAAKgE,QAAQnC,cACb,GAAGlB,EAAWK,IAGbiB,EAAAA,UACCmC,EACFpE,KAAKiE,SAASrC,SACZ5B,KAAKgE,QAAQnC,cACb,GAAGlB,EAAWM,MAGhBjB,KAAKiE,SAASd,YACZnD,KAAKgE,QAAQnC,cACb,GAAGlB,EAAWM,wCAiBtB8C,EAAAvC,UAAAC,SAAA,WACMzB,KAAK2B,aACP3B,KAAKiE,SAASrC,SACZ5B,KAAKgE,QAAQnC,cACb,GAAGlB,EAAWI,MAEhBuD,EAAAA,MAAMC,OAAOvE,KAAKgE,QAAQnC,gBAE5B7B,KAAKgC,SAAU,uBAlElBoB,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,oBACVC,SAAU,IACVC,KAAM,CAAEhD,QAAOG,EAAWE,uDAVR+C,EAAAA,kBAAoBC,EAAAA,+BCiFtC,SAAAW,EAAoBnD,EACRoD,EACQnD,EACRoD,GAHQ1E,KAAAqB,SAAAA,EAEArB,KAAAsB,UAAAA,cA7CmB,IAAIqD,EAAAA,0BAKH,IAAIA,EAAAA,yBAKL,IAAIA,EAAAA,2BAKF,IAAIA,EAAAA,4BAaxB,0BAES,2BACE,sBACL,sBAEK,uBACC,iBAMd,EAMjB3E,KAAK4E,UAAYF,EAAIG,aACnBxD,EACAoD,EACAnD,gCA5DAkD,EAAAhD,UAAA,SAAM,KAIV,WACE,OAAOxB,KAAK8E,sBALHC,GACT/E,KAAK8E,QAAU9E,KAAKgF,UAAUD,oCAgChCjF,OAAAoE,eAAIM,EAAAhD,UAAA,UAAO,KAAX,WACE,OAAOxB,KAAKqE,0CA+BdG,EAAAhD,UAAAgB,iBAAQC,GAEJzC,KAAKuB,OAAOhB,qBACa,WAAzBP,KAAKuB,OAAOpB,UACZsC,EAAMC,SAAW1C,KAAKqB,SAASQ,gBAIjC7B,KAAKiF,cAAgB9D,EACrBnB,KAAK4C,KAAKH,KAKZ+B,EAAAhD,UAAAqB,eAAMJ,GACCzC,KAAKqE,WAIY,KAAlB5B,EAAMK,SACRL,EAAMM,iBAGJ/C,KAAKuB,OAAOnB,WACdJ,KAAKiF,cAAgB9D,EACrBnB,KAAK4C,UAIT4B,EAAAhD,UAAAyB,YAAA,WACEjD,KAAKuB,YAAS,EACVvB,KAAKqE,WACPrE,KAAKqE,UAAW,EAChBrE,KAAKkF,YACLlF,KAAK4E,UAAUO,YAInBX,EAAAhD,UAAAC,SAAA,WAAA,IAAAC,EAAA1B,KACEA,KAAK8E,QAAU9E,KAAK8E,SAAW9E,KAAKgF,YACpCjD,WAAW,WACLL,EAAKoD,QAAQxE,MACfoB,EAAKpB,QAEN,IAMLkE,EAAAhD,UAAA4D,OAAA,WACE,OAAOpF,KAAKqE,SAAWrE,KAAK4C,OAAS5C,KAAKM,QAI5CkE,EAAAhD,UAAAlB,KAAA,WAAA,IAAAoB,EAAA1B,KACEA,KAAKiF,cAAgB,KACrBjF,KAAKqF,OAAOC,KAAKtF,MACbA,KAAKqE,WAGTkB,aAAavF,KAAKwF,gBAClBD,aAAavF,KAAKyF,iBAElBzF,KAAKqE,UAAW,EAEhBrE,KAAKsC,iBACLtC,KAAKuC,eAEDL,EAAAA,UAAYA,EAAAA,SAASC,OACnBD,EAAAA,SAASC,KAAKuD,UAAUC,SAAShF,EAAWG,MAC9Cd,KAAK4F,UAAW,EAEhB5F,KAAKsB,UAAUM,SAASM,EAAAA,SAASC,KAAMxB,EAAWG,OAItDd,KAAK6F,aAAa,WAChBnE,EAAKoE,kBAKTtB,EAAAhD,UAAAoB,KAAA,SAAKH,GAAL,IAAAf,EAAA1B,KACMyC,GACFA,EAAMM,iBAGR/C,KAAK+F,OAAOT,KAAKtF,MAGZA,KAAKqE,WAIVkB,aAAavF,KAAKwF,gBAClBD,aAAavF,KAAKyF,iBAElBzF,KAAKqE,UAAW,EAChBrE,KAAKsB,UAAU6B,YAAYnD,KAAKqB,SAASQ,cAAelB,EAAWK,IAC9DiB,EAAAA,SACHjC,KAAKsB,UAAU6B,YAAYnD,KAAKqB,SAASQ,cAAelB,EAAWM,MAIjEjB,KAAK8E,QAAQrE,SACfT,KAAKwF,eAAiBzD,WACpB,WAAM,OAAAL,EAAKwD,aAvLS,KA2LtBlF,KAAKkF,cAKCV,EAAAhD,UAAAwD,UAAV,SAAoBzD,GAClB,OAAOzB,OAAOC,OAAO,GAAIG,EAAqBqB,IAOtCiD,EAAAhD,UAAAsE,YAAV,WAAA,IAAApE,EAAA1B,KAGKA,KAAKqB,SAASQ,cAAcmE,YAC7BhG,KAAKqB,SAASQ,cAAcmE,WAAWC,WAAaC,KAAKC,cAGrDjE,EAAAA,UAAYA,EAAAA,SAASC,MACvBD,EAAAA,SAASC,KAAKiE,YAAYpG,KAAKqB,SAASQ,eAI5C7B,KAAKsB,UAAU+E,aACbrG,KAAKqB,SAASQ,cACd,cACA,SAEF7B,KAAKsB,UAAU+E,aACbrG,KAAKqB,SAASQ,cACd,aACA,QAEF7B,KAAKsB,UAAUQ,SACb9B,KAAKqB,SAASQ,cACd,UACA,SAEF7B,KAAKsB,UAAUgF,YACbtG,KAAKqB,SAASQ,cACd,YACA,GAGE7B,KAAK8E,QAAQrE,UACf6D,EAAAA,MAAMC,OAAOvE,KAAKqB,SAASQ,eAI7B7B,KAAKsB,UAAUM,SAAS5B,KAAKqB,SAASQ,cAAelB,EAAWK,IAC3DiB,EAAAA,SACHjC,KAAKsB,UAAUM,SAAS5B,KAAKqB,SAASQ,cAAelB,EAAWM,MAGlE,IAAMsF,EAAqB,WACrB7E,EAAKoD,QAAQzE,OACfqB,EAAKL,SAASQ,cAAcxB,QAE9BqB,EAAK8E,QAAQlB,KAAK5D,IAGhB1B,KAAK8E,QAAQrE,SACfsB,WAAWwE,EA3PW,KA6PtBA,KAKM/B,EAAAhD,UAAA0D,UAAV,WAAA,IAAAxD,EAAA1B,KACEA,KAAKsB,UAAU+E,aACbrG,KAAKqB,SAASQ,cACd,cACA,QAEF7B,KAAKsB,UAAUQ,SACb9B,KAAKqB,SAASQ,cACd,UACA,QAEF7B,KAAK6F,aAAa,WACXnE,EAAKkE,WACJ1D,EAAAA,UAAYA,EAAAA,SAASC,MACvBT,EAAKJ,UAAU6B,YAAYjB,EAAAA,SAASC,KAAMxB,EAAWG,MAEvDY,EAAK+E,kBAEP/E,EAAKgF,mBACLhF,EAAKiF,kBACLjF,EAAKkF,SAAStB,KAAK5D,MAOb8C,EAAAhD,UAAAqE,aAAV,SAAuBgB,GAAvB,IAAAnF,EAAA1B,KACE,IACEA,KAAKqE,WACLrE,KAAKuB,OAAOpB,UACVH,KAAKG,UAAaH,KAAKG,SAAS2G,SAAS9E,QAoBtC,IAAKhC,KAAKqE,UAAYrE,KAAKG,SAAU,CAC1CH,KAAKG,SAAS2G,SAAS9E,SAAU,EAEjC,IAAM+E,EAAiB,WACrBrF,EAAKsF,iBACDH,GACFA,KAIA7G,KAAKG,SAAS2G,SAASnF,WACzB3B,KAAKyF,gBAAkB1D,WACrBgF,EAhU2B,KAoU7BA,SAEOF,GACTA,QAtCA,CAQA,GAPA7G,KAAKgH,iBACLhH,KAAK4E,UACFqC,OAAOlD,GACPmD,GAAG,QACH5G,KAAK,CAACqB,WAAY3B,KAAK8E,QAAQrE,WAClCT,KAAKG,SAAWH,KAAK4E,UAAUuC,eAE1BN,EACH,OAGF,IAAK7G,KAAK8E,QAAQrE,SAGhB,YAFAoG,IAKF9E,WAAW8E,EAnToB,OA4UzBrC,EAAAhD,UAAAwF,eAAV,WACEhH,KAAK4E,UAAUhC,QA4BP4B,EAAAhD,UAAAmF,gBAAV,WACE,GAAiD,MAA7C3G,KAAKqB,SAASQ,cAAcuF,cAAhC,CACA,IAAMC,EAAoBrH,KAAKqB,SAASQ,cAAcuF,cAAcE,iBAAiB,gBAChFD,EAAkBE,QAGvBF,EAAkBA,EAAkBE,OAAS,GAAGlH,UAIxCmE,EAAAhD,UAAAkF,iBAAV,WACE1G,KAAKsB,UAAUQ,SACb9B,KAAKqB,SAASQ,cACd,cACA,IAEF7B,KAAKsB,UAAUQ,SACb9B,KAAKqB,SAASQ,cACd,eACA,KAMM2C,EAAAhD,UAAAc,eAAV,WACEtC,KAAKwH,kBAAoBtF,EAAAA,SAASC,KAAKsF,YAAcC,EAAAA,OAAOC,WAC5D3H,KAAK4H,eAAiB5H,KAAK6H,qBAGnBrD,EAAAhD,UAAAe,aAAV,WACOL,EAAAA,WAILlC,KAAK8H,oBAAsBC,SACzBL,EAAAA,OACGM,iBAAiB9F,EAAAA,SAASC,MAC1B8F,iBAAiB,kBAAoB,EACxC,IAGEjI,KAAKwH,oBACPtF,EAAAA,SAASC,KAAK+F,MAAMC,aAAkBnI,KAAK8H,oBAC3C9H,KAAK4H,eAAc,QAIbpD,EAAAhD,UAAAiF,eAAV,WACEvE,EAAAA,SAASC,KAAK+F,MAAMC,aAAenI,KAAK8H,oBAAsB,MAItDtD,EAAAhD,UAAAqG,kBAAV,WACE,IAAMO,EAAYpI,KAAKsB,UAAU+G,cAAc,OAC/CrI,KAAKsB,UAAUM,SAASwG,EAAWzH,EAAWC,oBAC9CZ,KAAKsB,UAAU8E,YAAYlE,EAAAA,SAASC,KAAMiG,GAC1C,IAAMR,EAAiBQ,EAAUE,YAAcF,EAAUX,YAGzD,OAFAzH,KAAKsB,UAAUiH,YAAYrG,EAAAA,SAASC,KAAMiG,GAEnCR,uBAlaVY,EAAAA,UAASnF,KAAA,CAAC,CACTC,SAAU,YACVmF,SAAU,wDAjBe7E,EAAAA,kBACa8E,EAAAA,wBAAX7E,EAAAA,iBAQH8E,EAAAA,0DAYvBC,EAAAA,sBAUAC,EAAAA,wBAKAA,EAAAA,uBAKAA,EAAAA,yBAKAA,EAAAA,wBAwCA/E,EAAAA,aAAYT,KAAA,CAAC,QAAS,CAAC,0BAcvBS,EAAAA,aAAYT,KAAA,CAAC,cAAe,CAAC,mBC1GhCyF,EAAA,WA4CE,SAAAA,EAAYC,EAA2CrE,GAAA1E,KAAA0E,IAAAA,cArBhCxE,cAEK,IAAIyE,EAAAA,0BACH,IAAIA,EAAAA,yBACL,IAAIA,EAAAA,2BACF,IAAIA,EAAAA,qCAEJ,2BACE,sBAEL,mBAIL,yBACM,gBAEkC,GAK5D3E,KAAKgJ,gBAAkBhJ,KAAK0E,IAAIG,aAC9B,KACA,KACA,MAEF7E,KAAKsB,UAAYyH,EAAgBE,eAAe,KAAM,aAIxDH,EAAAtH,UAAAlB,KAAA,SAAK4I,EAA0C3H,GAO7C,OANAvB,KAAKmJ,cACLnJ,KAAKoJ,iBACLpJ,KAAKuB,OAASzB,OAAOC,OAAO,GAAIG,EAAqBqB,GACrDvB,KAAKqJ,gBACLrJ,KAAKsJ,kBAAoB,KAElBtJ,KAAKuJ,WAAWL,IAGzBJ,EAAAtH,UAAAoB,KAAA,SAAKI,GAAL,IAAAtB,EAAA1B,KAC2B,IAArBA,KAAKmJ,cACPnJ,KAAKwJ,gBACLxJ,KAAKyG,kBAEPzG,KAAKmJ,YAAkC,GAApBnJ,KAAKmJ,YAAmBnJ,KAAKmJ,YAAc,EAAI,EAClEpH,WAAW,WACTL,EAAK+H,WAAWzG,GAChBtB,EAAKgI,cAAc1G,IAClBhD,KAAKuB,OAAOd,SAAWS,EAAgC,IAG5D4H,EAAAtH,UAAA6H,cAAA,WACE,IAAMM,EACJ3J,KAAKuB,OAAOpB,UAAqC,WAAzBH,KAAKuB,OAAOpB,SAChCyJ,GACH5J,KAAK6J,cAAgB7J,KAAK6J,YAAY/C,SAAS9E,QAEzB,IAArBhC,KAAKmJ,cACPnJ,KAAKgH,iBAED2C,GAAqBC,IACvB5J,KAAKgJ,gBACF/B,OAAOlD,GACPmD,GAAG,QACH5G,KAAK,CAAEqB,WAAY3B,KAAKuB,OAAOd,WAClCT,KAAK6J,YAAc7J,KAAKgJ,gBAAgB7B,iBAK9C2B,EAAAtH,UAAAgI,cAAA,WAAA,IAAA9H,EAAA1B,KACE,GAAKA,KAAK6J,YAAV,CAGA7J,KAAK6J,YAAY/C,SAAS9E,SAAU,EACpC,IAAM8H,EAAW9J,KAAKuB,OAAOd,SAAWS,EAAgC,EACxEa,WAAW,WAAM,OAAAL,EAAKsF,kBAAkB8C,KAG1ChB,EAAAtH,UAAA+H,WAAA,SAAWL,GACT,IAAMa,EAAc/J,KAAKgK,QAAQhK,KAAKgK,QAAQzC,OAAS,GACjD0C,EAAa,IAAIxK,EACjByK,EAAoBH,EACvBI,QAAQ,CAAEA,QAASlK,EAAcmK,SAAUpK,KAAKuB,SAChD4I,QAAQ,CAAEA,QAAS1K,EAAY2K,SAAUH,IACzChD,OAAO7F,GACP8F,GAAG,QACH5G,KAAK,CAAC4I,QAAOA,EAAEvH,WAAY3B,KAAKuB,OAAOd,SAAUC,aAAcV,KAAKuB,OAAOb,aAAc0B,eAAgBpC,OAO5G,OANAkK,EAAkBpD,SAAS9D,MAAQhD,KAAKqC,iBACxC4H,EAAWrH,KAAO,WAChBsH,EAAkBpD,SAASlE,QAE7BqH,EAAWf,QAAUa,EAAYM,qBAAuB,KAEjDJ,GAGTnB,EAAAtH,UAAAiI,WAAA,SAAWzG,GACT,IAAM+G,EAAc/J,KAAKgK,QAAQhH,EAAQ,GACrC+G,GACFA,EAAYnH,QAIhBkG,EAAAtH,UAAAa,eAAA,WACE,OAAOrC,KAAKmJ,aAGdL,EAAAtH,UAAAmB,iBAAA,SAAiB2H,GACftK,KAAKsJ,kBAAoBgB,GAG3BxB,EAAAtH,UAAAwF,eAAA,WACEhH,KAAKgJ,gBAAgBpG,OACrB5C,KAAK6J,YAAc,MAMrBf,EAAAtH,UAAAc,eAAA,WACEtC,KAAKwH,kBAAoBtF,SAASC,KAAKsF,YAAcC,OAAOC,WAC5D3H,KAAK4H,eAAiB5H,KAAK6H,qBAG7BiB,EAAAtH,UAAAe,aAAA,WACOL,WAILlC,KAAK8H,oBAAsBC,SACzBL,OACGM,iBAAiB9F,SAASC,MAC1B8F,iBAAiB,kBAAoB,IACxC,IAGEjI,KAAKwH,oBACPtF,SAASC,KAAK+F,MAAMC,aAAkBnI,KAAK8H,oBACzC9H,KAAK4H,eAAc,QAIjBkB,EAAAtH,UAAAiF,0BACNvE,SAASC,KAAK+F,MAAMC,aAAkBnI,KAAK8H,oBAAmB,MAIxDgB,EAAAtH,UAAAqG,6BACN,IAAMO,EAAYpI,KAAKsB,UAAU+G,cAAc,OAC/CrI,KAAKsB,UAAUM,SAASwG,EAAWzH,EAAWC,oBAC9CZ,KAAKsB,UAAU8E,YAAYlE,SAASC,KAAMiG,GAC1C,IAAMR,EAAiBQ,EAAUE,YAAcF,EAAUX,YAGzD,OAFAzH,KAAKsB,UAAUiH,YAAYrG,SAASC,KAAMiG,GAEnCR,GAGDkB,EAAAtH,UAAA4H,0BACN,IAAMmB,EAASvK,KAAK0E,IAAIG,aACtB,KACA,KACA,MAEF7E,KAAKwK,UAAUD,EAAOE,aAAczK,KAAKqF,QACzCrF,KAAKwK,UAAUD,EAAO/D,QAASxG,KAAKwG,SACpCxG,KAAKwK,UAAUD,EAAOG,aAAc1K,KAAK+F,QACzC/F,KAAKwK,UAAUD,EAAO3D,SAAU5G,KAAK4G,UACrC5G,KAAKgK,QAAQW,KAAKJ,IAGZzB,EAAAtH,UAAAkI,uBAAc1G,GACpBhD,KAAKgK,QAAQY,OAAO5H,EAAQ,EAAG,GAC/BhD,KAAKgK,QAAQa,QACX,SAACN,EAAkDO,GACjDP,EAAOzD,SAAS9D,MAAQ8H,EAAI,KAK1BhC,EAAAtH,UAAAgJ,mBAAUO,EAAyB7D,cACzC6D,EAAKC,UAAU,WACb9D,EAAG5B,KAAK5D,EAAK4H,0CA3LlB3J,EAAAA,sDAdCsL,EAAAA,wBAGwBtC,EAAAA,4BAT1B,GCAAuC,EAAA,gCAmBSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,CAACvC,EAAgBH,EAAAA,uBAAwB2C,EAAAA,0CAbzDC,EAAAA,SAAQlI,KAAA,CAAC,CACRmI,aAAc,CACZzH,EACAS,EACApD,GAEFqK,QAAS,CAAC1H,EAAwBS,GAClCkH,gBAAiB,CAAC3H,EAAwB3C,SAhB5C","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BsModalRef {\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   */\n  content?: any | null;\n\n  /**\n   * Hides the modal\n   */\n  hide: () => void = Function;\n}\n","export class ModalBackdropOptions {\n  animate = true;\n\n  constructor(options: ModalBackdropOptions) {\n    Object.assign(this, options);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ModalOptions {\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   */\n  backdrop?: boolean | 'static';\n  /**\n   * Closes the modal when escape key is pressed.\n   */\n  keyboard?: boolean;\n\n  focus?: boolean;\n  /**\n   * Shows the modal when initialized.\n   */\n  show?: boolean;\n  /**\n   * Ignore the backdrop click\n   */\n  ignoreBackdropClick?: boolean;\n  /**\n   * Css class for opened modal\n   */\n  class?: string;\n  /**\n   * Toggle animation\n   */\n  animated?: boolean;\n  /**\n   * Modal data\n   */\n  initialState?: Object;\n}\n\n\nexport const modalConfigDefaults: ModalOptions = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n\nexport const CLASS_NAME: any = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in', // bs3\n  SHOW: 'show' // bs4\n};\n\nexport const SELECTOR: any = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n\nexport const TRANSITION_DURATIONS: any = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n\nexport const DISMISS_REASONS = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc'\n};\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2\n} from '@angular/core';\nimport {\n  CLASS_NAME,\n  DISMISS_REASONS,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalService } from './bs-modal.service';\nimport { isBs3 } from 'ngx-bootstrap/utils';\n\n@Component({\n  selector: 'modal-container',\n  template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'modal',\n    role: 'dialog',\n    tabindex: '-1',\n    '[attr.aria-modal]': 'true'\n  }\n})\nexport class ModalContainerComponent implements OnInit, OnDestroy {\n  config: ModalOptions;\n  isShown = false;\n  level: number;\n  isAnimated: boolean;\n  bsModalService: BsModalService;\n  private isModalHiding = false;\n\n  constructor(options: ModalOptions,\n              protected _element: ElementRef,\n              private _renderer: Renderer2) {\n    this.config = Object.assign({}, options);\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this._renderer.addClass(\n        this._element.nativeElement,\n        CLASS_NAME.FADE\n      );\n    }\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    setTimeout(() => {\n      this.isShown = true;\n      this._renderer.addClass(\n        this._element.nativeElement,\n        isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n      );\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.bsModalService.getModalsCount() === 1) {\n        this.bsModalService.checkScrollbar();\n        this.bsModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n    }\n    if (this._element.nativeElement) {\n      this._element.nativeElement.focus();\n    }\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: any): void {\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      event.target !== this._element.nativeElement\n    ) {\n      return;\n    }\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n\n  @HostListener('window:keydown.esc', ['$event'])\n  onEsc(event: any): void {\n    if (!this.isShown) {\n      return;\n    }\n\n    if (event.keyCode === 27) {\n      event.preventDefault();\n    }\n\n    if (\n      this.config.keyboard &&\n      this.level === this.bsModalService.getModalsCount()\n    ) {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n\n  hide(): void {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(\n      this._element.nativeElement,\n      isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW\n    );\n    setTimeout(() => {\n      this.isShown = false;\n      if (\n        document &&\n        document.body &&\n        this.bsModalService.getModalsCount() === 1\n      ) {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n      }\n      this.bsModalService.hide(this.level);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n  }\n}\n","import { Component, ElementRef, OnInit, Renderer2 } from '@angular/core';\n\nimport { CLASS_NAME } from './modal-options.class';\nimport { isBs3, Utils } from 'ngx-bootstrap/utils';\n\n\n/** This component will be added as background layout for modals if enabled */\n@Component({\n  selector: 'bs-modal-backdrop',\n  template: ' ',\n  host: { class: CLASS_NAME.BACKDROP }\n})\nexport class ModalBackdropComponent implements OnInit {\n  get isAnimated(): boolean {\n    return this._isAnimated;\n  }\n\n  set isAnimated(value: boolean) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  set isShown(value: boolean) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    } else {\n      this.renderer.removeClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.IN}`\n      );\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      } else {\n        this.renderer.removeClass(\n          this.element.nativeElement,\n          `${CLASS_NAME.SHOW}`\n        );\n      }\n    }\n  }\n\n  element: ElementRef;\n  renderer: Renderer2;\n\n  protected _isAnimated: boolean;\n  protected _isShown = false;\n\n  constructor(element: ElementRef, renderer: Renderer2) {\n    this.element = element;\n    this.renderer = renderer;\n  }\n\n  ngOnInit(): void {\n    if (this.isAnimated) {\n      this.renderer.addClass(\n        this.element.nativeElement,\n        `${CLASS_NAME.FADE}`\n      );\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\n","/* tslint:disable:max-file-line-count */\n// todo: should we support enforce focus in?\n// todo: in original bs there are was a way to prevent modal from showing\n// todo: original modal had resize events\n\nimport {\n  ComponentRef, Directive, ElementRef, EventEmitter, HostListener, Input,\n  OnDestroy, OnInit, Output, Renderer2, ViewContainerRef\n} from '@angular/core';\n\nimport { document, window, isBs3, Utils } from 'ngx-bootstrap/utils';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport {\n  CLASS_NAME, DISMISS_REASONS, modalConfigDefaults, ModalOptions\n} from './modal-options.class';\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/loader';\n\nconst TRANSITION_DURATION = 300;\nconst BACKDROP_TRANSITION_DURATION = 150;\n\n/** Mark any code with directive to show it's content in modal */\n@Directive({\n  selector: '[bsModal]',\n  exportAs: 'bs-modal'\n})\nexport class ModalDirective implements OnDestroy, OnInit {\n  /** allows to set modal configuration via element property */\n  @Input()\n  set config(conf: ModalOptions) {\n    this._config = this.getConfig(conf);\n  }\n\n  get config(): ModalOptions {\n    return this._config;\n  }\n\n  /** This event fires immediately when the `show` instance method is called. */\n  @Output()\n  onShow: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   */\n  @Output()\n  onShown: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired immediately when\n   * the hide instance method has been called.\n   */\n  @Output()\n  onHide: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n  /** This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   */\n  @Output()\n  onHidden: EventEmitter<ModalDirective> = new EventEmitter<ModalDirective>();\n\n  /** This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `null`\n   * (if modal was closed by direct call of `.hide()`).\n   */\n  dismissReason: string;\n\n  get isShown(): boolean {\n    return this._isShown;\n  }\n\n  protected _config: ModalOptions;\n  protected _isShown = false;\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n  protected scrollbarWidth = 0;\n\n  protected timerHideModal: any = 0;\n  protected timerRmBackDrop: any = 0;\n\n  // reference to backdrop component\n  protected backdrop: ComponentRef<ModalBackdropComponent>;\n  private _backdrop: ComponentLoader<ModalBackdropComponent>;\n\n  private isNested = false;\n\n  constructor(private _element: ElementRef,\n              _viewContainerRef: ViewContainerRef,\n              private _renderer: Renderer2,\n              clf: ComponentLoaderFactory) {\n    this._backdrop = clf.createLoader<ModalBackdropComponent>(\n      _element,\n      _viewContainerRef,\n      _renderer\n    );\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: any): void {\n    if (\n      this.config.ignoreBackdropClick ||\n      this.config.backdrop === 'static' ||\n      event.target !== this._element.nativeElement\n    ) {\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n\n  // todo: consider preventing default and stopping propagation\n  @HostListener('keydown.esc', ['$event'])\n  onEsc(event: any): void {\n    if (!this._isShown) {\n      return;\n    }\n\n    if (event.keyCode === 27) {\n      event.preventDefault();\n    }\n\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n\n  ngOnDestroy(): any {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n\n  ngOnInit(): any {\n    this._config = this._config || this.getConfig();\n    setTimeout(() => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n\n  /* Public methods */\n\n  /** Allows to manually toggle modal visibility */\n  toggle(): void {\n    return this._isShown ? this.hide() : this.show();\n  }\n\n  /** Allows to manually open modal */\n  show(): void {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = true;\n\n    this.checkScrollbar();\n    this.setScrollbar();\n\n    if (document && document.body) {\n      if (document.body.classList.contains(CLASS_NAME.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n      }\n    }\n\n    this.showBackdrop(() => {\n      this.showElement();\n    });\n  }\n\n  /** Allows to manually close modal */\n  hide(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onHide.emit(this);\n\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    // this._addClassIn = false;\n\n    if (this._config.animated) {\n      this.timerHideModal = setTimeout(\n        () => this.hideModal(),\n        TRANSITION_DURATION\n      );\n    } else {\n      this.hideModal();\n    }\n  }\n\n  /** Private methods @internal */\n  protected getConfig(config?: ModalOptions): ModalOptions {\n    return Object.assign({}, modalConfigDefaults, config);\n  }\n\n  /**\n   *  Show dialog\n   *  @internal\n   */\n  protected showElement(): void {\n    // todo: replace this with component loader usage\n    if (\n      !this._element.nativeElement.parentNode ||\n      this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE\n    ) {\n      // don't move modals dom position\n      if (document && document.body) {\n        document.body.appendChild(this._element.nativeElement);\n      }\n    }\n\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'false'\n    );\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-modal',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'block'\n    );\n    this._renderer.setProperty(\n      this._element.nativeElement,\n      'scrollTop',\n      0\n    );\n\n    if (this._config.animated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n\n    // this._addClassIn = true;\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n\n    if (this._config.animated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n\n  /** @internal */\n  protected hideModal(): void {\n    this._renderer.setAttribute(\n      this._element.nativeElement,\n      'aria-hidden',\n      'true'\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'display',\n      'none'\n    );\n    this.showBackdrop(() => {\n      if (!this.isNested) {\n        if (document && document.body) {\n          this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n\n  // todo: original show was calling a callback when done, but we can use\n  // promise\n  /** @internal */\n  protected showBackdrop(callback?: Function): void {\n    if (\n      this._isShown &&\n      this.config.backdrop &&\n      (!this.backdrop || !this.backdrop.instance.isShown)\n    ) {\n      this.removeBackdrop();\n      this._backdrop\n        .attach(ModalBackdropComponent)\n        .to('body')\n        .show({isAnimated: this._config.animated});\n      this.backdrop = this._backdrop._componentRef;\n\n      if (!callback) {\n        return;\n      }\n\n      if (!this._config.animated) {\n        callback();\n\n        return;\n      }\n\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n\n      const callbackRemove = () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = setTimeout(\n          callbackRemove,\n          BACKDROP_TRANSITION_DURATION\n        );\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  /** @internal */\n  protected removeBackdrop(): void {\n    this._backdrop.hide();\n  }\n\n  /** Events tricks */\n\n  // no need for it\n  // protected setEscapeEvent():void {\n  //   if (this._isShown && this._config.keyboard) {\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n  //       if (event.which === 27) {\n  //         this.hide()\n  //       }\n  //     })\n  //\n  //   } else if (!this._isShown) {\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\n  //   }\n  // }\n\n  // protected setResizeEvent():void {\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n  // if (this._isShown) {\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n  // } else {\n  //   $(window).off(Event.RESIZE)\n  // }\n  // }\n\n  protected focusOtherModal() {\n    if (this._element.nativeElement.parentElement == null) return;\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n    if (!otherOpenedModals.length) {\n      return;\n    }\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\n  }\n\n  /** @internal */\n  protected resetAdjustments(): void {\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingLeft',\n      ''\n    );\n    this._renderer.setStyle(\n      this._element.nativeElement,\n      'paddingRight',\n      ''\n    );\n  }\n\n  /** Scroll bar tricks */\n  /** @internal */\n  protected checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  protected setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || 0,\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n      this.scrollbarWidth}px`;\n    }\n  }\n\n  protected resetScrollbar(): void {\n    document.body.style.paddingRight = this.originalBodyPadding + 'px';\n  }\n\n  // thx d.walsh\n  protected getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n}\n","import {\n  ComponentRef,\n  Injectable,\n  TemplateRef,\n  EventEmitter,\n  Renderer2,\n  RendererFactory2\n} from '@angular/core';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'ngx-bootstrap/loader';\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalContainerComponent } from './modal-container.component';\nimport {\n  CLASS_NAME,\n  modalConfigDefaults,\n  ModalOptions,\n  TRANSITION_DURATIONS\n} from './modal-options.class';\nimport { BsModalRef } from './bs-modal-ref.service';\n\n@Injectable()\nexport class BsModalService {\n  // constructor props\n  config: ModalOptions = modalConfigDefaults;\n\n  onShow: EventEmitter<any> = new EventEmitter();\n  onShown: EventEmitter<any> = new EventEmitter();\n  onHide: EventEmitter<any> = new EventEmitter();\n  onHidden: EventEmitter<any> = new EventEmitter();\n\n  protected isBodyOverflowing = false;\n  protected originalBodyPadding = 0;\n\n  protected scrollbarWidth = 0;\n\n  protected backdropRef: ComponentRef<ModalBackdropComponent>;\n  private _backdropLoader: ComponentLoader<ModalBackdropComponent>;\n  private modalsCount = 0;\n  private lastDismissReason = '';\n\n  private loaders: ComponentLoader<ModalContainerComponent>[] = [];\n\n  private _renderer: Renderer2;\n\n  constructor(rendererFactory: RendererFactory2, private clf: ComponentLoaderFactory) {\n    this._backdropLoader = this.clf.createLoader<ModalBackdropComponent>(\n      null,\n      null,\n      null\n    );\n    this._renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /** Shows a modal */\n  show(content: string | TemplateRef<any> | any, config?: ModalOptions): BsModalRef {\n    this.modalsCount++;\n    this._createLoaders();\n    this.config = Object.assign({}, modalConfigDefaults, config);\n    this._showBackdrop();\n    this.lastDismissReason = null;\n\n    return this._showModal(content);\n  }\n\n  hide(level: number) {\n    if (this.modalsCount === 1) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 ? this.modalsCount - 1 : 0;\n    setTimeout(() => {\n      this._hideModal(level);\n      this.removeLoaders(level);\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n  }\n\n  _showBackdrop(): void {\n    const isBackdropEnabled =\n      this.config.backdrop || this.config.backdrop === 'static';\n    const isBackdropInDOM =\n      !this.backdropRef || !this.backdropRef.instance.isShown;\n\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader\n          .attach(ModalBackdropComponent)\n          .to('body')\n          .show({ isAnimated: this.config.animated });\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n\n  _hideBackdrop(): void {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n    setTimeout(() => this.removeBackdrop(), duration);\n  }\n\n  _showModal(content: any): BsModalRef {\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    const bsModalRef = new BsModalRef();\n    const modalContainerRef = modalLoader\n      .provide({ provide: ModalOptions, useValue: this.config })\n      .provide({ provide: BsModalRef, useValue: bsModalRef })\n      .attach(ModalContainerComponent)\n      .to('body')\n      .show({content, isAnimated: this.config.animated, initialState: this.config.initialState, bsModalService: this});\n    modalContainerRef.instance.level = this.getModalsCount();\n    bsModalRef.hide = () => {\n      modalContainerRef.instance.hide();\n    };\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\n\n    return bsModalRef;\n  }\n\n  _hideModal(level: number): void {\n    const modalLoader = this.loaders[level - 1];\n    if (modalLoader) {\n      modalLoader.hide();\n    }\n  }\n\n  getModalsCount(): number {\n    return this.modalsCount;\n  }\n\n  setDismissReason(reason: string) {\n    this.lastDismissReason = reason;\n  }\n\n  removeBackdrop(): void {\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n\n  /** AFTER PR MERGE MODAL.COMPONENT WILL BE USING THIS CODE */\n  /** Scroll bar tricks */\n  /** @internal */\n  checkScrollbar(): void {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n\n  setScrollbar(): void {\n    if (!document) {\n      return;\n    }\n\n    this.originalBodyPadding = parseInt(\n      window\n        .getComputedStyle(document.body)\n        .getPropertyValue('padding-right') || '0',\n      10\n    );\n\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding +\n        this.scrollbarWidth}px`;\n    }\n  }\n\n  private resetScrollbar(): void {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n\n  // thx d.walsh\n  private getScrollbarWidth(): number {\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n\n    return scrollbarWidth;\n  }\n\n  private _createLoaders(): void {\n    const loader = this.clf.createLoader<ModalContainerComponent>(\n      null,\n      null,\n      null\n    );\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n\n  private removeLoaders(level: number): void {\n    this.loaders.splice(level - 1, 1);\n    this.loaders.forEach(\n      (loader: ComponentLoader<ModalContainerComponent>, i: number) => {\n        loader.instance.level = i + 1;\n      }\n    );\n  }\n\n  private copyEvent(from: EventEmitter<any>, to: EventEmitter<any>) {\n    from.subscribe(() => {\n      to.emit(this.lastDismissReason);\n    });\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ModalBackdropComponent } from './modal-backdrop.component';\nimport { ModalDirective } from './modal.directive';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/loader';\nimport { ModalContainerComponent } from './modal-container.component';\nimport { BsModalService } from './bs-modal.service';\n\n@NgModule({\n  declarations: [\n    ModalBackdropComponent,\n    ModalDirective,\n    ModalContainerComponent\n  ],\n  exports: [ModalBackdropComponent, ModalDirective],\n  entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n})\nexport class ModalModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"]}